{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar validation_1 = require(\"@helsenorge/toolkit/components/molecules/form/validation\");\n\nvar year_input_1 = require(\"@helsenorge/toolkit/components/molecules/year-input\");\n\nvar util_1 = require(\"../../../util\");\n\nvar extension_1 = require(\"../../../util/extension\");\n\nvar textview_1 = __importDefault(require(\"../textview\"));\n\nvar DateYearInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(DateYearInput, _React$Component);\n\n  var _super = _createSuper(DateYearInput);\n\n  function DateYearInput() {\n    var _this;\n\n    _classCallCheck(this, DateYearInput);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onYearChange = function (year) {\n      _this.props.onDateValueChange(year === 0 ? '' : year.toString());\n    };\n\n    _this.getReadonlyValue = function () {\n      var _a, _b;\n\n      var ikkeBesvartText = ((_a = _this.props.resources) === null || _a === void 0 ? void 0 : _a.ikkeBesvart) || '';\n      return ((_b = _this.props.yearValue) === null || _b === void 0 ? void 0 : _b.toString()) || ikkeBesvartText;\n    };\n\n    return _this;\n  }\n\n  _createClass(DateYearInput, [{\n    key: \"getYearInputResources\",\n    value: function getYearInputResources() {\n      var _this$props = this.props,\n          resources = _this$props.resources,\n          item = _this$props.item;\n      var validationErrorText = extension_1.getValidationTextExtension(item);\n      return {\n        errorInvalidYear: validationErrorText ? validationErrorText : (resources === null || resources === void 0 ? void 0 : resources.year_field_invalid) || '',\n        errorRequiredYear: (resources === null || resources === void 0 ? void 0 : resources.year_field_required) || '',\n        errorYearBeforeMinDate: (resources === null || resources === void 0 ? void 0 : resources.year_field_mindate) || '',\n        errorYearAfterMaxDate: (resources === null || resources === void 0 ? void 0 : resources.year_field_maxdate) || ''\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a, _b;\n\n      if (this.props.pdf || util_1.isReadOnly(this.props.item)) {\n        return React.createElement(textview_1.default, {\n          id: this.props.id,\n          item: this.props.item,\n          value: this.getReadonlyValue(),\n          onRenderMarkdown: this.props.onRenderMarkdown\n        }, this.props.children);\n      }\n\n      return React.createElement(validation_1.Validation, Object.assign({}, this.props), React.createElement(year_input_1.YearInput, {\n        id: \"\".concat(util_1.getId(this.props.id), \"-year_input\"),\n        errorResources: this.getYearInputResources(),\n        label: this.props.label,\n        subLabel: this.props.subLabel,\n        isRequired: util_1.isRequired(this.props.item),\n        placeholder: extension_1.getPlaceholder(this.props.item),\n        maximumYear: (_a = this.props.maxDate) === null || _a === void 0 ? void 0 : _a.year(),\n        minimumYear: (_b = this.props.minDate) === null || _b === void 0 ? void 0 : _b.year(),\n        value: this.props.yearValue,\n        className: this.props.className,\n        onChange: this.onYearChange,\n        helpButton: this.props.helpButton,\n        helpElement: this.props.helpElement\n      }));\n    }\n  }]);\n\n  return DateYearInput;\n}(React.Component);\n\nexports.DateYearInput = DateYearInput;","map":null,"metadata":{},"sourceType":"script"}