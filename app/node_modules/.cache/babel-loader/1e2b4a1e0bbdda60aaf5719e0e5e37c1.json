{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.viewDetailsQuery = exports.startingPageSize = exports.startingPage = exports.searchQuery = exports.pageSizeQuery = exports.pageQuery = exports.matchesOnName = exports.getStringParam = exports.getNumberParam = exports.getNextUrlOnSearch = void 0;\nvar pageSizeQuery = 'pageSize';\nexports.pageSizeQuery = pageSizeQuery;\nvar pageQuery = 'page';\nexports.pageQuery = pageQuery;\nvar searchQuery = 'search';\nexports.searchQuery = searchQuery;\nvar viewDetailsQuery = 'viewDetails';\nexports.viewDetailsQuery = viewDetailsQuery;\n\nvar getStringParam = function getStringParam(location, paramKey) {\n  var sParams = new URLSearchParams(location.search);\n  return sParams.get(paramKey);\n};\n\nexports.getStringParam = getStringParam;\n\nvar getNumberParam = function getNumberParam(location, paramKey) {\n  var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var sParams = new URLSearchParams(location.search);\n  var rawParamVal = sParams.get(paramKey);\n  var paramVal = rawParamVal ? Number(rawParamVal) : NaN;\n  return isNaN(paramVal) ? fallback : paramVal;\n};\n\nexports.getNumberParam = getNumberParam;\nvar startingPage = 1;\nexports.startingPage = startingPage;\nvar startingPageSize = 20;\nexports.startingPageSize = startingPageSize;\n\nvar getNextUrlOnSearch = function getNextUrlOnSearch(event, location, match) {\n  var searchText = event.target.value;\n  var nextUrl = match.path;\n  var currentSParams = new URLSearchParams(location.search);\n\n  if (searchText) {\n    currentSParams.set(searchQuery, searchText);\n    currentSParams.set(pageQuery, startingPage.toString());\n    currentSParams.set(pageSizeQuery, startingPageSize.toString());\n  } else {\n    currentSParams[\"delete\"](searchQuery);\n  }\n\n  nextUrl = ''.concat(nextUrl, '?').concat(currentSParams.toString());\n  return nextUrl;\n};\n\nexports.getNextUrlOnSearch = getNextUrlOnSearch;\n\nvar matchesOnName = function matchesOnName(obj, search) {\n  var name = obj.name;\n\n  if (name === undefined) {\n    return false;\n  }\n\n  return name.toLowerCase().includes(search.toLowerCase());\n};\n\nexports.matchesOnName = matchesOnName;","map":null,"metadata":{},"sourceType":"script"}