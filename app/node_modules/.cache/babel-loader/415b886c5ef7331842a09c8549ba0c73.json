{"ast":null,"code":"var _jsxFileName = \"/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/components/page/Sidebar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Layout, Menu } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { URL_HOME } from '../../../constants';\nimport { getRoutes } from '../../../routes';\nimport { getActivePath } from './utils';\nimport { MAIN_LOGO_SRC, OPENSRP_WEB_VERSION } from '../../../configs/env';\nimport { useTranslation } from '../../../mls';\nimport './Sidebar.css';\nimport { RoleContext } from '@opensrp/rbac';\n/** interface for SidebarProps */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** default props for Sidebar */\nconst defaultSidebarProps = {\n  authenticated: false\n};\n/** The Sidebar component */\n\nexport const SidebarComponent = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    extraData\n  } = props;\n  const {\n    roles\n  } = extraData;\n  let location = useLocation();\n  const userRole = useContext(RoleContext);\n  const routes = React.useMemo(() => getRoutes(roles, t, userRole), [roles, t, userRole]);\n  const sidebaritems = React.useMemo(() => {\n    function mapChildren(route) {\n      if (route.children) {\n        var _route$otherProps;\n\n        return /*#__PURE__*/_jsxDEV(Menu.SubMenu, {\n          icon: (_route$otherProps = route.otherProps) === null || _route$otherProps === void 0 ? void 0 : _route$otherProps.icon,\n          title: route.title,\n          children: route.children.map(mapChildren)\n        }, route.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this);\n      } else if (route.url) {\n        var _route$otherProps2;\n\n        return /*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: (_route$otherProps2 = route.otherProps) === null || _route$otherProps2 === void 0 ? void 0 : _route$otherProps2.icon,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"admin-link\",\n            to: route.url,\n            children: route.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, route.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: route.title\n        }, route.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      }\n    }\n\n    return routes.map(mapChildren);\n  }, [routes]);\n  const {\n    activeKey,\n    activePaths\n  } = getActivePath(location.pathname, routes);\n  const [collapsedKeys, setCollapsedKeys] = useState([]);\n  useEffect(() => {\n    const {\n      activePaths\n    } = getActivePath(location.pathname, routes);\n    setCollapsedKeys(activePaths.concat(...collapsedKeys));\n  }, [location.pathname, routes]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Layout.Sider, {\n    width: \"275px\",\n    className: \"layout-sider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: URL_HOME,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: MAIN_LOGO_SRC,\n          alt: \"The logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), OPENSRP_WEB_VERSION.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sidebar-version\",\n        children: OPENSRP_WEB_VERSION\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      theme: \"dark\",\n      selectedKeys: [activeKey !== null && activeKey !== void 0 ? activeKey : ''],\n      openKeys: collapsedKeys,\n      defaultOpenKeys: activePaths,\n      defaultSelectedKeys: [activeKey !== null && activeKey !== void 0 ? activeKey : ''],\n      onOpenChange: openKeys => setCollapsedKeys(openKeys),\n      mode: \"inline\",\n      className: \"menu-dark\",\n      children: sidebaritems\n    }, \"main-menu\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SidebarComponent, \"DzB7iyObzTu1ipSZmN3PHCPLRyY=\", false, function () {\n  return [useTranslation, useLocation];\n});\n\n_c = SidebarComponent;\nSidebarComponent.defaultProps = defaultSidebarProps;\nconst Sidebar = withRouter(SidebarComponent);\n_c2 = Sidebar;\nexport default Sidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SidebarComponent\");\n$RefreshReg$(_c2, \"Sidebar\");","map":{"version":3,"sources":["/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/components/page/Sidebar/index.tsx"],"names":["React","useContext","useEffect","useState","withRouter","Layout","Menu","Link","useLocation","URL_HOME","getRoutes","getActivePath","MAIN_LOGO_SRC","OPENSRP_WEB_VERSION","useTranslation","RoleContext","defaultSidebarProps","authenticated","SidebarComponent","props","t","extraData","roles","location","userRole","routes","useMemo","sidebaritems","mapChildren","route","children","otherProps","icon","title","map","key","url","activeKey","activePaths","pathname","collapsedKeys","setCollapsedKeys","concat","length","openKeys","defaultProps","Sidebar"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { Dictionary } from '@onaio/utils';\nimport { Layout, Menu } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { URL_HOME } from '../../../constants';\nimport { Route, getRoutes } from '../../../routes';\nimport { getActivePath } from './utils';\nimport { MAIN_LOGO_SRC, OPENSRP_WEB_VERSION } from '../../../configs/env';\nimport { useTranslation } from '../../../mls';\nimport './Sidebar.css';\nimport { RoleContext } from '@opensrp/rbac';\n\n/** interface for SidebarProps */\nexport interface SidebarProps extends RouteComponentProps {\n  authenticated: boolean;\n  extraData: { [key: string]: Dictionary };\n}\n\n/** default props for Sidebar */\nconst defaultSidebarProps: Partial<SidebarProps> = {\n  authenticated: false,\n};\n\n/** The Sidebar component */\nexport const SidebarComponent: React.FC<SidebarProps> = (props: SidebarProps) => {\n  const { t } = useTranslation();\n  const { extraData } = props;\n  const { roles } = extraData;\n  let location = useLocation();\n  const userRole = useContext(RoleContext);\n\n  const routes = React.useMemo(\n    () => getRoutes(roles as string[], t, userRole),\n    [roles, t, userRole]\n  );\n\n  const sidebaritems: JSX.Element[] = React.useMemo(() => {\n    function mapChildren(route: Route) {\n      if (route.children) {\n        return (\n          <Menu.SubMenu key={route.key} icon={route.otherProps?.icon} title={route.title}>\n            {route.children.map(mapChildren)}\n          </Menu.SubMenu>\n        );\n      } else if (route.url) {\n        return (\n          <Menu.Item key={route.key} icon={route.otherProps?.icon}>\n            <Link className=\"admin-link\" to={route.url}>\n              {route.title}\n            </Link>\n          </Menu.Item>\n        );\n      } else {\n        return <Menu.Item key={route.key}>{route.title}</Menu.Item>;\n      }\n    }\n\n    return routes.map(mapChildren);\n  }, [routes]);\n\n  const { activeKey, activePaths } = getActivePath(location.pathname, routes);\n\n  const [collapsedKeys, setCollapsedKeys] = useState<string[]>([]);\n\n  useEffect(() => {\n    const { activePaths } = getActivePath(location.pathname, routes);\n    setCollapsedKeys(activePaths.concat(...collapsedKeys));\n  }, [location.pathname, routes]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Layout.Sider width=\"275px\" className=\"layout-sider\">\n      <div className=\"logo\">\n        <Link to={URL_HOME}>\n          <img src={MAIN_LOGO_SRC} alt=\"The logo\" />\n        </Link>\n        {OPENSRP_WEB_VERSION.length > 0 ? (\n          <p className=\"sidebar-version\">{OPENSRP_WEB_VERSION}</p>\n        ) : null}\n      </div>\n\n      <Menu\n        key=\"main-menu\"\n        theme=\"dark\"\n        selectedKeys={[activeKey ?? '']}\n        openKeys={collapsedKeys}\n        defaultOpenKeys={activePaths}\n        defaultSelectedKeys={[activeKey ?? '']}\n        onOpenChange={(openKeys) => setCollapsedKeys(openKeys)}\n        mode=\"inline\"\n        className=\"menu-dark\"\n      >\n        {sidebaritems}\n      </Menu>\n    </Layout.Sider>\n  );\n};\n\nSidebarComponent.defaultProps = defaultSidebarProps;\n\nconst Sidebar = withRouter(SidebarComponent);\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}