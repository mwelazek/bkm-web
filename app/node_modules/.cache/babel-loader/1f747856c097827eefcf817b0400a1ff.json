{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst moment_1 = __importDefault(require(\"moment\"));\n\nconst validation_1 = require(\"@helsenorge/toolkit/components/molecules/form/validation\");\n\nconst year_month_input_1 = require(\"@helsenorge/toolkit/components/molecules/year-month-input\");\n\nconst util_1 = require(\"../../../util\");\n\nconst extension_1 = require(\"../../../util/extension\");\n\nconst textview_1 = __importDefault(require(\"../textview\"));\n\nclass DateYearMonthInput extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onYearMonthChange = newValue => {\n      if (!newValue.year && (newValue.month === -1 || newValue.month === null)) {\n        this.props.onDateValueChange('');\n      } else {\n        const newMonthValue = newValue.month === null || newValue.month === -1 ? '' : `0${newValue.month + 1}`.slice(-2);\n        this.props.onDateValueChange(`${newValue.year}-${newMonthValue}`);\n      }\n    };\n\n    this.getValue = () => {\n      if (!this.props.yearMonthValue) {\n        return undefined;\n      } else {\n        const monthPart = this.props.yearMonthValue.split('-')[1];\n        const yearValue = parseInt(this.props.yearMonthValue.split('-')[0]) || 0;\n        const monthValue = monthPart === '' || monthPart === undefined ? null : parseInt(this.props.yearMonthValue.split('-')[1]) - 1;\n        return {\n          year: yearValue,\n          month: monthValue\n        };\n      }\n    };\n\n    this.getMinMaxDate = dateValue => {\n      return dateValue ? {\n        year: dateValue.year(),\n        month: dateValue.month()\n      } : undefined;\n    };\n\n    this.getReadonlyValue = () => {\n      var _a;\n\n      const ikkeBesvartText = ((_a = this.props.resources) === null || _a === void 0 ? void 0 : _a.ikkeBesvart) || '';\n      return this.props.yearMonthValue ? moment_1.default(this.props.yearMonthValue).locale(this.props.locale).format('MMMM YYYY') : ikkeBesvartText;\n    };\n  }\n\n  getYearMonthInputResources() {\n    const {\n      resources,\n      item\n    } = this.props;\n    const validationErrorText = extension_1.getValidationTextExtension(item);\n    return {\n      errorInvalidYearMonth: validationErrorText ? validationErrorText : (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_invalid) || '',\n      errorInvalidYear: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_invalid_year) || '',\n      errorRequiredField: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_required) || '',\n      errorBeforeMinDate: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_mindate) || '',\n      errorAfterMaxDate: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_maxdate) || '',\n      selectYearPlaceholder: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_year_placeholder) || '',\n      selectMonthPlaceholder: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_month_placeholder) || ''\n    };\n  }\n\n  render() {\n    if (this.props.pdf || util_1.isReadOnly(this.props.item)) {\n      return React.createElement(textview_1.default, {\n        id: this.props.id,\n        item: this.props.item,\n        value: this.getReadonlyValue(),\n        onRenderMarkdown: this.props.onRenderMarkdown\n      }, this.props.children);\n    }\n\n    return React.createElement(validation_1.Validation, Object.assign({}, this.props), React.createElement(year_month_input_1.YearMonthInput, {\n      id: `${util_1.getId(this.props.id)}-yearmonth_input`,\n      locale: this.props.locale,\n      resources: this.getYearMonthInputResources(),\n      legend: this.props.label,\n      subLabel: this.props.subLabel,\n      isRequired: util_1.isRequired(this.props.item),\n      placeholder: extension_1.getPlaceholder(this.props.item),\n      maximumYearMonth: this.getMinMaxDate(this.props.maxDate),\n      minimumYearMonth: this.getMinMaxDate(this.props.minDate),\n      value: this.getValue(),\n      className: this.props.className,\n      onChange: this.onYearMonthChange,\n      helpButton: this.props.helpButton,\n      helpElement: this.props.helpElement\n    }));\n  }\n\n}\n\nexports.DateYearMonthInput = DateYearMonthInput;","map":null,"metadata":{},"sourceType":"script"}