{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFhirHumanName = exports.loadAllResources = exports.getObjLike = exports.IdentifierUseCodes = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _ = require(\"..\");\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar getObjLike = function getObjLike(objArr, key, value) {\n  var all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var arr = objArr !== null && objArr !== void 0 ? objArr : [];\n  var result = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    var thisObj = arr[i];\n    var objHasValue = thisObj[key];\n\n    if ((0, _lodash.isEqual)(objHasValue, value)) {\n      result.push(thisObj);\n    }\n\n    if (result.length > 0 && !all) {\n      return result;\n    }\n  }\n\n  return result;\n};\n\nexports.getObjLike = getObjLike;\nvar IdentifierUseCodes;\nexports.IdentifierUseCodes = IdentifierUseCodes;\n\n(function (IdentifierUseCodes) {\n  IdentifierUseCodes[\"USUAL\"] = \"usual\";\n  IdentifierUseCodes[\"OFFICIAL\"] = \"official\";\n  IdentifierUseCodes[\"TEMP\"] = \"temp\";\n  IdentifierUseCodes[\"SECONDARY\"] = \"secondary\";\n  IdentifierUseCodes[\"OLD\"] = \"old\";\n})(IdentifierUseCodes || (exports.IdentifierUseCodes = IdentifierUseCodes = {}));\n\nvar loadAllResources = function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(baseUrl, resourceType) {\n    var extraFilters,\n        summaryFilters,\n        summary,\n        total,\n        fetchAllFilter,\n        _args = arguments;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            extraFilters = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            summaryFilters = _objectSpread({\n              _summary: 'count'\n            }, extraFilters);\n            _context.next = 4;\n            return new _.FHIRServiceClass(baseUrl, resourceType).list(summaryFilters);\n\n          case 4:\n            summary = _context.sent;\n            total = summary.total;\n            fetchAllFilter = _objectSpread(_objectSpread({}, total ? {\n              _count: total\n            } : {}), extraFilters);\n            return _context.abrupt(\"return\", new _.FHIRServiceClass(baseUrl, resourceType).list(fetchAllFilter));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadAllResources(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.loadAllResources = loadAllResources;\n\nvar parseFhirHumanName = function parseFhirHumanName(hName) {\n  if (!hName) {\n    return;\n  }\n\n  var family = hName.family,\n      given = hName.given,\n      suffix = hName.suffix,\n      prefix = hName.prefix;\n\n  var confirmArray = function confirmArray(element) {\n    return element ? Array.isArray(element) ? element : [element] : [];\n  };\n\n  var namesArray = [confirmArray(prefix).join(' '), confirmArray(given).join(' '), confirmArray(family).join(' '), confirmArray(suffix).join(' ')].filter(function (txt) {\n    return !!txt;\n  });\n  return namesArray.join(' ');\n};\n\nexports.parseFhirHumanName = parseFhirHumanName;","map":null,"metadata":{},"sourceType":"script"}