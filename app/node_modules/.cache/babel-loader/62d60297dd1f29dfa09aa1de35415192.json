{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = reducer;\nexports.isAuthenticated = isAuthenticated;\nexports.getExtraData = getExtraData;\nexports.getUser = getUser;\nexports.getRefreshToken = getRefreshToken;\nexports.getAccessOrRefreshTokenStatus = getAccessOrRefreshTokenStatus;\nexports.getAcessTokenExiryStatus = getAcessTokenExiryStatus;\nexports.getRefreshTokenExpiryStatus = getRefreshTokenExpiryStatus;\nexports.getApiToken = getApiToken;\nexports.getAccessToken = getAccessToken;\nexports.isTokenExpired = isTokenExpired;\nexports.getOauthProviderState = getOauthProviderState;\nexports.TokenExpiresAtKeys = exports.logOutUser = exports.updateExtraData = exports.authenticateUser = exports.LOGOUT = exports.UPDATE_DATA = exports.AUTHENTICATE = exports.initialState = exports.TokenStatus = exports.reducerName = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _seamlessImmutable = _interopRequireDefault(require(\"seamless-immutable\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar reducerName = 'session';\nexports.reducerName = reducerName;\nvar TokenStatus;\nexports.TokenStatus = TokenStatus;\n\n(function (TokenStatus) {\n  TokenStatus[\"expired\"] = \"Token Expired\";\n  TokenStatus[\"active\"] = \"Token Active\";\n  TokenStatus[\"timeNotFound\"] = \"Token Expiry Time Not Found\";\n})(TokenStatus || (exports.TokenStatus = TokenStatus = {}));\n\nvar initialState = (0, _seamlessImmutable[\"default\"])({\n  authenticated: false,\n  extraData: {},\n  user: {\n    email: '',\n    gravatar: '',\n    name: '',\n    username: ''\n  }\n});\nexports.initialState = initialState;\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AUTHENTICATE:\n      return state.merge({\n        authenticated: action.authenticated,\n        extraData: _objectSpread({}, action.extraData),\n        user: _objectSpread({}, action.user)\n      });\n\n    case UPDATE_DATA:\n      return state.merge(_objectSpread({}, state, {\n        extraData: _objectSpread({}, state.extraData, {}, action.data)\n      }));\n\n    case LOGOUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nvar AUTHENTICATE = '@onaio/session-reducer/reducer/AUTHENTICATE';\nexports.AUTHENTICATE = AUTHENTICATE;\nvar UPDATE_DATA = '@onaio/session-reducer/reducer/UPDATE_DATA';\nexports.UPDATE_DATA = UPDATE_DATA;\nvar LOGOUT = '@onaio/session-reducer/reducer/LOGOUT';\nexports.LOGOUT = LOGOUT;\n\nvar authenticateUser = function authenticateUser(authenticated, user) {\n  var extraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return {\n    authenticated: authenticated,\n    extraData: extraData,\n    type: AUTHENTICATE,\n    user: user\n  };\n};\n\nexports.authenticateUser = authenticateUser;\n\nvar updateExtraData = function updateExtraData(data) {\n  return {\n    data: data,\n    type: UPDATE_DATA\n  };\n};\n\nexports.updateExtraData = updateExtraData;\n\nvar logOutUser = function logOutUser() {\n  return {\n    type: LOGOUT\n  };\n};\n\nexports.logOutUser = logOutUser;\n\nfunction isAuthenticated(state) {\n  return state[reducerName].authenticated;\n}\n\nfunction getExtraData(state) {\n  return state[reducerName].extraData;\n}\n\nfunction getUser(state) {\n  return state[reducerName].user;\n}\n\nfunction getRefreshToken(state) {\n  var extraData = state[reducerName].extraData;\n\n  if (extraData.oAuth2Data && extraData.oAuth2Data.refresh_token) {\n    return extraData.oAuth2Data.refresh_token;\n  }\n\n  return null;\n}\n\nvar TokenExpiresAtKeys;\nexports.TokenExpiresAtKeys = TokenExpiresAtKeys;\n\n(function (TokenExpiresAtKeys) {\n  TokenExpiresAtKeys[\"acessTokenExpiresAt\"] = \"token_expires_at\";\n  TokenExpiresAtKeys[\"refreshTokenExpiresAt\"] = \"refresh_expires_at\";\n})(TokenExpiresAtKeys || (exports.TokenExpiresAtKeys = TokenExpiresAtKeys = {}));\n\nfunction getAccessOrRefreshTokenStatus(state, TokenExpiryTimeKey) {\n  var extraData = state[reducerName].extraData;\n\n  if (extraData.oAuth2Data && extraData.oAuth2Data[TokenExpiryTimeKey]) {\n    return new Date(Date.now()) >= new Date(extraData.oAuth2Data[TokenExpiryTimeKey]) ? TokenStatus.expired : TokenStatus.active;\n  }\n\n  return TokenStatus.timeNotFound;\n}\n\nfunction getAcessTokenExiryStatus(state) {\n  return getAccessOrRefreshTokenStatus(state, TokenExpiresAtKeys.acessTokenExpiresAt);\n}\n\nfunction getRefreshTokenExpiryStatus(state) {\n  return getAccessOrRefreshTokenStatus(state, TokenExpiresAtKeys.refreshTokenExpiresAt);\n}\n\nfunction getApiToken(state) {\n  var extraData = state[reducerName].extraData;\n  return extraData.api_token || null;\n}\n\nfunction getAccessToken(state) {\n  var checkTokenStatus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var tokenStatus = getAcessTokenExiryStatus(state);\n\n  if (tokenStatus === TokenStatus.expired && checkTokenStatus) {\n    return tokenStatus;\n  }\n\n  var extraData = state[reducerName].extraData;\n\n  if (extraData.oAuth2Data && extraData.oAuth2Data.access_token) {\n    return extraData.oAuth2Data.access_token;\n  }\n\n  return null;\n}\n\nfunction isTokenExpired(state) {\n  return !getAccessToken(state) ? true : getAcessTokenExiryStatus(state) === TokenStatus.expired;\n}\n\nfunction getOauthProviderState(state) {\n  var extraData = state[reducerName].extraData;\n\n  if (extraData.oAuth2Data && extraData.oAuth2Data.state) {\n    return extraData.oAuth2Data.state;\n  }\n\n  return null;\n}","map":null,"metadata":{},"sourceType":"script"}