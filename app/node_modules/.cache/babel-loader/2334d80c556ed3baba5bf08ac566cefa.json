{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NEW_VALUE = 'skjemautfyller/NEW_VALUE';\nexports.NEW_CODINGSTRING_VALUE = 'skjemautfyller/NEW_CODINGSTRING_VALUE';\nexports.REMOVE_CODINGSTRING_VALUE = 'skjemautfyller/REMOVE_CODINGSTRING_VALUE';\nexports.REMOVE_CODING_VALUE = 'skjemautfyller/REMOVE_CODING_VALUE';\nexports.ADD_REPEAT_ITEM = 'skjemautfyller/ADD_REPEAT_ITEM';\nexports.DELETE_REPEAT_ITEM = 'skjemautfyller/DELETE_REPEAT_ITEM';\nexports.REMOVE_ATTACHMENT_VALUE = 'skjemautfyller/REMOVE_ATTACHMENT_VALUE';\n\nfunction newAttachment(itemPath, value, item, multipleAnswers) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueAttachment: value,\n    item: item,\n    multipleAnswers\n  };\n}\n\nexports.newAttachment = newAttachment;\n\nfunction newAttachmentAsync(itemPath, value, item, multipleAnswers) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newAttachment(itemPath, value, item, multipleAnswers));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newAttachmentAsync = newAttachmentAsync;\n\nfunction removeAttachment(itemPath, value, item) {\n  return {\n    type: exports.REMOVE_ATTACHMENT_VALUE,\n    itemPath,\n    valueAttachment: value,\n    item: item\n  };\n}\n\nexports.removeAttachment = removeAttachment;\n\nfunction removeAttachmentAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(removeAttachment(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.removeAttachmentAsync = removeAttachmentAsync;\n\nfunction newBooleanValue(itemPath, value, item) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueBoolean: value,\n    item: item\n  };\n}\n\nexports.newBooleanValue = newBooleanValue;\n\nfunction newBooleanValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newBooleanValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newBooleanValueAsync = newBooleanValueAsync;\n\nfunction newCodingValue(itemPath, value, item, multipleAnswers) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueCoding: value,\n    item: item,\n    multipleAnswers\n  };\n}\n\nexports.newCodingValue = newCodingValue;\n\nfunction newCodingValueAsync(itemPath, value, item, multipleAnswers) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newCodingValue(itemPath, value, item, multipleAnswers));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newCodingValueAsync = newCodingValueAsync;\n\nfunction newCodingStringValue(itemPath, value, item, multipleAnswers) {\n  return {\n    type: exports.NEW_CODINGSTRING_VALUE,\n    itemPath,\n    valueString: value,\n    item: item,\n    multipleAnswers\n  };\n}\n\nexports.newCodingStringValue = newCodingStringValue;\n\nfunction newCodingStringValueAsync(itemPath, value, item, multipleAnswers) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newCodingStringValue(itemPath, value, item, multipleAnswers));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newCodingStringValueAsync = newCodingStringValueAsync;\n\nfunction removeCodingStringValue(itemPath, item) {\n  return {\n    type: exports.REMOVE_CODINGSTRING_VALUE,\n    itemPath,\n    item: item\n  };\n}\n\nexports.removeCodingStringValue = removeCodingStringValue;\n\nfunction removeCodingStringValueAsync(itemPath, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(removeCodingStringValue(itemPath, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.removeCodingStringValueAsync = removeCodingStringValueAsync;\n\nfunction newQuantityValue(itemPath, value, item) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueQuantity: value,\n    item: item\n  };\n}\n\nexports.newQuantityValue = newQuantityValue;\n\nfunction newQuantityValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newQuantityValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newQuantityValueAsync = newQuantityValueAsync;\n\nfunction removeCodingValue(itemPath, value, item) {\n  return {\n    type: exports.REMOVE_CODING_VALUE,\n    itemPath,\n    valueCoding: value,\n    item: item\n  };\n}\n\nexports.removeCodingValue = removeCodingValue;\n\nfunction removeCodingValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(removeCodingValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.removeCodingValueAsync = removeCodingValueAsync;\n\nfunction newDecimalValue(itemPath, value, item) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueDecimal: value,\n    item: item\n  };\n}\n\nexports.newDecimalValue = newDecimalValue;\n\nfunction newDecimalValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newDecimalValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newDecimalValueAsync = newDecimalValueAsync;\n\nfunction newIntegerValue(itemPath, value, item) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueInteger: value,\n    item: item\n  };\n}\n\nexports.newIntegerValue = newIntegerValue;\n\nfunction newIntegerValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newIntegerValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newIntegerValueAsync = newIntegerValueAsync;\n\nfunction newStringValue(itemPath, value, item) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueString: value,\n    item: item\n  };\n}\n\nexports.newStringValue = newStringValue;\n\nfunction newStringValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newStringValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newStringValueAsync = newStringValueAsync;\n\nfunction newDateValue(itemPath, value, item) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueDate: value,\n    item: item\n  };\n}\n\nexports.newDateValue = newDateValue;\n\nfunction newDateValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newDateValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newDateValueAsync = newDateValueAsync;\n\nfunction newTimeValue(itemPath, value, item) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueTime: value,\n    item: item\n  };\n}\n\nexports.newTimeValue = newTimeValue;\n\nfunction newTimeValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newTimeValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newTimeValueAsync = newTimeValueAsync;\n\nfunction newDateTimeValue(itemPath, value, item) {\n  return {\n    type: exports.NEW_VALUE,\n    itemPath,\n    valueDateTime: value,\n    item: item\n  };\n}\n\nexports.newDateTimeValue = newDateTimeValue;\n\nfunction newDateTimeValueAsync(itemPath, value, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(newDateTimeValue(itemPath, value, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.newDateTimeValueAsync = newDateTimeValueAsync;\n\nfunction addRepeatItem(parentPath, item, responseItems) {\n  return {\n    type: exports.ADD_REPEAT_ITEM,\n    parentPath,\n    item,\n    responseItems\n  };\n}\n\nexports.addRepeatItem = addRepeatItem;\n\nfunction deleteRepeatItem(itemPath, item) {\n  return {\n    type: exports.DELETE_REPEAT_ITEM,\n    itemPath,\n    item\n  };\n}\n\nexports.deleteRepeatItem = deleteRepeatItem;\n\nfunction deleteRepeatItemAsync(itemPath, item) {\n  return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {\n    dispatch(deleteRepeatItem(itemPath, item));\n    return yield Promise.resolve(getState());\n  });\n}\n\nexports.deleteRepeatItemAsync = deleteRepeatItemAsync;","map":null,"metadata":{},"sourceType":"script"}