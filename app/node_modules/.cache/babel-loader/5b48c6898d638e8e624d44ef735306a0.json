{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar typography_module_scss_1 = __importDefault(require(\"@helsenorge/designsystem-react/scss/typography.module.scss\"));\n\nvar itemcontrol_1 = __importDefault(require(\"../../../constants/itemcontrol\"));\n\nvar extension_1 = require(\"../../../util/extension\");\n\nvar index_1 = require(\"../../../util/index\");\n\nvar map_props_1 = require(\"../../../util/map-props\");\n\nvar Display = function Display(_ref) {\n  var id = _ref.id,\n      enable = _ref.enable,\n      pdf = _ref.pdf,\n      item = _ref.item,\n      onRenderMarkdown = _ref.onRenderMarkdown;\n  var itemControls = item ? extension_1.getItemControlExtensionValue(item) : null;\n  var highlightClass = itemControls && itemControls.some(function (itemControl) {\n    return itemControl.code === itemcontrol_1.default.HIGHLIGHT;\n  }) ? 'page_skjemautfyller__component_highlight' : '';\n\n  if (!enable) {\n    return null;\n  }\n\n  var value = undefined;\n\n  if (item) {\n    var markdown = item._text ? extension_1.getMarkdownExtensionValue(item._text) : undefined;\n\n    if (markdown) {\n      value = React.createElement(\"div\", {\n        id: index_1.getId(id),\n        className: \"page_skjemautfyller__markdown \".concat(typography_module_scss_1.default['anchorlink-wrapper']),\n        dangerouslySetInnerHTML: {\n          __html: index_1.getText(item, onRenderMarkdown)\n        }\n      });\n    } else {\n      value = React.createElement(\"p\", {\n        id: index_1.getId(id)\n      }, \"\".concat(index_1.renderPrefix(item), \" \").concat(index_1.getText(item, onRenderMarkdown)));\n    }\n  }\n\n  if (pdf) {\n    if (!value) {\n      return null;\n    }\n\n    return React.createElement(\"div\", null, value);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"page_skjemautfyller__component page_skjemautfyller__component_display \".concat(highlightClass)\n  }, value);\n};\n\nvar connectedComponent = react_redux_1.connect(map_props_1.mapStateToProps, map_props_1.mapDispatchToProps, map_props_1.mergeProps)(Display);\nexports.default = connectedComponent;","map":null,"metadata":{},"sourceType":"script"}