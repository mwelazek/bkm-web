{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PatientsList = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactHelmet = require(\"react-helmet\");\n\nvar _antd = require(\"antd\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _constants = require(\"../../constants\");\n\nvar _mls = require(\"../../mls\");\n\nvar _Patient = require(\"../PatientDetails/ResourceSchema/Patient\");\n\nvar _lodash = require(\"lodash\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar PatientsList = function PatientsList(props) {\n  var _data$records;\n\n  var fhirBaseURL = props.fhirBaseURL;\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useState = (0, _react.useState)(),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      fhirSortFilters = _useState2[0],\n      setFhirSortFilters = _useState2[1];\n\n  var _useSimpleTabularView = (0, _reactUtils.useSimpleTabularView)(fhirBaseURL, _constants.patientResourceType, fhirSortFilters),\n      searchFormProps = _useSimpleTabularView.searchFormProps,\n      tablePaginationProps = _useSimpleTabularView.tablePaginationProps,\n      queryValues = _useSimpleTabularView.queryValues;\n\n  var data = queryValues.data,\n      isFetching = queryValues.isFetching,\n      isLoading = queryValues.isLoading,\n      error = queryValues.error;\n\n  if (error && !data) {\n    return _react[\"default\"].createElement(_reactUtils.BrokenPage, {\n      errorMessage: error.message\n    });\n  }\n\n  var tableData = ((_data$records = data === null || data === void 0 ? void 0 : data.records) !== null && _data$records !== void 0 ? _data$records : []).map(function (patient) {\n    var patientValues = (0, _Patient.parsePatient)(patient);\n    return _objectSpread(_objectSpread({}, patientValues), {}, {\n      key: patientValues.id\n    });\n  });\n  var tableProps = {\n    datasource: tableData,\n    columns: (0, _Patient.serverSideSortedColumns)(t),\n    loading: isFetching || isLoading,\n    pagination: tablePaginationProps,\n    onChange: function onChange(_, __, sorter) {\n      var sorters = Array.isArray(sorter) ? sorter : [sorter];\n      var sortQueryString = sorters.reduce(function (acc, value) {\n        var field = value.field,\n            order = value.order;\n        var sortableKey = (0, _lodash.get)(_Patient.sortMap, field);\n\n        if (!sortableKey) {\n          return acc;\n        }\n\n        if (order && order === 'ascend') {\n          return \"\".concat(acc).concat(sortableKey);\n        } else if (order) {\n          return \"\".concat(acc, \"-\").concat(sortableKey);\n        }\n\n        return acc;\n      }, '');\n\n      if (sortQueryString) {\n        setFhirSortFilters({\n          _sort: sortQueryString\n        });\n      }\n    }\n  };\n  return _react[\"default\"].createElement(\"div\", {\n    className: \"content-section\"\n  }, _react[\"default\"].createElement(_reactHelmet.Helmet, null, _react[\"default\"].createElement(\"title\", null, t('Patients'))), _react[\"default\"].createElement(_reactUtils.PageHeader, {\n    title: t('Patients')\n  }), _react[\"default\"].createElement(_antd.Row, {\n    className: \"list-view\"\n  }, _react[\"default\"].createElement(_antd.Col, {\n    className: 'main-content',\n    span: 24\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"main-content__header\"\n  }, _react[\"default\"].createElement(_reactUtils.SearchForm, searchFormProps)), _react[\"default\"].createElement(_reactUtils.TableLayout, tableProps))));\n};\n\nexports.PatientsList = PatientsList;","map":null,"metadata":{},"sourceType":"script"}