{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar moment_1 = __importDefault(require(\"moment\"));\n\nvar validation_1 = require(\"@helsenorge/toolkit/components/molecules/form/validation\");\n\nvar year_month_input_1 = require(\"@helsenorge/toolkit/components/molecules/year-month-input\");\n\nvar util_1 = require(\"../../../util\");\n\nvar extension_1 = require(\"../../../util/extension\");\n\nvar textview_1 = __importDefault(require(\"../textview\"));\n\nvar DateYearMonthInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(DateYearMonthInput, _React$Component);\n\n  var _super = _createSuper(DateYearMonthInput);\n\n  function DateYearMonthInput() {\n    var _this;\n\n    _classCallCheck(this, DateYearMonthInput);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onYearMonthChange = function (newValue) {\n      if (!newValue.year && (newValue.month === -1 || newValue.month === null)) {\n        _this.props.onDateValueChange('');\n      } else {\n        var newMonthValue = newValue.month === null || newValue.month === -1 ? '' : \"0\".concat(newValue.month + 1).slice(-2);\n\n        _this.props.onDateValueChange(\"\".concat(newValue.year, \"-\").concat(newMonthValue));\n      }\n    };\n\n    _this.getValue = function () {\n      if (!_this.props.yearMonthValue) {\n        return undefined;\n      } else {\n        var monthPart = _this.props.yearMonthValue.split('-')[1];\n\n        var yearValue = parseInt(_this.props.yearMonthValue.split('-')[0]) || 0;\n        var monthValue = monthPart === '' || monthPart === undefined ? null : parseInt(_this.props.yearMonthValue.split('-')[1]) - 1;\n        return {\n          year: yearValue,\n          month: monthValue\n        };\n      }\n    };\n\n    _this.getMinMaxDate = function (dateValue) {\n      return dateValue ? {\n        year: dateValue.year(),\n        month: dateValue.month()\n      } : undefined;\n    };\n\n    _this.getReadonlyValue = function () {\n      var _a;\n\n      var ikkeBesvartText = ((_a = _this.props.resources) === null || _a === void 0 ? void 0 : _a.ikkeBesvart) || '';\n      return _this.props.yearMonthValue ? moment_1.default(_this.props.yearMonthValue).locale(_this.props.locale).format('MMMM YYYY') : ikkeBesvartText;\n    };\n\n    return _this;\n  }\n\n  _createClass(DateYearMonthInput, [{\n    key: \"getYearMonthInputResources\",\n    value: function getYearMonthInputResources() {\n      var _this$props = this.props,\n          resources = _this$props.resources,\n          item = _this$props.item;\n      var validationErrorText = extension_1.getValidationTextExtension(item);\n      return {\n        errorInvalidYearMonth: validationErrorText ? validationErrorText : (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_invalid) || '',\n        errorInvalidYear: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_invalid_year) || '',\n        errorRequiredField: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_required) || '',\n        errorBeforeMinDate: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_mindate) || '',\n        errorAfterMaxDate: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_maxdate) || '',\n        selectYearPlaceholder: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_year_placeholder) || '',\n        selectMonthPlaceholder: (resources === null || resources === void 0 ? void 0 : resources.yearmonth_field_month_placeholder) || ''\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.pdf || util_1.isReadOnly(this.props.item)) {\n        return React.createElement(textview_1.default, {\n          id: this.props.id,\n          item: this.props.item,\n          value: this.getReadonlyValue(),\n          onRenderMarkdown: this.props.onRenderMarkdown\n        }, this.props.children);\n      }\n\n      return React.createElement(validation_1.Validation, Object.assign({}, this.props), React.createElement(year_month_input_1.YearMonthInput, {\n        id: \"\".concat(util_1.getId(this.props.id), \"-yearmonth_input\"),\n        locale: this.props.locale,\n        resources: this.getYearMonthInputResources(),\n        legend: this.props.label,\n        subLabel: this.props.subLabel,\n        isRequired: util_1.isRequired(this.props.item),\n        placeholder: extension_1.getPlaceholder(this.props.item),\n        maximumYearMonth: this.getMinMaxDate(this.props.maxDate),\n        minimumYearMonth: this.getMinMaxDate(this.props.minDate),\n        value: this.getValue(),\n        className: this.props.className,\n        onChange: this.onYearMonthChange,\n        helpButton: this.props.helpButton,\n        helpElement: this.props.helpElement\n      }));\n    }\n  }]);\n\n  return DateYearMonthInput;\n}(React.Component);\n\nexports.DateYearMonthInput = DateYearMonthInput;","map":null,"metadata":{},"sourceType":"script"}