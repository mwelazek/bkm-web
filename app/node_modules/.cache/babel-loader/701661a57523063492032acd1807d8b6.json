{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst react_collapse_1 = require(\"react-collapse\");\n\nconst safe_select_1 = __importDefault(require(\"@helsenorge/toolkit/components/atoms/safe-select\"));\n\nconst validation_1 = __importDefault(require(\"@helsenorge/toolkit/components/molecules/form/validation\"));\n\nconst layout_change_1 = __importDefault(require(\"@helsenorge/core-utils/hoc/layout-change\"));\n\nconst extension_1 = require(\"../../../util/extension\");\n\nconst index_1 = require(\"../../../util/index\");\n\nconst label_1 = __importDefault(require(\"../label\"));\n\nconst sublabel_1 = __importDefault(require(\"../sublabel\"));\n\nclass DropdownView extends React.Component {\n  render() {\n    const _a = this.props,\n          {\n      options,\n      item,\n      id,\n      handleChange,\n      selected,\n      validateInput,\n      resources,\n      children,\n      repeatButton,\n      renderDeleteButton,\n      renderHelpButton,\n      renderHelpElement,\n      onRenderMarkdown\n    } = _a,\n          other = __rest(_a, [\"options\", \"item\", \"id\", \"handleChange\", \"selected\", \"validateInput\", \"resources\", \"children\", \"repeatButton\", \"renderDeleteButton\", \"renderHelpButton\", \"renderHelpElement\", \"onRenderMarkdown\"]);\n\n    if (!options) {\n      return null;\n    }\n\n    const dropdownOptions = options.map(o => {\n      return new Option(o.label, o.type);\n    });\n    const subLabelText = index_1.getSublabelText(item, onRenderMarkdown);\n    let placeholder;\n\n    if (extension_1.getPlaceholder(item)) {\n      placeholder = new Option(extension_1.getPlaceholder(item), '');\n    } else if (resources) {\n      placeholder = new Option(resources.selectDefaultPlaceholder, '');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"page_skjemautfyller__component page_skjemautfyller__component_choice page_skjemautfyller__component_choice_dropdown\"\n    }, React.createElement(react_collapse_1.Collapse, {\n      isOpened: true\n    }, React.createElement(validation_1.default, Object.assign({}, other), React.createElement(safe_select_1.default, {\n      id: index_1.getId(id),\n      selectName: index_1.getId(id),\n      showLabel: true,\n      label: React.createElement(label_1.default, {\n        item: item,\n        onRenderMarkdown: onRenderMarkdown\n      }),\n      subLabel: subLabelText ? React.createElement(sublabel_1.default, {\n        subLabelText: subLabelText\n      }) : undefined,\n      isRequired: index_1.isRequired(item),\n      onChange: evt => handleChange(evt.target.value),\n      options: dropdownOptions,\n      selected: selected ? selected[0] : undefined,\n      value: selected ? selected[0] : undefined,\n      placeholder: placeholder,\n      onChangeValidator: validateInput,\n      errorMessage: extension_1.getValidationTextExtension(item),\n      className: \"page_skjemautfyller__input\",\n      helpButton: renderHelpButton(),\n      helpElement: renderHelpElement()\n    })), renderDeleteButton('page_skjemautfyller__deletebutton--margin-top'), repeatButton, children ? React.createElement(\"div\", {\n      className: \"nested-fieldset nested-fieldset--full-height\"\n    }, children) : null));\n  }\n\n}\n\nexports.default = layout_change_1.default(DropdownView);","map":null,"metadata":{},"sourceType":"script"}