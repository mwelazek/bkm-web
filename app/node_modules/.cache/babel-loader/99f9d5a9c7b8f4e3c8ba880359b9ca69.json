{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateEditCareTeam = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _antd = require(\"antd\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _notifications = require(\"@opensrp/notifications\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _constants = require(\"../../constants\");\n\nvar _Form = require(\"./Form\");\n\nvar _utils = require(\"./utils\");\n\nvar _mls = require(\"../../mls\");\n\nvar CreateEditCareTeam = function CreateEditCareTeam(props) {\n  var _organizations$data, _fhirPractitioners$da;\n\n  var fhirBaseURL = props.fhirBaseURL;\n  var params = (0, _reactRouterDom.useParams)();\n  var careTeamId = params[_constants.ROUTE_PARAM_CARE_TEAM_ID];\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var singleCareTeam = (0, _reactQuery.useQuery)([_constants.FHIR_CARE_TEAM, careTeamId], (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return new _reactUtils.FHIRServiceClass(fhirBaseURL, _constants.FHIR_CARE_TEAM).read(careTeamId);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), {\n    onError: function onError() {\n      return (0, _notifications.sendErrorNotification)(t('There was a problem fetching the Care Team'));\n    },\n    select: function select(res) {\n      return res;\n    },\n    enabled: !!careTeamId,\n    cacheTime: 0,\n    staleTime: 0\n  });\n  var organizations = (0, _reactQuery.useQuery)(_constants.organizationResourceType, (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2() {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", (0, _reactUtils.loadAllResources)(fhirBaseURL, _constants.organizationResourceType));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), {\n    onError: function onError() {\n      return (0, _notifications.sendErrorNotification)(t('There was a problem fetching organizations'));\n    },\n    select: function select(res) {\n      return (0, _reactUtils.getResourcesFromBundle)(res);\n    }\n  });\n  var fhirPractitioners = (0, _reactQuery.useQuery)(_constants.FHIR_PRACTITIONERS, (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3() {\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", (0, _reactUtils.loadAllResources)(fhirBaseURL, _constants.practitionerResourceType, {\n              active: true\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })), {\n    onError: function onError() {\n      return (0, _notifications.sendErrorNotification)(t('There was a problem fetching practitioners'));\n    },\n    select: function select(res) {\n      return (0, _reactUtils.getResourcesFromBundle)(res);\n    }\n  });\n\n  if (fhirPractitioners.isLoading || organizations.isLoading || !singleCareTeam.isIdle && singleCareTeam.isLoading) {\n    return _react[\"default\"].createElement(_antd.Spin, {\n      size: \"large\",\n      className: \"custom-spinner\"\n    });\n  }\n\n  if (singleCareTeam.error && !singleCareTeam.data) {\n    return _react[\"default\"].createElement(_reactUtils.BrokenPage, {\n      errorMessage: singleCareTeam.error.message\n    });\n  }\n\n  var buildInitialValues = (0, _utils.getCareTeamFormFields)(singleCareTeam.data);\n  var careTeamFormProps = {\n    fhirBaseURL: fhirBaseURL,\n    initialValues: buildInitialValues,\n    organizations: (_organizations$data = organizations.data) !== null && _organizations$data !== void 0 ? _organizations$data : [],\n    practitioners: (_fhirPractitioners$da = fhirPractitioners.data) !== null && _fhirPractitioners$da !== void 0 ? _fhirPractitioners$da : []\n  };\n  return _react[\"default\"].createElement(_antd.Row, null, _react[\"default\"].createElement(_antd.Col, {\n    span: 24\n  }, _react[\"default\"].createElement(_Form.CareTeamForm, careTeamFormProps)));\n};\n\nexports.CreateEditCareTeam = CreateEditCareTeam;","map":null,"metadata":{},"sourceType":"script"}