{"ast":null,"code":"import * as React from 'react';\nexport function Validation(_ref) {\n  let {\n    addFormComponent,\n    removeFormComponent,\n    children,\n    onValidated,\n    showRequiredLabel,\n    showOptionalLabel,\n    requiredLabel,\n    optionalLabel,\n    refCallback\n  } = _ref;\n  const componentRef = React.useRef(null);\n  React.useEffect(() => {\n    if (addFormComponent && componentRef.current) {\n      addFormComponent(componentRef.current);\n    }\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      if (removeFormComponent && componentRef.current) {\n        removeFormComponent(componentRef.current);\n      }\n    };\n  }, []);\n  const clone = React.Children.map(children, child => {\n    return React.cloneElement(child, {\n      ref: el => {\n        componentRef.current = el;\n\n        if (refCallback) {\n          refCallback(el);\n        }\n      },\n      onValidated: onValidated,\n      showRequiredLabel: showRequiredLabel,\n      showOptionalLabel: showOptionalLabel,\n      requiredLabel: requiredLabel,\n      optionalLabel: optionalLabel\n    });\n  });\n  return React.createElement(React.Fragment, null, clone);\n}\nexport default Validation;","map":null,"metadata":{},"sourceType":"module"}