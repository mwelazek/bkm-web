{"ast":null,"code":"import { getUser, isAuthenticated, logOutUser, getExtraData } from '@onaio/session-reducer';\nimport { connect } from 'react-redux';\nimport Header from '../../components/page/Header';\n/** Connect the component to the store */\n\n/** map state to props\n *\n * @param {Partial<Store>} state - the redux store\n * @returns {Object} - the states\n */\n\nconst mapStateToProps = state => {\n  const result = {\n    authenticated: isAuthenticated(state),\n    user: getUser(state),\n    extraData: getExtraData(state)\n  };\n  return result;\n};\n\nconst mapDispatchToProps = {\n  logOutUser\n};\n/** create connected component */\n\n/** Connected Header component\n */\n\nconst ConnectedHeader = connect(mapStateToProps, mapDispatchToProps)(Header);\nexport default ConnectedHeader;","map":{"version":3,"sources":["/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/containers/ConnectedHeader/index.tsx"],"names":["getUser","isAuthenticated","logOutUser","getExtraData","connect","Header","mapStateToProps","state","result","authenticated","user","extraData","mapDispatchToProps","ConnectedHeader"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,UAAnC,EAA+CC,YAA/C,QAAmE,wBAAnE;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAA2B;AACjD,QAAMC,MAAM,GAAG;AACbC,IAAAA,aAAa,EAAER,eAAe,CAACM,KAAD,CADjB;AAEbG,IAAAA,IAAI,EAAEV,OAAO,CAACO,KAAD,CAFA;AAGbI,IAAAA,SAAS,EAAER,YAAY,CAACI,KAAD;AAHV,GAAf;AAKA,SAAOC,MAAP;AACD,CAPD;;AASA,MAAMI,kBAAkB,GAAG;AAAEV,EAAAA;AAAF,CAA3B;AAEA;;AAEA;AACA;;AACA,MAAMW,eAAe,GAAGT,OAAO,CAACE,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CP,MAA7C,CAAxB;AAEA,eAAeQ,eAAf","sourcesContent":["import { getUser, isAuthenticated, logOutUser, getExtraData } from '@onaio/session-reducer';\nimport { connect } from 'react-redux';\nimport { Store } from 'redux';\nimport Header from '../../components/page/Header';\n\n/** Connect the component to the store */\n\n/** map state to props\n *\n * @param {Partial<Store>} state - the redux store\n * @returns {Object} - the states\n */\nconst mapStateToProps = (state: Partial<Store>) => {\n  const result = {\n    authenticated: isAuthenticated(state),\n    user: getUser(state),\n    extraData: getExtraData(state),\n  };\n  return result;\n};\n\nconst mapDispatchToProps = { logOutUser };\n\n/** create connected component */\n\n/** Connected Header component\n */\nconst ConnectedHeader = connect(mapStateToProps, mapDispatchToProps)(Header);\n\nexport default ConnectedHeader;\n"]},"metadata":{},"sourceType":"module"}