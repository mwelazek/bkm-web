{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst dompurify_1 = __importDefault(require(\"dompurify\"));\n\nconst marked_1 = __importDefault(require(\"marked\"));\n\nconst uuid = __importStar(require(\"uuid\"));\n\nconst string_utils_1 = require(\"@helsenorge/core-utils/string-utils\");\n\nconst attachment_1 = __importDefault(require(\"../components/formcomponents/attachment/attachment\"));\n\nconst boolean_1 = __importDefault(require(\"../components/formcomponents/boolean/boolean\"));\n\nconst choice_1 = __importDefault(require(\"../components/formcomponents/choice/choice\"));\n\nconst date_1 = __importDefault(require(\"../components/formcomponents/date/date\"));\n\nconst date_time_1 = __importDefault(require(\"../components/formcomponents/date/date-time\"));\n\nconst time_1 = __importDefault(require(\"../components/formcomponents/date/time\"));\n\nconst decimal_1 = __importDefault(require(\"../components/formcomponents/decimal/decimal\"));\n\nconst display_1 = __importDefault(require(\"../components/formcomponents/display/display\"));\n\nconst group_1 = __importDefault(require(\"../components/formcomponents/group/group\"));\n\nconst integer_1 = __importDefault(require(\"../components/formcomponents/integer/integer\"));\n\nconst open_choice_1 = __importDefault(require(\"../components/formcomponents/open-choice/open-choice\"));\n\nconst quantity_1 = __importDefault(require(\"../components/formcomponents/quantity/quantity\"));\n\nconst string_1 = __importDefault(require(\"../components/formcomponents/string/string\"));\n\nconst text_1 = __importDefault(require(\"../components/formcomponents/text/text\"));\n\nconst extensions_1 = __importDefault(require(\"../constants/extensions\"));\n\nconst index_1 = __importDefault(require(\"../constants/index\"));\n\nconst itemType_1 = __importDefault(require(\"../constants/itemType\"));\n\nconst extension_1 = require(\"./extension\");\n\ndompurify_1.default.setConfig({\n  ADD_ATTR: ['target']\n});\nconst renderer = new marked_1.default.Renderer();\n\nrenderer.link = (href, title, text) => {\n  return `<a href=${href} ${title ? `title=${title}` : ''} target=\"_blank\" class=\"external\">${text}</a>`;\n};\n\nmarked_1.default.setOptions({\n  renderer: renderer\n});\n\nfunction getComponentForItem(type) {\n  if (String(type) === itemType_1.default.GROUP) {\n    return group_1.default;\n  }\n\n  if (String(type) === itemType_1.default.DISPLAY) {\n    return display_1.default;\n  }\n\n  if (String(type) === itemType_1.default.BOOLEAN) {\n    return boolean_1.default;\n  }\n\n  if (String(type) === itemType_1.default.DECIMAL) {\n    return decimal_1.default;\n  }\n\n  if (String(type) === itemType_1.default.INTEGER) {\n    return integer_1.default;\n  }\n\n  if (String(type) === itemType_1.default.DATE) {\n    return date_1.default;\n  }\n\n  if (String(type) === itemType_1.default.DATETIME) {\n    return date_time_1.default;\n  }\n\n  if (String(type) === itemType_1.default.TIME) {\n    return time_1.default;\n  }\n\n  if (String(type) === itemType_1.default.STRING) {\n    return string_1.default;\n  }\n\n  if (String(type) === itemType_1.default.TEXT) {\n    return text_1.default;\n  }\n\n  if (String(type) === itemType_1.default.CHOICE) {\n    return choice_1.default;\n  }\n\n  if (String(type) === itemType_1.default.OPENCHOICE) {\n    return open_choice_1.default;\n  }\n\n  if (String(type) === itemType_1.default.ATTATCHMENT) {\n    return attachment_1.default;\n  }\n\n  if (String(type) === itemType_1.default.QUANTITY) {\n    return quantity_1.default;\n  }\n\n  return undefined;\n}\n\nexports.getComponentForItem = getComponentForItem;\n\nfunction isStringEmpty(string) {\n  return string === '' || string === null || string === undefined;\n}\n\nexports.isStringEmpty = isStringEmpty;\n\nfunction isReadOnly(item) {\n  if (item && item.readOnly) {\n    return item.readOnly;\n  }\n\n  return false;\n}\n\nexports.isReadOnly = isReadOnly;\n\nfunction isRequired(item) {\n  if (item && item.required) {\n    return item.required;\n  }\n\n  return false;\n}\n\nexports.isRequired = isRequired;\n\nfunction isRepeat(item) {\n  if (item && item.repeats) {\n    return item.repeats;\n  }\n\n  return false;\n}\n\nexports.isRepeat = isRepeat;\n\nfunction isHiddenItem(item) {\n  return extension_1.getQuestionnaireHiddenExtensionValue(item);\n}\n\nexports.isHiddenItem = isHiddenItem;\n\nfunction getId(id) {\n  if (id) {\n    return id;\n  }\n\n  return uuid.v4();\n}\n\nexports.getId = getId;\n\nfunction renderPrefix(item) {\n  if (!item || !item.prefix) {\n    return '';\n  }\n\n  return item.prefix;\n}\n\nexports.renderPrefix = renderPrefix;\n\nfunction getSublabelText(item, onRenderMarkdown) {\n  if (item) {\n    const markdown = extension_1.getSublabelExtensionValue(item) || '';\n    return markdown ? getMarkdownValue(markdown, item, onRenderMarkdown) : '';\n  }\n\n  return '';\n}\n\nexports.getSublabelText = getSublabelText;\n\nfunction getText(item, onRenderMarkdown) {\n  if (item) {\n    const markdown = item._text ? extension_1.getMarkdownExtensionValue(item._text) : undefined;\n\n    if (markdown) {\n      return getMarkdownValue(markdown, item, onRenderMarkdown);\n    } else if (item.text) {\n      return item.text;\n    }\n  }\n\n  return '';\n}\n\nexports.getText = getText;\n\nfunction getMarkdownValue(markdownText, item, onRenderMarkdown) {\n  if (onRenderMarkdown) {\n    return dompurify_1.default.sanitize(onRenderMarkdown(item, markdownText.toString()));\n  } else {\n    return dompurify_1.default.sanitize(marked_1.default(markdownText.toString()));\n  }\n}\n\nfunction getChildHeaderTag(item, headerTag) {\n  if (!headerTag || !item) {\n    return index_1.default.DEFAULT_HEADER_TAG;\n  }\n\n  return hasHeader(item) ? headerTag + 1 : headerTag;\n}\n\nexports.getChildHeaderTag = getChildHeaderTag;\n\nfunction hasHeader(item) {\n  if (!getText(item)) {\n    return false;\n  }\n\n  if (!item || item.type !== index_1.default.ITEM_TYPE_GROUP) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getLinkId(item) {\n  if (item && item.linkId) {\n    return item.linkId;\n  }\n\n  return uuid.v4();\n}\n\nexports.getLinkId = getLinkId;\n\nfunction getStringValue(answer) {\n  if (answer && answer.valueString) {\n    return answer.valueString;\n  }\n\n  return '';\n}\n\nexports.getStringValue = getStringValue;\n\nfunction getPDFStringValue(answer, resources) {\n  const value = getStringValue(answer);\n\n  if (!value) {\n    let text = '';\n\n    if (resources && resources.ikkeBesvart) {\n      text = resources.ikkeBesvart;\n    }\n\n    return text;\n  }\n\n  return value;\n}\n\nexports.getPDFStringValue = getPDFStringValue;\n\nfunction getMaxLength(item) {\n  if (!item || !item.maxLength) {\n    return undefined;\n  }\n\n  return Number(item.maxLength);\n}\n\nexports.getMaxLength = getMaxLength;\n\nfunction repeats(item) {\n  if (item && item.repeats) {\n    return item.repeats;\n  }\n\n  return false;\n}\n\nexports.repeats = repeats;\n\nfunction shouldRenderRepeatButton(item, response, index) {\n  if (!repeats(item)) {\n    return false;\n  }\n\n  if (!response) {\n    return true;\n  }\n\n  if (index !== undefined && index !== response.length - 1) {\n    return false;\n  }\n\n  const max = extension_1.getMaxOccursExtensionValue(item);\n\n  if (response && max && response.length && Number(max) <= response.length) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.shouldRenderRepeatButton = shouldRenderRepeatButton;\n\nfunction validateText(value, validateScriptInjection) {\n  if (!validateScriptInjection) {\n    return true;\n  }\n\n  return string_utils_1.isValid(value);\n}\n\nexports.validateText = validateText;\n\nfunction getTextValidationErrorMessage(value, validateScriptInjection, item, resources) {\n  if (validateScriptInjection && value && typeof value === 'string') {\n    const invalid = string_utils_1.invalidNodes(value);\n\n    if (invalid && invalid.length > 0) {\n      return invalid.join(', ') + ' ' + (resources ? resources.validationNotAllowed : 'er ikke tillatt');\n    }\n  }\n\n  return extension_1.getValidationTextExtension(item) || '';\n}\n\nexports.getTextValidationErrorMessage = getTextValidationErrorMessage;\n\nfunction getDecimalPattern(item) {\n  const step = extension_1.getExtension(extensions_1.default.STEP_URL, item);\n  const integerPart = '[+-]?[0-9]+';\n\n  if (step && step.valueInteger != null) {\n    const value = Number(step.valueInteger);\n\n    if (value === 0) {\n      return `^${integerPart}$`;\n    }\n\n    let stepString = '';\n\n    if (value > 1) {\n      stepString = `1,${value}`;\n    } else if (value === 1) {\n      stepString = '1';\n    }\n\n    return `^${integerPart}(.[0-9]{${stepString}})?$`;\n  }\n}\n\nexports.getDecimalPattern = getDecimalPattern;\n\nfunction isIE11() {\n  return !!window['MSInputMethodContext'] && !!document['documentMode'];\n}\n\nexports.isIE11 = isIE11;","map":null,"metadata":{},"sourceType":"script"}