{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport StarFilled from \"@ant-design/icons/es/icons/StarFilled\";\nimport classNames from 'classnames';\nimport RcRate from 'rc-rate';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nimport useStyle from './style';\nconst Rate = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    rootClassName,\n    tooltips,\n    character = /*#__PURE__*/React.createElement(StarFilled, null)\n  } = props,\n        rest = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"tooltips\", \"character\"]);\n\n  const characterRender = (node, _ref) => {\n    let {\n      index\n    } = _ref;\n\n    if (!tooltips) {\n      return node;\n    }\n\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      title: tooltips[index]\n    }, node);\n  };\n\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const ratePrefixCls = getPrefixCls('rate', prefixCls); // Style\n\n  const [wrapSSR, hashId] = useStyle(ratePrefixCls);\n  return wrapSSR( /*#__PURE__*/React.createElement(RcRate, Object.assign({\n    ref: ref,\n    character: character,\n    characterRender: characterRender\n  }, rest, {\n    className: classNames(className, rootClassName, hashId),\n    prefixCls: ratePrefixCls,\n    direction: direction\n  })));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Rate.displayName = 'Rate';\n}\n\nexport default Rate;","map":null,"metadata":{},"sourceType":"module"}