{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar AnchorLink_1 = __importDefault(require(\"@helsenorge/designsystem-react/components/AnchorLink\"));\n\nvar custom_tag_1 = __importDefault(require(\"@helsenorge/core-utils/custom-tag\"));\n\nvar renderContextType_1 = require(\"../../../constants/renderContextType\");\n\nvar group_item_control_1 = require(\"../../../util/group-item-control\");\n\nvar index_1 = require(\"../../../util/index\");\n\nvar map_props_1 = require(\"../../../util/map-props\");\n\nvar renderContext_1 = require(\"../../../util/renderContext\");\n\nvar with_common_functions_1 = __importDefault(require(\"../../with-common-functions\"));\n\nvar Group = /*#__PURE__*/function (_React$Component) {\n  _inherits(Group, _React$Component);\n\n  var _super = _createSuper(Group);\n\n  function Group(props) {\n    var _this;\n\n    _classCallCheck(this, Group);\n\n    _this = _super.call(this, props);\n\n    _this.renderAllItems = function () {\n      var renderContext = _this.props.renderContext;\n\n      var localRenderContextType = _this.getLocalRenderContextType();\n\n      if (localRenderContextType) {\n        switch (localRenderContextType) {\n          case renderContextType_1.RenderContextType.Grid:\n            return _this.renderContextTypeGrid();\n        }\n      }\n\n      switch (renderContext.RenderContextType) {\n        case renderContextType_1.RenderContextType.Grid:\n          return _this.isDirectChildOfRenderContextOwner() ? _this.renderContextTypeGridRow() : _this.renderGroup();\n\n        default:\n          return _this.renderGroup();\n      }\n    };\n\n    _this.isDirectChildOfRenderContextOwner = function () {\n      var _this$props = _this.props,\n          path = _this$props.path,\n          item = _this$props.item,\n          renderContext = _this$props.renderContext;\n      var myIndex = path.findIndex(function (p) {\n        return p.linkId === item.linkId;\n      });\n\n      if (myIndex > 0) {\n        var directParentLinkId = path[myIndex - 1].linkId;\n        return directParentLinkId === renderContext.Owner;\n      }\n\n      return false;\n    };\n\n    _this.renderContextTypeGridRow = function () {\n      var _this$props2 = _this.props,\n          renderContext = _this$props2.renderContext,\n          item = _this$props2.item;\n\n      renderContext.RenderChildren = function (childItems, itemRenderer) {\n        var renderedChildItems = [];\n        var counter = 1;\n\n        var _iterator = _createForOfIteratorHelper(renderContext.Columns),\n            _step;\n\n        try {\n          var _loop = function _loop() {\n            var column = _step.value;\n            var childItem = childItems.find(function (item) {\n              return item.text === column;\n            });\n\n            if (childItem) {\n              renderedChildItems.push(React.createElement(\"td\", {\n                key: counter,\n                className: \"page_skjemautfyller__grid--cell\"\n              }, itemRenderer(childItem, renderContext)));\n            } else {\n              renderedChildItems.push(React.createElement(\"td\", {\n                key: counter,\n                className: \"page_skjemautfyller__grid--cell page_skjemautfyller__grid--cell-empty\"\n              }, \" \"));\n            }\n\n            counter++;\n          };\n\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return renderedChildItems;\n      };\n\n      return React.createElement(\"tr\", {\n        key: item.linkId,\n        className: \"page_skjemautfyller__grid--row\"\n      }, React.createElement(\"td\", {\n        className: \"page_skjemautfyller__grid--cell page_skjemautfyller__grid--cell-first\"\n      }, _this.renderGroupHeader()), _this.props.renderChildrenItems(renderContext));\n    };\n\n    _this.renderContextTypeGrid = function () {\n      var item = _this.props.item;\n\n      var columns = _this.getColumns();\n\n      var headers = columns.map(function (c) {\n        return React.createElement(\"th\", {\n          key: item.linkId + '-' + c\n        }, c);\n      });\n      headers.unshift(React.createElement(\"th\", {\n        key: item.linkId + 'X'\n      }, item.text ? item.text : ''));\n      var newRenderContext = new renderContext_1.RenderContext(renderContextType_1.RenderContextType.Grid, item.linkId, columns);\n      return React.createElement(React.Fragment, null, React.createElement(\"table\", {\n        id: index_1.getId(_this.props.id),\n        className: \"page_skjemautfyller__grid\"\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, headers)), React.createElement(\"tbody\", null, _this.props.renderChildrenItems(newRenderContext))), _this.props.renderDeleteButton('page_skjemautfyller__deletebutton--margin-top'), _this.props.repeatButton);\n    };\n\n    _this.renderGroup = function () {\n      var _a;\n\n      return React.createElement(\"section\", {\n        id: index_1.getId(_this.props.id),\n        \"data-sectionname\": _this.getHeaderText()\n      }, _this.renderGroupHeader(), _this.props.renderHelpElement(), React.createElement(\"div\", {\n        id: \"\".concat(index_1.getId(_this.props.id), \"-navanchor\"),\n        className: _this.getClassNames()\n      }, _this.props.renderChildrenItems(new renderContext_1.RenderContext())), _this.props.includeSkipLink && _this.props.path.length === 1 && React.createElement(AnchorLink_1.default, {\n        className: \"page_skjemautfyller__skiplink\",\n        href: \"#navigator-button\"\n      }, (_a = _this.props.resources) === null || _a === void 0 ? void 0 : _a.skipLinkText), _this.props.renderDeleteButton('page_skjemautfyller__deletebutton--margin-top'), _this.props.repeatButton);\n    };\n\n    _this.getColumns = function () {\n      var item = _this.props.item;\n      var seenColumns = {};\n      var columns = [];\n      if (!item.item || item.item.length === 0) return columns;\n\n      var _iterator2 = _createForOfIteratorHelper(item.item),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var group = _step2.value;\n\n          if (group.item && group.item.length > 0) {\n            var _iterator3 = _createForOfIteratorHelper(group.item),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var cell = _step3.value;\n                var key = cell.text || '';\n                if (key in seenColumns) continue;\n                columns.push(key);\n                seenColumns[key] = 1;\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return columns;\n    };\n\n    _this.getLocalRenderContextType = function () {\n      var coding = group_item_control_1.getGroupItemControl(_this.props.item);\n\n      if (coding.length > 0) {\n        switch (coding[0].code) {\n          case 'grid':\n            return renderContextType_1.RenderContextType.Grid;\n        }\n      }\n\n      return renderContextType_1.RenderContextType.None;\n    };\n\n    _this.getClassNames = function () {\n      var classNames = ['page_skjemautfyller__component', 'page_skjemautfyller__component_group'];\n      var coding = group_item_control_1.getGroupItemControl(_this.props.item);\n\n      if (coding.length > 0) {\n        classNames.push('page_skjemautfyller__itemControl_' + coding[0].code);\n      }\n\n      return classNames.join(' ');\n    };\n\n    _this.getComponentToValidate = function () {\n      return undefined;\n    };\n\n    _this.getHeaderText = function () {\n      return index_1.renderPrefix(_this.props.item) + ' ' + index_1.getText(_this.props.item, _this.props.onRenderMarkdown);\n    };\n\n    _this.renderGroupHeader = function () {\n      if (!index_1.getText(_this.props.item, _this.props.onRenderMarkdown)) {\n        return null;\n      }\n\n      var tagName = \"h\".concat(_this.props.headerTag);\n      return React.createElement(React.Fragment, null, React.createElement(custom_tag_1.default, {\n        tagName: tagName,\n        className: 'page_skjemautfyller__heading'\n      }, _this.getHeaderText()), _this.props.renderHelpButton());\n    };\n\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _a;\n\n      var responseItemHasChanged = this.props.responseItem !== nextProps.responseItem;\n      var helpItemHasChanged = this.props.isHelpOpen !== nextProps.isHelpOpen;\n      var repeatButtonHasChanged = this.props.repeatButton !== nextProps.repeatButton;\n      var attachmentErrorMessageHasChanged = this.props.attachmentErrorMessage !== nextProps.attachmentErrorMessage;\n      var resourcesHasChanged = JSON.stringify(this.props.resources) !== JSON.stringify(nextProps.resources);\n      var repeats = (_a = this.props.item.repeats) !== null && _a !== void 0 ? _a : false;\n      return responseItemHasChanged || helpItemHasChanged || repeatButtonHasChanged || attachmentErrorMessageHasChanged || resourcesHasChanged || repeats;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pdf = this.props.pdf;\n\n      if (pdf) {\n        return React.createElement(\"div\", null, this.renderAllItems());\n      }\n\n      return this.renderAllItems();\n    }\n  }]);\n\n  return Group;\n}(React.Component);\n\nexports.Group = Group;\nvar withCommonFunctionsComponent = with_common_functions_1.default(Group);\nvar connectedComponent = react_redux_1.connect(map_props_1.mapStateToProps, map_props_1.mapDispatchToProps, map_props_1.mergeProps)(withCommonFunctionsComponent);\nexports.default = connectedComponent;","map":null,"metadata":{},"sourceType":"script"}