{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar moment_1 = __importDefault(require(\"moment\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar validation_1 = __importDefault(require(\"@helsenorge/toolkit/components/molecules/form/validation\"));\n\nvar time_input_1 = __importDefault(require(\"@helsenorge/toolkit/components/molecules/time-input\"));\n\nvar date_core_1 = require(\"@helsenorge/toolkit/components/molecules/time-input/date-core\");\n\nvar datetime_1 = __importDefault(require(\"@helsenorge/toolkit/constants/datetime\"));\n\nvar newValue_1 = require(\"../../../actions/newValue\");\n\nvar extensions_1 = __importDefault(require(\"../../../constants/extensions\"));\n\nvar extension_1 = require(\"../../../util/extension\");\n\nvar index_1 = require(\"../../../util/index\");\n\nvar map_props_1 = require(\"../../../util/map-props\");\n\nvar with_common_functions_1 = __importDefault(require(\"../../with-common-functions\"));\n\nvar label_1 = __importDefault(require(\"../label\"));\n\nvar sublabel_1 = __importDefault(require(\"../sublabel\"));\n\nvar textview_1 = __importDefault(require(\"../textview\"));\n\nvar Time = /*#__PURE__*/function (_React$Component) {\n  _inherits(Time, _React$Component);\n\n  var _super = _createSuper(Time);\n\n  function Time(props) {\n    var _this;\n\n    _classCallCheck(this, Time);\n\n    _this = _super.call(this, props);\n    _this.onTimeChange = _this.onTimeChange.bind(_assertThisInitialized(_this));\n    _this.getValue = _this.getValue.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Time, [{\n    key: \"getValue\",\n    value: function getValue() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          answer = _this$props.answer;\n\n      if (value) {\n        return value;\n      }\n\n      if (answer && answer.valueTime) {\n        return answer.valueTime;\n      }\n\n      if (answer && answer.valueDate) {\n        return this.getTimeStringFromDate(date_core_1.parseDate(String(answer.valueDate)));\n      }\n\n      if (answer && answer.valueDateTime) {\n        return this.getTimeStringFromDate(date_core_1.parseDate(String(answer.valueDateTime)));\n      }\n\n      return '';\n    }\n  }, {\n    key: \"getPDFValue\",\n    value: function getPDFValue() {\n      var value = this.getValue();\n\n      if (!value) {\n        var text = '';\n\n        if (this.props.resources && this.props.resources.ikkeBesvart) {\n          text = this.props.resources.ikkeBesvart;\n        }\n\n        return text;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"getTimeStringFromDate\",\n    value: function getTimeStringFromDate(date) {\n      var momentDate = moment_1.default(date);\n      return \"\".concat(momentDate.hours()).concat(datetime_1.default.TIME_SEPARATOR).concat(momentDate.minutes());\n    }\n  }, {\n    key: \"getMaxHour\",\n    value: function getMaxHour() {\n      var maxTime = extension_1.getExtension(extensions_1.default.MAX_VALUE_URL, this.props.item);\n\n      if (!maxTime) {\n        return 23;\n      }\n\n      var maxTimeString = String(maxTime.valueTime);\n      var hoursString = (maxTimeString || '').split(datetime_1.default.TIME_SEPARATOR)[0];\n      return parseInt(hoursString, 10);\n    }\n  }, {\n    key: \"getMaxMinute\",\n    value: function getMaxMinute() {\n      var maxTime = extension_1.getExtension(extensions_1.default.MAX_VALUE_URL, this.props.item);\n\n      if (!maxTime) {\n        return 59;\n      }\n\n      var maxTimeString = String(maxTime.valueTime);\n      var minuteString = (maxTimeString || '').split(datetime_1.default.TIME_SEPARATOR)[1];\n      return parseInt(minuteString, 10);\n    }\n  }, {\n    key: \"getMinHour\",\n    value: function getMinHour() {\n      var minTime = extension_1.getExtension(extensions_1.default.MIN_VALUE_URL, this.props.item);\n\n      if (!minTime) {\n        return 0;\n      }\n\n      var minTimeString = String(minTime.valueTime);\n      var hoursString = (minTimeString || '').split(datetime_1.default.TIME_SEPARATOR)[0];\n      return parseInt(hoursString, 10);\n    }\n  }, {\n    key: \"getMinMinute\",\n    value: function getMinMinute() {\n      var minTime = extension_1.getExtension(extensions_1.default.MIN_VALUE_URL, this.props.item);\n\n      if (!minTime) {\n        return 0;\n      }\n\n      var minTimeString = String(minTime.valueTime);\n      var minuteString = (minTimeString || '').split(datetime_1.default.TIME_SEPARATOR)[1];\n      return parseInt(minuteString, 10);\n    }\n  }, {\n    key: \"dispatchNewTime\",\n    value: function dispatchNewTime(newTime) {\n      var _a;\n\n      var _this$props2 = this.props,\n          dispatch = _this$props2.dispatch,\n          item = _this$props2.item,\n          path = _this$props2.path,\n          onAnswerChange = _this$props2.onAnswerChange;\n\n      if (dispatch) {\n        (_a = dispatch(newValue_1.newTimeValueAsync(path, newTime, item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n          return onAnswerChange(newState, path, item, {\n            valueTime: newTime\n          });\n        });\n      }\n    }\n  }, {\n    key: \"onTimeChange\",\n    value: function onTimeChange() {\n      var newTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var validTime = this.makeValidTime(newTime);\n      this.dispatchNewTime(validTime);\n\n      if (this.props.promptLoginMessage) {\n        this.props.promptLoginMessage();\n      }\n    }\n  }, {\n    key: \"makeValidTime\",\n    value: function makeValidTime(time) {\n      var values = time.split(':');\n      var hours = values[0] || '00';\n      var minutes = values[1] || '00';\n      return this.addSeconds(\"\".concat(hours.slice(-2), \":\").concat(minutes.slice(-2)));\n    }\n  }, {\n    key: \"addSeconds\",\n    value: function addSeconds(time) {\n      if (time !== '' && time.split(':').length === 2) {\n        return time += ':00';\n      }\n\n      return time;\n    }\n  }, {\n    key: \"padNumber\",\n    value: function padNumber(value) {\n      if (value) {\n        var values = value.split(':');\n        var retVal = '';\n\n        for (var i = 0; i < values.length; i++) {\n          var timeString = '';\n\n          if (parseInt(values[i], 10) < 10 && values[i].length === 1) {\n            timeString += '0';\n          }\n\n          timeString += values[i];\n\n          if (i !== values.length - 1) {\n            timeString += ':';\n          }\n\n          retVal += timeString;\n        }\n\n        return retVal;\n      }\n\n      return '';\n    }\n  }, {\n    key: \"getResetButtonText\",\n    value: function getResetButtonText() {\n      if (this.props.resources && this.props.resources.resetTime) {\n        return this.props.resources.resetTime;\n      }\n\n      return '';\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _a;\n\n      var responseItemHasChanged = this.props.responseItem !== nextProps.responseItem;\n      var helpItemHasChanged = this.props.isHelpOpen !== nextProps.isHelpOpen;\n      var resourcesHasChanged = JSON.stringify(this.props.resources) !== JSON.stringify(nextProps.resources);\n      var repeats = (_a = this.props.item.repeats) !== null && _a !== void 0 ? _a : false;\n      return responseItemHasChanged || helpItemHasChanged || resourcesHasChanged || repeats;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          pdf = _this$props3.pdf,\n          item = _this$props3.item,\n          renderFieldset = _this$props3.renderFieldset,\n          id = _this$props3.id,\n          onRenderMarkdown = _this$props3.onRenderMarkdown;\n      var subLabelText = index_1.getSublabelText(this.props.item, this.props.onRenderMarkdown);\n\n      if (pdf || index_1.isReadOnly(this.props.item)) {\n        var value = this.getPDFValue();\n\n        if (renderFieldset) {\n          return React.createElement(textview_1.default, {\n            id: id,\n            item: this.props.item,\n            value: this.padNumber(value),\n            onRenderMarkdown: onRenderMarkdown\n          }, this.props.children);\n        } else if (value) {\n          return React.createElement(\"span\", null, ', kl. ', \" \", this.padNumber(value));\n        }\n\n        return React.createElement(\"span\", null);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"page_skjemautfyller__component page_skjemautfyller__component_time\"\n      }, React.createElement(validation_1.default, Object.assign({}, this.props), React.createElement(time_input_1.default, {\n        id: index_1.getId(id),\n        value: this.getValue(),\n        legend: React.createElement(label_1.default, {\n          item: this.props.item,\n          onRenderMarkdown: this.props.onRenderMarkdown\n        }),\n        subLabel: subLabelText ? React.createElement(sublabel_1.default, {\n          subLabelText: subLabelText\n        }) : undefined,\n        isRequired: index_1.isRequired(item),\n        maxHour: this.getMaxHour(),\n        minHour: this.getMinHour(),\n        maxMinute: this.getMaxMinute(),\n        minMinute: this.getMinMinute(),\n        onBlur: this.onTimeChange,\n        className: this.props.className + ' page_skjemautfyller__input',\n        renderFieldset: this.props.renderFieldset,\n        errorMessage: extension_1.getValidationTextExtension(item),\n        resetButton: {\n          resetButtonText: this.getResetButtonText(),\n          onReset: this.onTimeChange\n        },\n        helpButton: this.props.renderHelpButton(),\n        helpElement: this.props.renderHelpElement()\n      })), this.props.renderDeleteButton('page_skjemautfyller__deletebutton--margin-top'), this.props.repeatButton, this.props.children ? React.createElement(\"div\", {\n        className: \"nested-fieldset nested-fieldset--full-height\"\n      }, this.props.children) : null);\n    }\n  }]);\n\n  return Time;\n}(React.Component);\n\nTime.defaultProps = {\n  renderFieldset: true,\n  path: []\n};\nvar withCommonFunctionsComponent = with_common_functions_1.default(Time);\nvar connectedComponent = react_redux_1.connect(map_props_1.mapStateToProps, map_props_1.mapDispatchToProps, map_props_1.mergeProps)(withCommonFunctionsComponent);\nexports.default = connectedComponent;","map":null,"metadata":{},"sourceType":"script"}