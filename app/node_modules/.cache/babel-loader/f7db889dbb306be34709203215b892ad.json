{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadGroupMembers = exports.loadGroupDetails = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _keycloakService = require(\"@opensrp/keycloak-service\");\n\nvar _constants = require(\"../../constants\");\n\nvar loadGroupMembers = function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(groupId, baseURL) {\n    var serve;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            serve = new _keycloakService.KeycloakService(\"\".concat(_constants.KEYCLOAK_URL_USER_GROUPS, \"/\").concat(groupId, \"/members\"), baseURL);\n            _context.next = 3;\n            return serve.list().then(function (response) {\n              return response;\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadGroupMembers(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.loadGroupMembers = loadGroupMembers;\n\nvar loadGroupDetails = function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2(groupId, baseURL) {\n    var serve;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            serve = new _keycloakService.KeycloakService(_constants.KEYCLOAK_URL_USER_GROUPS, baseURL);\n            _context2.next = 3;\n            return serve.read(groupId).then(function (response) {\n              return response;\n            });\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function loadGroupDetails(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.loadGroupDetails = loadGroupDetails;","map":null,"metadata":{},"sourceType":"script"}