{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initialState = exports.getSelectedNode = exports.SET_LOCATION_TREE_STATE = void 0;\nexports.reducer = reducer;\nexports.reducerName = void 0;\nexports.setSelectedNode = setSelectedNode;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _seamlessImmutable = _interopRequireDefault(require(\"seamless-immutable\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar reducerName = 'location-tree-state';\nexports.reducerName = reducerName;\nvar SET_LOCATION_TREE_STATE = \"\".concat(reducerName, \"/SET_LOCATION_TREE_STATE\");\nexports.SET_LOCATION_TREE_STATE = SET_LOCATION_TREE_STATE;\n\nfunction setSelectedNode(node) {\n  return {\n    selectedNode: node,\n    type: SET_LOCATION_TREE_STATE\n  };\n}\n\nvar initialState = (0, _seamlessImmutable[\"default\"])({\n  selectedNode: undefined\n});\nexports.initialState = initialState;\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_LOCATION_TREE_STATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedNode: action.selectedNode\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar getSelectedNode = function getSelectedNode(state) {\n  return state[reducerName].selectedNode;\n};\n\nexports.getSelectedNode = getSelectedNode;","map":null,"metadata":{},"sourceType":"script"}