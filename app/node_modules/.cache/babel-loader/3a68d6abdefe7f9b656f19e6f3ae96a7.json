{"ast":null,"code":"\"use strict\";\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RbacCheck = RbacCheck;\nexports.RbacProvider = RbacProvider;\nexports.RoleContext = void 0;\nexports.useStoreUserRole = useStoreUserRole;\nexports.useUserRole = useUserRole;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _keycloakAdapter = require(\"../adapters/keycloakAdapter\");\n\nvar _pkgConfig = require(\"@opensrp/pkg-config\");\n\nvar _sessionReducer = require(\"@onaio/session-reducer\");\n\nvar _roleDefinition = require(\"../roleDefinition\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar iamStrategiesLookup = {\n  keycloak: _keycloakAdapter.adapter\n};\n\nfunction RbacCheck(props) {\n  var permissions = props.permissions,\n      children = props.children,\n      fallback = props.fallback,\n      matchStrategy = props.matchStrategy;\n  var userRole = useUserRole();\n\n  if (userRole.hasPermissions(permissions, matchStrategy)) {\n    if (children) {\n      return children;\n    }\n  }\n\n  return fallback !== null && fallback !== void 0 ? fallback : null;\n}\n\nvar defaultUserRole = new _roleDefinition.UserRole();\nvar RoleContext = (0, _react.createContext)(defaultUserRole);\nexports.RoleContext = RoleContext;\n\nfunction RbacProvider(props) {\n  var children = props.children;\n  var userRole = useStoreUserRole();\n  return _react[\"default\"].createElement(RoleContext.Provider, {\n    value: userRole\n  }, children);\n}\n\nfunction useStoreUserRole() {\n  var _getConfig, _ref;\n\n  var extraData = (0, _reactRedux.useSelector)(function (state) {\n    return (0, _sessionReducer.getExtraData)(state);\n  });\n  var roles = extraData.roles;\n  var iamStrategy = (_getConfig = (0, _pkgConfig.getConfig)('rbacStrategy')) !== null && _getConfig !== void 0 ? _getConfig : 'keycloak';\n  var strategy = iamStrategiesLookup[iamStrategy];\n  var userRole = (_ref = strategy(roles)) !== null && _ref !== void 0 ? _ref : defaultUserRole;\n  return userRole;\n}\n\nfunction useUserRole() {\n  var userRole = (0, _react.useContext)(RoleContext);\n  return userRole;\n}","map":null,"metadata":{},"sourceType":"script"}