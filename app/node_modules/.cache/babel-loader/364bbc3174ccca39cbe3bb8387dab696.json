{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.customFetch = exports.OpenSRPService = exports.OPENSRP_API_BASE_URL = void 0;\nexports.getDefaultHeaders = getDefaultHeaders;\nexports.getFetchOptions = getFetchOptions;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nvar _errors = require(\"./errors\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar OPENSRP_API_BASE_URL = 'https://opensrp-stage.smartregister.org/opensrp/rest/';\nexports.OPENSRP_API_BASE_URL = OPENSRP_API_BASE_URL;\n\nfunction getDefaultHeaders(accessToken) {\n  var accept = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'application/json';\n  var authorizationType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Bearer';\n  var contentType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'application/json;charset=UTF-8';\n  return {\n    accept: accept,\n    authorization: \"\".concat(authorizationType, \" \").concat(accessToken),\n    'content-type': contentType\n  };\n}\n\nfunction getFetchOptions(_, accessToken, method, data) {\n  return _objectSpread({\n    headers: getDefaultHeaders(accessToken),\n    method: method\n  }, data ? {\n    body: JSON.stringify(data)\n  } : {});\n}\n\nvar customFetch = function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n    var _args = arguments;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch.apply(void 0, _args);\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            (0, _errors.throwNetworkError)(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function customFetch() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.customFetch = customFetch;\n\nvar OpenSRPService = function () {\n  function OpenSRPService(accessTokenOrCallBack) {\n    var baseURL = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : OPENSRP_API_BASE_URL;\n    var endpoint = arguments.length > 2 ? arguments[2] : undefined;\n    var getOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : getFetchOptions;\n    var signal = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : new AbortController().signal;\n    (0, _classCallCheck2[\"default\"])(this, OpenSRPService);\n    (0, _defineProperty2[\"default\"])(this, \"accessTokenOrCallBack\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"baseURL\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"endpoint\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"generalURL\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"getOptions\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"signal\", void 0);\n    this.endpoint = endpoint;\n    this.getOptions = getOptions;\n    this.signal = signal;\n    this.baseURL = baseURL;\n    this.generalURL = \"\".concat(this.baseURL).concat(this.endpoint);\n    this.accessTokenOrCallBack = accessTokenOrCallBack;\n  }\n\n  (0, _createClass2[\"default\"])(OpenSRPService, [{\n    key: \"create\",\n    value: function () {\n      var _create = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2(data) {\n        var params,\n            method,\n            url,\n            accessToken,\n            payload,\n            response,\n            defaultMessage,\n            _args2 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : null;\n                method = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 'POST';\n                url = OpenSRPService.getURL(this.generalURL, params);\n                _context2.next = 5;\n                return OpenSRPService.processAcessToken(this.accessTokenOrCallBack);\n\n              case 5:\n                accessToken = _context2.sent;\n                payload = _objectSpread(_objectSpread({}, this.getOptions(this.signal, accessToken, method, data)), {}, {\n                  'Cache-Control': 'no-cache',\n                  Pragma: 'no-cache'\n                });\n                _context2.next = 9;\n                return customFetch(url, payload);\n\n              case 9:\n                response = _context2.sent;\n\n                if (!response) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                if (!(response.ok || response.status === 201)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {});\n\n              case 13:\n                defaultMessage = \"OpenSRPService create on \".concat(this.endpoint, \" failed, HTTP status \").concat(response.status);\n                _context2.next = 16;\n                return (0, _errors.throwHTTPError)(response, defaultMessage);\n\n              case 16:\n                return _context2.abrupt(\"return\", {});\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function create(_x) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3(id) {\n        var params,\n            method,\n            url,\n            accessToken,\n            response,\n            defaultMessage,\n            _args3 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                params = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : null;\n                method = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 'GET';\n                url = OpenSRPService.getURL(\"\".concat(this.generalURL, \"/\").concat(id), params);\n                _context3.next = 5;\n                return OpenSRPService.processAcessToken(this.accessTokenOrCallBack);\n\n              case 5:\n                accessToken = _context3.sent;\n                _context3.next = 8;\n                return customFetch(url, this.getOptions(this.signal, accessToken, method));\n\n              case 8:\n                response = _context3.sent;\n\n                if (!response) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                if (!response.ok) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _context3.next = 13;\n                return response.json();\n\n              case 13:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 14:\n                defaultMessage = \"OpenSRPService read on \".concat(this.endpoint, \" failed, HTTP status \").concat(response.status);\n                _context3.next = 17;\n                return (0, _errors.throwHTTPError)(response, defaultMessage);\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function read(_x2) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee4(data) {\n        var params,\n            method,\n            url,\n            accessToken,\n            payload,\n            response,\n            defaultMessage,\n            _args4 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                params = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : null;\n                method = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 'PUT';\n                url = OpenSRPService.getURL(this.generalURL, params);\n                _context4.next = 5;\n                return OpenSRPService.processAcessToken(this.accessTokenOrCallBack);\n\n              case 5:\n                accessToken = _context4.sent;\n                payload = _objectSpread(_objectSpread({}, this.getOptions(this.signal, accessToken, method, data)), {}, {\n                  'Cache-Control': 'no-cache',\n                  Pragma: 'no-cache'\n                });\n                _context4.next = 9;\n                return customFetch(url, payload);\n\n              case 9:\n                response = _context4.sent;\n\n                if (!response) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                if (!response.ok) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", {});\n\n              case 13:\n                defaultMessage = \"OpenSRPService update on \".concat(this.endpoint, \" failed, HTTP status \").concat(response.status);\n                _context4.next = 16;\n                return (0, _errors.throwHTTPError)(response, defaultMessage);\n\n              case 16:\n                return _context4.abrupt(\"return\", {});\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function update(_x3) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"list\",\n    value: function () {\n      var _list = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee5() {\n        var params,\n            method,\n            url,\n            accessToken,\n            response,\n            defaultMessage,\n            _args5 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                params = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : null;\n                method = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : 'GET';\n                url = OpenSRPService.getURL(this.generalURL, params);\n                _context5.next = 5;\n                return OpenSRPService.processAcessToken(this.accessTokenOrCallBack);\n\n              case 5:\n                accessToken = _context5.sent;\n                _context5.next = 8;\n                return customFetch(url, this.getOptions(this.signal, accessToken, method));\n\n              case 8:\n                response = _context5.sent;\n\n                if (!response) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                if (!response.ok) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.next = 13;\n                return response.json();\n\n              case 13:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 14:\n                defaultMessage = \"OpenSRPService list on \".concat(this.endpoint, \" failed, HTTP status \").concat(response.status);\n                _context5.next = 17;\n                return (0, _errors.throwHTTPError)(response, defaultMessage);\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function list() {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee6() {\n        var params,\n            method,\n            url,\n            accessToken,\n            response,\n            defaultMessage,\n            _args6 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                params = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : null;\n                method = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 'DELETE';\n                url = OpenSRPService.getURL(this.generalURL, params);\n                _context6.next = 5;\n                return OpenSRPService.processAcessToken(this.accessTokenOrCallBack);\n\n              case 5:\n                accessToken = _context6.sent;\n                _context6.next = 8;\n                return fetch(url, this.getOptions(this.signal, accessToken, method));\n\n              case 8:\n                response = _context6.sent;\n\n                if (!(response.ok || response.status === 204 || response.status === 200)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {});\n\n              case 11:\n                defaultMessage = \"OpenSRPService delete on \".concat(this.endpoint, \" failed, HTTP status \").concat(response.status);\n                _context6.next = 14;\n                return (0, _errors.throwHTTPError)(response, defaultMessage);\n\n              case 14:\n                return _context6.abrupt(\"return\", {});\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function _delete() {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"download\",\n    value: function () {\n      var _download = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee7() {\n        var params,\n            method,\n            url,\n            accessToken,\n            response,\n            defaultMessage,\n            _args7 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                params = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : null;\n                method = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : 'GET';\n                url = OpenSRPService.getURL(this.generalURL, params);\n                _context7.next = 5;\n                return OpenSRPService.processAcessToken(this.accessTokenOrCallBack);\n\n              case 5:\n                accessToken = _context7.sent;\n                _context7.next = 8;\n                return customFetch(url, this.getOptions(this.signal, accessToken, method));\n\n              case 8:\n                response = _context7.sent;\n\n                if (!response) {\n                  _context7.next = 15;\n                  break;\n                }\n\n                if (!response.ok) {\n                  _context7.next = 12;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", response);\n\n              case 12:\n                defaultMessage = \"OpenSRPService download from \".concat(this.endpoint, \" failed, HTTP status \").concat(response.status);\n                _context7.next = 15;\n                return (0, _errors.throwHTTPError)(response, defaultMessage);\n\n              case 15:\n                return _context7.abrupt(\"return\", Promise.reject(response));\n\n              case 16:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function download() {\n        return _download.apply(this, arguments);\n      }\n\n      return download;\n    }()\n  }], [{\n    key: \"getURL\",\n    value: function getURL(generalUrl, params) {\n      if (params) {\n        return \"\".concat(generalUrl, \"?\").concat(decodeURIComponent(_querystring[\"default\"].stringify(params)));\n      }\n\n      return generalUrl;\n    }\n  }, {\n    key: \"getFilterParams\",\n    value: function getFilterParams(obj) {\n      return Object.entries(obj).map(function (_ref2) {\n        var _ref3 = (0, _slicedToArray2[\"default\"])(_ref2, 2),\n            key = _ref3[0],\n            val = _ref3[1];\n\n        return \"\".concat(key, \":\").concat(val);\n      }).join(',');\n    }\n  }, {\n    key: \"processAcessToken\",\n    value: function () {\n      var _processAcessToken = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee8(accessTokenCallBack) {\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(typeof accessTokenCallBack === 'function')) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                _context8.next = 3;\n                return accessTokenCallBack();\n\n              case 3:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 4:\n                return _context8.abrupt(\"return\", accessTokenCallBack);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function processAcessToken(_x4) {\n        return _processAcessToken.apply(this, arguments);\n      }\n\n      return processAcessToken;\n    }()\n  }]);\n  return OpenSRPService;\n}();\n\nexports.OpenSRPService = OpenSRPService;","map":null,"metadata":{},"sourceType":"script"}