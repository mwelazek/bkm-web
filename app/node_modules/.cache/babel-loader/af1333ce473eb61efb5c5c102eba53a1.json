{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSimpleTabularView = useSimpleTabularView;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = require(\"react\");\n\nvar _dataLoaders = require(\"../helpers/dataLoaders\");\n\nvar _utils = require(\"../components/Search/utils\");\n\nvar _utils2 = require(\"../helpers/utils\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _pkgConfig = require(\"@opensrp/pkg-config\");\n\nvar _reactRouter = require(\"react-router\");\n\nvar _utils3 = require(\"./utils\");\n\nvar _excluded = [\"data\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar defaultGetExtraParams = function defaultGetExtraParams(search) {\n  if (search) {\n    return {\n      'name:contains': search\n    };\n  }\n\n  return {};\n};\n\nvar loadResources = function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(baseUrl, resourceType, params, extraParams) {\n    var page, pageSize, search, filterParams, otherParams, service, res, countFilter, _yield$service$list, total;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = params.page, pageSize = params.pageSize, search = params.search;\n            filterParams = {};\n            otherParams = extraParams;\n\n            if (typeof extraParams === 'function') {\n              otherParams = extraParams(search);\n            }\n\n            filterParams = _objectSpread(_objectSpread(_objectSpread({\n              _total: 'accurate'\n            }, filterParams), otherParams), {}, {\n              _getpagesoffset: (page - 1) * pageSize,\n              _count: pageSize\n            });\n            service = new _dataLoaders.FHIRServiceClass(baseUrl, resourceType);\n            _context.next = 8;\n            return service.list(filterParams);\n\n          case 8:\n            res = _context.sent;\n\n            if (!(res.total === undefined)) {\n              _context.next = 17;\n              break;\n            }\n\n            countFilter = _objectSpread(_objectSpread({}, filterParams), {}, {\n              _summary: 'count'\n            });\n            _context.next = 13;\n            return service.list(countFilter);\n\n          case 13:\n            _yield$service$list = _context.sent;\n            total = _yield$service$list.total;\n            res.total = total;\n            return _context.abrupt(\"return\", res);\n\n          case 17:\n            return _context.abrupt(\"return\", res);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadResources(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction useSimpleTabularView(fhirBaseUrl, resourceType) {\n  var _ref2;\n\n  var extraParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetExtraParams;\n  var location = (0, _reactRouter.useLocation)();\n  var history = (0, _reactRouter.useHistory)();\n  var match = (0, _reactRouter.useRouteMatch)();\n  var page = (0, _utils3.getNumberParam)(location, _utils3.pageQuery, _utils3.startingPage);\n  var search = (0, _utils3.getStringParam)(location, _utils3.searchQuery);\n  var defaultPageSize = (_ref2 = (0, _pkgConfig.getConfig)('defaultTablesPageSize')) !== null && _ref2 !== void 0 ? _ref2 : _utils3.startingPageSize;\n  var pageSize = (0, _utils3.getNumberParam)(location, _utils3.pageSizeQuery, defaultPageSize);\n  var queryFn = (0, _react.useCallback)(function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2(_ref3) {\n      var _ref3$queryKey, _, page, pageSize, search, extraParams;\n\n      return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref3$queryKey = (0, _slicedToArray2[\"default\"])(_ref3.queryKey, 5), _ = _ref3$queryKey[0], page = _ref3$queryKey[1], pageSize = _ref3$queryKey[2], search = _ref3$queryKey[3], extraParams = _ref3$queryKey[4];\n              return _context2.abrupt(\"return\", loadResources(fhirBaseUrl, resourceType, {\n                page: page,\n                pageSize: pageSize,\n                search: search\n              }, extraParams));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [fhirBaseUrl, resourceType]);\n  var rQuery = {\n    queryKey: [resourceType, page, pageSize, search, extraParams],\n    queryFn: queryFn,\n    select: function select(data) {\n      var _data$total;\n\n      return {\n        records: (0, _utils2.getResourcesFromBundle)(data),\n        total: (_data$total = data.total) !== null && _data$total !== void 0 ? _data$total : 0\n      };\n    },\n    keepPreviousData: true,\n    staleTime: 5000,\n    refetchOnMount: false,\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false\n  };\n\n  var _useQuery = (0, _reactQuery.useQuery)(rQuery),\n      data = _useQuery.data,\n      restQueryValues = (0, _objectWithoutProperties2[\"default\"])(_useQuery, _excluded);\n\n  var searchFormProps = {\n    defaultValue: (0, _utils.getQueryParams)(location)[_utils3.searchQuery],\n    onChangeHandler: function onChangeHandler(event) {\n      var nextUrl = (0, _utils3.getNextUrlOnSearch)(event, location, match);\n      history.push(nextUrl);\n    }\n  };\n  var tablePaginationProps = {\n    current: page,\n    pageSize: pageSize,\n    total: data === null || data === void 0 ? void 0 : data.total,\n    defaultPageSize: defaultPageSize,\n    onChange: function onChange(current, pageSize) {\n      if (current && pageSize) {\n        var newSParams = new URLSearchParams(location.search);\n        newSParams.set(_utils3.pageSizeQuery, pageSize.toString());\n        newSParams.set(_utils3.pageQuery, current.toString());\n        history.push(\"\".concat(match.url, \"?\").concat(newSParams.toString()));\n      }\n    }\n  };\n  return {\n    tablePaginationProps: tablePaginationProps,\n    queryValues: _objectSpread({\n      data: data\n    }, restQueryValues),\n    searchFormProps: searchFormProps\n  };\n}","map":null,"metadata":{},"sourceType":"script"}