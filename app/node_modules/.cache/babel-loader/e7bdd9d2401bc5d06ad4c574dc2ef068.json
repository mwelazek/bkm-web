{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Tree = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _antd = require(\"antd\");\n\nvar _icons = require(\"@ant-design/icons\");\n\nrequire(\"./tree.css\");\n\nvar _lodash = require(\"lodash\");\n\nvar _mls = require(\"../../mls\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar Tree = function Tree(props) {\n  var data = props.data,\n      _onSelect = props.onSelect,\n      selectedNode = props.selectedNode;\n\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      expandedKeys = _useState2[0],\n      setExpandedKeys = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      searchExpandedKeys = _useState4[0],\n      setSearchExpandedKeys = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2[\"default\"])(_useState5, 2),\n      searchValue = _useState6[0],\n      setSearchValue = _useState6[1];\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  (0, _react.useEffect)(function () {\n    var updateExpandedKeys = function updateExpandedKeys(keys) {\n      return setExpandedKeys([].concat((0, _toConsumableArray2[\"default\"])(expandedKeys), (0, _toConsumableArray2[\"default\"])(keys)));\n    };\n\n    if (selectedNode) {\n      var parentPath = selectedNode.getPath();\n      parentPath = (0, _lodash.slice)(parentPath, 1, parentPath.length);\n      var parentKeys = parentPath.map(function (node) {\n        return node.model.nodeId;\n      });\n      updateExpandedKeys(parentKeys);\n    }\n\n    if (searchValue) {\n      var matchedNodes = [];\n      data.forEach(function (tree) {\n        var matchedNodesPerTree = tree.all(function (node) {\n          return node.model.node.name.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n        });\n        matchedNodes = [].concat((0, _toConsumableArray2[\"default\"])(matchedNodes), (0, _toConsumableArray2[\"default\"])(matchedNodesPerTree));\n      });\n      var parentNodeKeys = matchedNodes.map(function (node) {\n        return node.parent.model.nodeId;\n      });\n      setSearchExpandedKeys(parentNodeKeys);\n    } else {\n      setSearchExpandedKeys([]);\n    }\n  }, [data, searchValue, selectedNode]);\n\n  function expandHandler(keys, other) {\n    var info = other;\n    var thisNodeKey = info.node.data.model.nodeId;\n\n    if (info.expanded) {\n      setExpandedKeys([].concat((0, _toConsumableArray2[\"default\"])(expandedKeys), [thisNodeKey]));\n    } else {\n      var kys = expandedKeys.filter(function (key) {\n        return key !== thisNodeKey;\n      });\n      setExpandedKeys(kys);\n    }\n  }\n\n  function onChange(event) {\n    var value = event.target.value;\n    setSearchValue(value);\n  }\n\n  var buildTreeData = _react[\"default\"].useCallback(function (data) {\n    return data.map(function (item) {\n      var itemTitle = item.model.node.name;\n      var index = itemTitle.toLowerCase().indexOf(searchValue.toLowerCase());\n      var beforeStr = itemTitle.toLowerCase().substr(0, index);\n      var afterStr = itemTitle.toLowerCase().substr(index + searchValue.length);\n\n      var title = _react[\"default\"].createElement(\"span\", {\n        key: item.id,\n        title: itemTitle\n      }, searchValue.length > 0 && index > -1 ? _react[\"default\"].createElement(_react[\"default\"].Fragment, null, beforeStr, _react[\"default\"].createElement(\"span\", {\n        className: \"searchValue\"\n      }, searchValue), afterStr) : itemTitle);\n\n      return _objectSpread({\n        data: item,\n        key: item.model.nodeId,\n        title: title\n      }, item.children ? {\n        children: buildTreeData(item.children)\n      } : {});\n    });\n  }, [searchValue]);\n\n  return _react[\"default\"].createElement(\"div\", null, _react[\"default\"].createElement(_antd.Input, {\n    className: \"mb-3\",\n    placeholder: t('Search'),\n    size: \"large\",\n    prefix: _react[\"default\"].createElement(_icons.SearchOutlined, null),\n    onChange: onChange\n  }), _react[\"default\"].createElement(_antd.Tree, {\n    onSelect: function onSelect(keys, other) {\n      var info = other;\n\n      if (info.selected) {\n        _onSelect(info.node.data);\n      } else {\n        var kys = expandedKeys.filter(function (key) {\n          return key !== info.node.data.model.nodeId;\n        });\n        setExpandedKeys(kys);\n\n        _onSelect();\n      }\n    },\n    autoExpandParent: true,\n    selectedKeys: selectedNode ? [selectedNode.model.nodeId] : undefined,\n    onExpand: expandHandler,\n    expandedKeys: [].concat((0, _toConsumableArray2[\"default\"])(expandedKeys), (0, _toConsumableArray2[\"default\"])(searchExpandedKeys)),\n    treeData: buildTreeData(data)\n  }));\n};\n\nexports.Tree = Tree;\nvar _default = Tree;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}