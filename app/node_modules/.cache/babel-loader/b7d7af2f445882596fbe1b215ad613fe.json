{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AffiliationList = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactHelmet = require(\"react-helmet\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _antd = require(\"antd\");\n\nvar _Table = _interopRequireDefault(require(\"./Table\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reduxReducerRegistry = _interopRequireDefault(require(\"@onaio/redux-reducer-registry\"));\n\nvar _fhirLocationManagement = require(\"@opensrp/fhir-location-management\");\n\nvar _mls = require(\"../../mls\");\n\nvar _rbac = require(\"@opensrp/rbac\");\n\nvar reducerName = _fhirLocationManagement.locationTreeStateDucks.reducerName,\n    reducer = _fhirLocationManagement.locationTreeStateDucks.reducer,\n    setSelectedNode = _fhirLocationManagement.locationTreeStateDucks.setSelectedNode,\n    getSelectedNode = _fhirLocationManagement.locationTreeStateDucks.getSelectedNode;\n\n_reduxReducerRegistry[\"default\"].register(reducerName, reducer);\n\nvar AffiliationList = function AffiliationList(props) {\n  var _ref;\n\n  var fhirBaseURL = props.fhirBaseURL,\n      fhirRootLocationId = props.fhirRootLocationId;\n  var selectedNode = (0, _reactRedux.useSelector)(function (state) {\n    return getSelectedNode(state);\n  });\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useGetLocationHierar = (0, _fhirLocationManagement.useGetLocationHierarchy)(fhirBaseURL, fhirRootLocationId),\n      treeData = _useGetLocationHierar.data,\n      treeIsLoading = _useGetLocationHierar.isLoading,\n      treeError = _useGetLocationHierar.error;\n\n  if (treeIsLoading) {\n    return _react[\"default\"].createElement(_antd.Spin, {\n      size: \"large\",\n      className: \"custom-spinner\"\n    });\n  }\n\n  if (treeError && !treeData) {\n    return _react[\"default\"].createElement(_reactUtils.BrokenPage, {\n      errorMessage: \"\".concat(treeError.message)\n    });\n  }\n\n  if (!treeData) {\n    return _react[\"default\"].createElement(_reactUtils.Resource404, null);\n  }\n\n  var toDispNodes = (_ref = selectedNode ? selectedNode.children : treeData.children) !== null && _ref !== void 0 ? _ref : [];\n  var sortedNodes = (0, _toConsumableArray2[\"default\"])(toDispNodes).sort(function (a, b) {\n    return a.model.node.name.localeCompare(b.model.node.name);\n  });\n  var tableNodes = sortedNodes;\n\n  if (selectedNode) {\n    tableNodes = [selectedNode].concat((0, _toConsumableArray2[\"default\"])(sortedNodes));\n  }\n\n  var pageTitle = t('Team Assignment');\n  return _react[\"default\"].createElement(\"section\", {\n    className: \"content-section\"\n  }, _react[\"default\"].createElement(_reactHelmet.Helmet, null, _react[\"default\"].createElement(\"title\", null, pageTitle)), _react[\"default\"].createElement(_reactUtils.PageHeader, {\n    title: pageTitle\n  }), _react[\"default\"].createElement(_antd.Row, null, _react[\"default\"].createElement(_antd.Col, {\n    className: \"bg-white p-3\",\n    span: 6\n  }, _react[\"default\"].createElement(_fhirLocationManagement.Tree, {\n    \"data-testid\": \"hierarchy-display\",\n    data: treeData.children,\n    selectedNode: selectedNode,\n    onSelect: function onSelect(node) {\n      dispatch(setSelectedNode(node));\n    }\n  })), _react[\"default\"].createElement(_antd.Col, {\n    className: \"bg-white p-3 border-left\",\n    span: 18\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"bg-white p-3\"\n  }, _react[\"default\"].createElement(_rbac.RbacCheck, {\n    permissions: ['OrganizationAffiliation.read']\n  }, _react[\"default\"].createElement(_Table[\"default\"], {\n    baseUrl: fhirBaseURL,\n    locationNodes: tableNodes\n  }))))));\n};\n\nexports.AffiliationList = AffiliationList;","map":null,"metadata":{},"sourceType":"script"}