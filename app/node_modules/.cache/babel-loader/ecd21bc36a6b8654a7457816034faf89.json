{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar itemType_1 = __importDefault(require(\"../constants/itemType\"));\n\nvar skjemautfyller_core_1 = require(\"../util/skjemautfyller-core\");\n\nvar generateQuestionnaireResponse_1 = require(\"./generateQuestionnaireResponse\");\n\nfunction createNewItem(qItem) {\n  var qrItem = generateQuestionnaireResponse_1.createQuestionnaireResponseItem(qItem);\n  synQuestionnaireResponseItem(qItem, qrItem);\n  return qrItem;\n}\n\nfunction copyItem(qItem, qrItem) {\n  synQuestionnaireResponseItem(qItem, qrItem);\n  return qrItem;\n}\n\nfunction syncQuestionnaireResponse(q, qr) {\n  var qrItemCopy = [];\n  var qrItems = createDictionary(qr.item || []);\n\n  var _iterator = _createForOfIteratorHelper(q.item || []),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var qItem = _step.value;\n      var linkId = qItem.linkId;\n\n      if (qrItems[linkId]) {\n        if (hasChanged(qItem, qrItems[linkId])) {\n          qrItemCopy.push(createNewItem(qItem));\n        } else {\n          var _iterator2 = _createForOfIteratorHelper(qrItems[linkId]),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var qrItem = _step2.value;\n              qrItemCopy.push(copyItem(qItem, qrItem));\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      } else {\n        qrItemCopy.push(createNewItem(qItem));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  qr.item = qrItemCopy;\n  return qr;\n}\n\nexports.syncQuestionnaireResponse = syncQuestionnaireResponse;\n\nfunction synQuestionnaireResponseItem(qItem, qrItem) {\n  var qrItemCopy = [];\n  var qrAnswerItemCopy = [];\n  var qrItems = createDictionary(qrItem.item || []);\n  var qrAnswerItems = createDictionary(qrItem.answer && qrItem.answer[0].item ? qrItem.answer[0].item : []);\n\n  var _iterator3 = _createForOfIteratorHelper(qItem.item || []),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var subQItem = _step3.value;\n      var linkId = subQItem.linkId;\n\n      if (qrItems[linkId]) {\n        if (hasChanged(subQItem, qrItems[linkId])) {\n          qrItemCopy.push(createNewItem(subQItem));\n        } else {\n          var _iterator4 = _createForOfIteratorHelper(qrItems[linkId]),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var subQrItem = _step4.value;\n              qrItemCopy.push(copyItem(subQItem, subQrItem));\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      } else if (qrAnswerItems[linkId]) {\n        if (hasChanged(subQItem, qrAnswerItems[linkId])) {\n          qrAnswerItemCopy.push(createNewItem(subQItem));\n        } else {\n          var _iterator5 = _createForOfIteratorHelper(qrAnswerItems[linkId]),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var _subQrItem = _step5.value;\n              qrAnswerItemCopy.push(copyItem(subQItem, _subQrItem));\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n        }\n      } else {\n        var newQrItem = createNewItem(subQItem);\n\n        if (qItem.type == itemType_1.default.GROUP) {\n          qrItemCopy.push(newQrItem);\n        } else {\n          qrAnswerItemCopy.push(newQrItem);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  if (qrItemCopy.length > 0) {\n    qrItem.item = qrItemCopy;\n  } else {\n    delete qrItem.item;\n  }\n\n  if (qrAnswerItemCopy.length > 0) {\n    if (!qrItem.answer) {\n      qrItem.answer = [];\n    }\n\n    if (!qrItem.answer[0]) {\n      qrItem.answer.push({});\n    }\n\n    qrItem.answer[0].item = qrAnswerItemCopy;\n  } else {\n    if (qrItem.answer && qrItem.answer.length > 0) {\n      delete qrItem.answer[0].item;\n    }\n  }\n}\n\nfunction hasChanged(qItem, qrItems) {\n  var qrItemWithAnswer = qrItems.find(function (it) {\n    return it.answer && it.answer.some(function (a) {\n      return skjemautfyller_core_1.hasAnswer(a);\n    });\n  });\n  if (!qrItemWithAnswer || !qrItemWithAnswer.answer) return false;\n  var answer = qrItemWithAnswer.answer.find(function (it) {\n    return skjemautfyller_core_1.hasAnswer(it);\n  });\n\n  if (!answer) {\n    return false;\n  }\n\n  return !itemTypeMatchesAnswerValue(qItem.type, answer);\n}\n\nfunction itemTypeMatchesAnswerValue(type, answer) {\n  switch (type) {\n    case itemType_1.default.ATTATCHMENT:\n      return skjemautfyller_core_1.hasAttachmentAnswer(answer);\n\n    case itemType_1.default.BOOLEAN:\n      return skjemautfyller_core_1.hasBooleanAnswer(answer);\n\n    case itemType_1.default.CHOICE:\n      return skjemautfyller_core_1.hasCodingAnswer(answer);\n\n    case itemType_1.default.DATE:\n      return skjemautfyller_core_1.hasDateAnswer(answer);\n\n    case itemType_1.default.DATETIME:\n      return skjemautfyller_core_1.hasDateTimeAnswer(answer);\n\n    case itemType_1.default.DECIMAL:\n      return skjemautfyller_core_1.hasDecimalAnswer(answer);\n\n    case itemType_1.default.DISPLAY:\n    case itemType_1.default.GROUP:\n      return false;\n\n    case itemType_1.default.INTEGER:\n      return skjemautfyller_core_1.hasIntegerAnswer(answer);\n\n    case itemType_1.default.OPENCHOICE:\n      return skjemautfyller_core_1.hasCodingAnswer(answer) || skjemautfyller_core_1.hasStringAnswer(answer);\n\n    case itemType_1.default.QUANTITY:\n      return skjemautfyller_core_1.hasQuantityAnswer(answer);\n\n    case itemType_1.default.STRING:\n    case itemType_1.default.TEXT:\n      return skjemautfyller_core_1.hasStringAnswer(answer);\n\n    case itemType_1.default.TIME:\n      return skjemautfyller_core_1.hasTimeAnswer(answer);\n\n    default:\n      return false;\n  }\n}\n\nfunction createDictionary(qrItems) {\n  var dictionary = {};\n\n  var _iterator6 = _createForOfIteratorHelper(qrItems),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var item = _step6.value;\n      var linkId = transform(item.linkId);\n\n      if (!dictionary[linkId]) {\n        dictionary[linkId] = [];\n      }\n\n      dictionary[linkId].push(Object.assign(Object.assign({}, item), {\n        linkId: linkId\n      }));\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return dictionary;\n}\n\nfunction transform(linkId) {\n  return linkId.split('^')[0];\n}","map":null,"metadata":{},"sourceType":"script"}