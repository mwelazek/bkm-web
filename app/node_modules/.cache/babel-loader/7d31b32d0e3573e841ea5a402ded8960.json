{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FhirPeriod = exports.FhirCodesTooltips = void 0;\nexports.PatientDetailsTable = PatientDetailsTable;\nexports.sorterFn = exports.getCodeableConcepts = void 0;\n\nvar _antd = require(\"antd\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _mls = require(\"../mls\");\n\nvar _lodash = require(\"lodash\");\n\nvar Text = _antd.Typography.Text;\n\nvar sorterFn = function sorterFn(accessor) {\n  var isDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (a, b) {\n    var first = (0, _lodash.get)(a, accessor);\n    var second = (0, _lodash.get)(b, accessor);\n    if (first === undefined) return 1;\n    if (second === undefined) return -1;\n\n    if (isDate) {\n      return Date.parse(first) - Date.parse(second);\n    } else {\n      return first.localeCompare(second);\n    }\n  };\n};\n\nexports.sorterFn = sorterFn;\n\nvar FhirPeriod = function FhirPeriod(props) {\n  var start = props.start,\n      end = props.end;\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  return _react[\"default\"].createElement(_react[\"default\"].Fragment, null, _react[\"default\"].createElement(Text, null, t('{{val, datetime}}', {\n    val: new Date(start !== null && start !== void 0 ? start : '')\n  })), \"-\", _react[\"default\"].createElement(Text, null, t('{{val, datetime}}', {\n    val: new Date(end !== null && end !== void 0 ? end : '')\n  })));\n};\n\nexports.FhirPeriod = FhirPeriod;\n\nvar FhirCodesTooltips = function FhirCodesTooltips(_ref) {\n  var codings = _ref.codings;\n  return _react[\"default\"].createElement(_react[\"default\"].Fragment, null, (codings !== null && codings !== void 0 ? codings : []).map(function (coding) {\n    return _react[\"default\"].createElement(_antd.Tooltip, {\n      key: coding.code,\n      title: coding.system || ''\n    }, _react[\"default\"].createElement(\"span\", null, coding.display));\n  }));\n};\n\nexports.FhirCodesTooltips = FhirCodesTooltips;\n\nvar getCodeableConcepts = function getCodeableConcepts(concepts) {\n  var arrayConcepts = concepts ? Array.isArray(concepts) ? concepts : [concepts] : [];\n  var rtn = arrayConcepts.map(function (codeableConcept) {\n    var _codeableConcept$codi;\n\n    return (_codeableConcept$codi = codeableConcept.coding) !== null && _codeableConcept$codi !== void 0 ? _codeableConcept$codi : [];\n  }).flat();\n  return rtn;\n};\n\nexports.getCodeableConcepts = getCodeableConcepts;\n\nfunction PatientDetailsTable(props) {\n  var resources = props.resources,\n      parseResource = props.parseResource,\n      columns = props.columns;\n  var tableProps = {\n    datasource: resources.map(parseResource),\n    columns: columns\n  };\n  return _react[\"default\"].createElement(_reactUtils.TableLayout, tableProps);\n}","map":null,"metadata":{},"sourceType":"script"}