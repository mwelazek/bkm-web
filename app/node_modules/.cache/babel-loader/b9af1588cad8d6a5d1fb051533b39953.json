{"ast":null,"code":"import * as React from 'react';\nimport { useHover } from '@helsenorge/designsystem-react';\nimport Icon from '@helsenorge/designsystem-react/components/Icons';\nimport ChevronLeft from '@helsenorge/designsystem-react/components/Icons/ChevronLeft';\nimport ChevronRight from '@helsenorge/designsystem-react/components/Icons/ChevronRight';\nimport { theme } from '@helsenorge/designsystem-react';\n\nvar HeaderNavIcon = function HeaderNavIcon(_ref) {\n  var direction = _ref.direction,\n      className = _ref.className,\n      isDisabled = _ref.isDisabled;\n\n  var _useHover = useHover(undefined),\n      hoverRef = _useHover.hoverRef,\n      isHovered = _useHover.isHovered;\n\n  var directionClassNames = direction === 'prev' ? 'DayPickerNavigation_leftButton__horizontalDefault' : 'DayPickerNavigation_rightButton__horizontalDefault';\n\n  var handlePropagation = function handlePropagation(event) {\n    if (isDisabled) {\n      event.stopPropagation();\n    }\n  };\n\n  return React.createElement(\"span\", {\n    onKeyDown: handlePropagation,\n    onClick: handlePropagation,\n    tabIndex: isDisabled ? -1 : 0,\n    ref: hoverRef,\n    className: \"\".concat(directionClassNames, \" \").concat(className)\n  }, React.createElement(Icon, {\n    size: 36,\n    color: isDisabled ? theme.palette.neutral300 : theme.palette.blueberry600,\n    svgIcon: direction === 'prev' ? ChevronLeft : ChevronRight,\n    isHovered: isDisabled ? false : isHovered\n  }));\n};\n\nexport default HeaderNavIcon;","map":null,"metadata":{},"sourceType":"module"}