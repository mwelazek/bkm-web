{"ast":null,"code":"import _objectSpread from\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _createForOfIteratorHelper from\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import{ConnectedAPICallback}from'@onaio/gatekeeper';import{getUser}from'@onaio/session-reducer';import{trimStart}from'lodash';import querystring from'querystring';import React from'react';import{Redirect,withRouter}from'react-router';import{EXPRESS_OAUTH_GET_STATE_URL}from'../../../configs/env';import{URL_EXPRESS_LOGIN,URL_HOME,URL_LOGOUT}from'../../../constants';import{store}from'@opensrp/store';import{Spin}from'antd';import{sendSuccessNotification}from'@opensrp/notifications';import{useTranslation}from'../../../mls';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/**\n * antd notification popup.\n *\n * @param {user} user details object\n */export var openNotification=function openNotification(user,t){sendSuccessNotification(\"Welcome back, \".concat(user.username));};/** checks if the value of next in searchParam is blacklisted\n *\n * @param {RouteComponentProps} props - the props should contain the routing state.\n * @returns {boolean} return the response\n */export var nextIsValid=function nextIsValid(props){var response=true;var indirectionURLs=[URL_LOGOUT];/** we should probably sieve some routes from being passed on.\n   * For instance we don't need to redirect to logout since we are already in\n   * the Unsuccessful Login component, meaning we are already logged out.\n   */var stringifiedUrls=indirectionURLs.map(function(url){return querystring.stringify({next:url});});var _iterator=_createForOfIteratorHelper(stringifiedUrls),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var url=_step.value;if(props.location.search.includes(url)){response=false;break;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return response;};export var BaseSuccessfulLoginComponent=function BaseSuccessfulLoginComponent(props){var pathToRedirectTo=URL_HOME;var _useTranslation=useTranslation(),t=_useTranslation.t;if(nextIsValid(props)){var searchString=trimStart(props.location.search,'?');var searchParams=querystring.parse(searchString);var nextPath=searchParams.next;if(nextPath){pathToRedirectTo=nextPath;}if(nextPath==='/'){var user=getUser(store.getState());openNotification(user,t);}}return/*#__PURE__*/_jsx(Redirect,{to:pathToRedirectTo});};export var SuccessfulLoginComponent=withRouter(BaseSuccessfulLoginComponent);var BaseUnsuccessfulLogin=function BaseUnsuccessfulLogin(props){var redirectTo=\"\".concat(URL_EXPRESS_LOGIN).concat(props.location.search);if(!nextIsValid(props)){redirectTo=URL_EXPRESS_LOGIN;}window.location.href=redirectTo;return/*#__PURE__*/_jsx(_Fragment,{});};export var UnSuccessfulLogin=withRouter(BaseUnsuccessfulLogin);var CustomConnectedAPICallBack=function CustomConnectedAPICallBack(props){var unifiedProps=_objectSpread({LoadingComponent:function LoadingComponent(){return/*#__PURE__*/_jsx(Spin,{size:\"large\",className:\"custom-spinner\"});},UnSuccessfulLoginComponent:UnSuccessfulLogin,SuccessfulLoginComponent:SuccessfulLoginComponent,apiURL:EXPRESS_OAUTH_GET_STATE_URL},props);return/*#__PURE__*/_jsx(ConnectedAPICallback,_objectSpread({},unifiedProps));};export default CustomConnectedAPICallBack;","map":null,"metadata":{},"sourceType":"module"}