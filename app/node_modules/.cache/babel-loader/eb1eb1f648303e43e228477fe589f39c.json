{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar immer_1 = __importStar(require(\"immer\"));\n\nvar fhir_1 = require(\"../types/fhir\");\n\nvar constants_1 = require(\"@helsenorge/toolkit/constants\");\n\nvar form_1 = require(\"../actions/form\");\n\nvar generateQuestionnaireResponse_1 = require(\"../actions/generateQuestionnaireResponse\");\n\nvar newValue_1 = require(\"../actions/newValue\");\n\nvar syncQuestionnaireResponse_1 = require(\"../actions/syncQuestionnaireResponse\");\n\nvar createQuestionnaireResponseAnswer_1 = require(\"../util/createQuestionnaireResponseAnswer\");\n\nvar extension_1 = require(\"../util/extension\");\n\nvar index_1 = require(\"../util/index\");\n\nvar skjemautfyller_core_1 = require(\"../util/skjemautfyller-core\");\n\nimmer_1.enableES5();\nvar initialState = {\n  FormData: {\n    Content: null\n  },\n  FormDefinition: {\n    Content: null\n  },\n  Language: constants_1.Languages.NORWEGIAN.toLowerCase()\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case newValue_1.NEW_VALUE:\n      return processNewValueAction(action, state);\n\n    case newValue_1.REMOVE_ATTACHMENT_VALUE:\n      return processRemoveAttachmentValueAction(action, state);\n\n    case newValue_1.REMOVE_CODING_VALUE:\n      return processRemoveCodingValueAction(action, state);\n\n    case newValue_1.NEW_CODINGSTRING_VALUE:\n      return processNewCodingStringValueAction(action, state);\n\n    case newValue_1.REMOVE_CODINGSTRING_VALUE:\n      return processRemoveCodingStringValueAction(action, state);\n\n    case newValue_1.ADD_REPEAT_ITEM:\n      return processAddRepeatItemAction(action, state);\n\n    case newValue_1.DELETE_REPEAT_ITEM:\n      return processDeleteRepeatItemAction(action, state);\n\n    case form_1.SET_SKJEMA_DEFINITION:\n      return processSetSkjemaDefinition(action, state);\n\n    default:\n      return state;\n  }\n}\n\nexports.default = reducer;\n\nfunction getFormData(state) {\n  if (!state.skjemautfyller.form.FormData) {\n    return null;\n  }\n\n  return state.skjemautfyller.form.FormData;\n}\n\nexports.getFormData = getFormData;\n\nfunction getArrayToAddGroupTo(itemToAddTo) {\n  if (!itemToAddTo) {\n    return undefined;\n  }\n\n  if (itemToAddTo.answer) {\n    return itemToAddTo.answer[0].item;\n  } else if (itemToAddTo.item) {\n    return itemToAddTo.item;\n  }\n}\n\nfunction processAddRepeatItemAction(action, state) {\n  return immer_1.default(state, function (draft) {\n    if (!action.parentPath) {\n      return state;\n    }\n\n    var arrayToAddItemTo = [];\n\n    if (action.parentPath.length === 0 && draft.FormData.Content) {\n      arrayToAddItemTo = draft.FormData.Content.item;\n    } else if (action.parentPath.length > 0) {\n      var itemToAddTo = skjemautfyller_core_1.getResponseItemWithPath(action.parentPath, draft.FormData);\n      arrayToAddItemTo = getArrayToAddGroupTo(itemToAddTo);\n    }\n\n    if (!arrayToAddItemTo || arrayToAddItemTo.length === 0) {\n      return;\n    }\n\n    if (!action.responseItems || action.responseItems.length === 0) {\n      return;\n    }\n\n    var newItem = copyItem(action.responseItems[0], undefined, draft.FormDefinition.Content);\n\n    if (!newItem) {\n      return;\n    }\n\n    var indexToInsert = arrayToAddItemTo.map(function (o) {\n      return o.linkId;\n    }).lastIndexOf(newItem.linkId);\n    arrayToAddItemTo.splice(indexToInsert + 1, 0, newItem);\n  });\n}\n\nfunction processDeleteRepeatItemAction(action, state) {\n  return immer_1.default(state, function (draft) {\n    if (!action.itemPath) {\n      return state;\n    }\n\n    var arrayToDeleteItem = [];\n\n    if (action.itemPath.length === 1 && draft.FormData.Content) {\n      arrayToDeleteItem = draft.FormData.Content.item;\n    } else if (action.itemPath.length > 0) {\n      var parentPath = action.itemPath.slice(0, -1);\n      var itemToAddTo = skjemautfyller_core_1.getResponseItemWithPath(parentPath, draft.FormData);\n      arrayToDeleteItem = getArrayToAddGroupTo(itemToAddTo);\n    }\n\n    if (!arrayToDeleteItem || arrayToDeleteItem.length === 0) {\n      return;\n    }\n\n    if (!action.item) {\n      return;\n    }\n\n    var definitionLinkId = action.item.linkId;\n    var index = action.itemPath[action.itemPath.length - 1].index;\n    var itemIndexInArray = 0;\n\n    for (var i = 0; i <= arrayToDeleteItem.length - 1; i++) {\n      if (arrayToDeleteItem[i].linkId === definitionLinkId) {\n        if (itemIndexInArray === index) {\n          arrayToDeleteItem.splice(i, 1);\n          break;\n        }\n\n        itemIndexInArray++;\n      }\n    }\n  });\n}\n\nfunction copyItem(source, target, questionnaire) {\n  if (!target) {\n    target = {\n      linkId: source.linkId\n    };\n\n    if (source.text) {\n      target.text = source.text;\n    }\n  }\n\n  var _loop = function _loop(i) {\n    if (!target.item) {\n      target.item = [];\n    }\n\n    var newResponseItem = {\n      linkId: source.item[i].linkId\n    };\n\n    if (source.item[i].text) {\n      newResponseItem.text = source.item[i].text;\n    }\n\n    var numberOfItemsWithSameLinkId = target.item.filter(function (item) {\n      return item.linkId === newResponseItem.linkId;\n    }).length;\n\n    if (numberOfItemsWithSameLinkId > 0) {\n      var _defItem = skjemautfyller_core_1.getQuestionnaireDefinitionItem(newResponseItem.linkId, questionnaire.item);\n\n      var minOccurs = _defItem ? extension_1.getMinOccursExtensionValue(_defItem) || 1 : 1;\n\n      if (numberOfItemsWithSameLinkId >= minOccurs) {\n        return \"continue\";\n      }\n    }\n\n    target.item.push(newResponseItem);\n    copyItem(source.item[i], newResponseItem, questionnaire);\n  };\n\n  for (var i = 0; source.item && i < source.item.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  var defItem = skjemautfyller_core_1.getQuestionnaireDefinitionItem(source.linkId, questionnaire.item);\n\n  if (defItem && defItem.type !== 'attachment') {\n    for (var _i = 0; source.answer && _i < source.answer.length; _i++) {\n      if (!target.answer) {\n        target.answer = [];\n      }\n\n      var answer = source.answer[_i];\n      var targetAnswer = {\n        item: []\n      };\n\n      for (var j = 0; answer && answer.item && j < answer.item.length; j++) {\n        var newResponseItem = {\n          linkId: answer.item[j].linkId\n        };\n        targetAnswer.item.push(newResponseItem);\n        target.text = source.text;\n        copyItem(answer.item[j], newResponseItem, questionnaire);\n      }\n\n      target.answer.push(targetAnswer);\n    }\n  }\n\n  return target;\n}\n\nfunction runEnableWhen(action, state, draft) {\n  if (action.item && draft.FormData.Content) {\n    var qrItemsToClear = [];\n    var responseItems = skjemautfyller_core_1.getResponseItems(draft.FormData);\n    var calculatedResponseItems = JSON.parse(JSON.stringify(responseItems));\n    calculateEnableWhenItemsToClear([action.item], state.FormData, state.FormDefinition, action.itemPath, qrItemsToClear, calculatedResponseItems);\n\n    if (responseItems && responseItems.length > 0) {\n      for (var w = 0; w < qrItemsToClear.length; w++) {\n        var qrItemWithEnableWhen = getResponseItemWithLinkIdPossiblyContainingRepeat(qrItemsToClear[w].linkId, responseItems, action.itemPath);\n\n        if (qrItemWithEnableWhen) {\n          removeAddedRepeatingItems(qrItemsToClear[w].qItemWithEnableWhen, qrItemWithEnableWhen, responseItems);\n          wipeAnswerItems(qrItemWithEnableWhen, qrItemsToClear[w].qItemWithEnableWhen);\n        } else {\n          var _qrItemWithEnableWhen = skjemautfyller_core_1.getResponseItemAndPathWithLinkId(qrItemsToClear[w].linkId, draft.FormData.Content);\n\n          for (var r = 0; r < _qrItemWithEnableWhen.length; r++) {\n            removeAddedRepeatingItems(qrItemsToClear[w].qItemWithEnableWhen, _qrItemWithEnableWhen[r].item, responseItems);\n            wipeAnswerItems(_qrItemWithEnableWhen[r].item, qrItemsToClear[w].qItemWithEnableWhen);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction processRemoveCodingValueAction(action, state) {\n  return immer_1.default(state, function (draft) {\n    var responseItem = skjemautfyller_core_1.getResponseItemWithPath(action.itemPath || [], draft.FormData);\n\n    if (!responseItem || !responseItem.answer || !responseItem.answer.length) {\n      return;\n    }\n\n    if (action.valueCoding) {\n      responseItem.answer = responseItem.answer.map(function (el) {\n        if (el && el.item && el.valueCoding && el.valueCoding.code && action.valueCoding) {\n          return {\n            item: el.item\n          };\n        }\n\n        return el;\n      }).filter(function (el) {\n        if (el && el.valueCoding && el.valueCoding.code && action.valueCoding) {\n          return el.valueCoding.code !== action.valueCoding.code;\n        }\n\n        return true;\n      });\n\n      if (responseItem.answer.length === 0) {\n        delete responseItem.answer;\n      }\n    }\n\n    runEnableWhen(action, state, draft);\n  });\n}\n\nfunction processRemoveCodingStringValueAction(action, state) {\n  return immer_1.default(state, function (draft) {\n    var responseItem = skjemautfyller_core_1.getResponseItemWithPath(action.itemPath || [], draft.FormData);\n\n    if (!responseItem || !responseItem.answer || !responseItem.answer.length) {\n      return;\n    }\n\n    responseItem.answer = responseItem.answer.filter(function (el) {\n      return el && el.valueString ? false : true;\n    });\n\n    if (responseItem.answer.length === 0) {\n      delete responseItem.answer;\n    }\n\n    runEnableWhen(action, state, draft);\n  });\n}\n\nfunction processRemoveAttachmentValueAction(action, state) {\n  return immer_1.default(state, function (draft) {\n    var responseItem = skjemautfyller_core_1.getResponseItemWithPath(action.itemPath || [], draft.FormData);\n\n    if (!responseItem || !responseItem.answer || !responseItem.answer.length) {\n      return;\n    }\n\n    if (action.valueAttachment) {\n      var attachmentToRemove = action.valueAttachment.url;\n      responseItem.answer = responseItem.answer.filter(function (el) {\n        return el && el.valueAttachment && el.valueAttachment.url !== attachmentToRemove;\n      });\n    }\n\n    if (responseItem.answer.length === 0) {\n      delete responseItem.answer;\n    }\n  });\n}\n\nfunction processNewValueAction(action, state) {\n  return immer_1.default(state, function (draft) {\n    var responseItem = skjemautfyller_core_1.getResponseItemWithPath(action.itemPath || [], draft.FormData);\n\n    if (!responseItem) {\n      return;\n    }\n\n    var hasAnswer = false;\n\n    if (!responseItem.answer) {\n      responseItem.answer = [];\n    }\n\n    var answer = responseItem.answer[0];\n\n    if (!answer) {\n      answer = {};\n      responseItem.answer.push(answer);\n    }\n\n    if (action.valueBoolean !== undefined) {\n      hasAnswer = true;\n      answer.valueBoolean = action.valueBoolean;\n    }\n\n    if (action.valueDecimal !== undefined && !isNaN(action.valueDecimal)) {\n      hasAnswer = true;\n      answer.valueDecimal = action.valueDecimal;\n    }\n\n    if (action.valueInteger !== undefined && !isNaN(action.valueInteger)) {\n      hasAnswer = true;\n      answer.valueInteger = action.valueInteger;\n    }\n\n    if (!index_1.isStringEmpty(action.valueDate)) {\n      hasAnswer = true;\n      answer.valueDate = action.valueDate;\n    }\n\n    if (!index_1.isStringEmpty(action.valueDateTime)) {\n      hasAnswer = true;\n      answer.valueDateTime = action.valueDateTime;\n    }\n\n    if (!index_1.isStringEmpty(action.valueTime)) {\n      hasAnswer = true;\n      answer.valueTime = action.valueTime;\n    }\n\n    if (!index_1.isStringEmpty(action.valueString)) {\n      hasAnswer = true;\n      answer.valueString = action.valueString;\n    }\n\n    if (action.valueQuantity && action.valueQuantity.value !== undefined) {\n      hasAnswer = true;\n      answer.valueQuantity = action.valueQuantity;\n    }\n\n    if (action.valueCoding) {\n      hasAnswer = true;\n      var coding = {\n        code: action.valueCoding.code,\n        display: action.valueCoding.display\n      };\n\n      if (action.valueCoding.system !== undefined && action.valueCoding.system !== null) {\n        coding.system = action.valueCoding.system;\n      }\n\n      if (action.multipleAnswers) {\n        if (Object.keys(answer).length === 0) {\n          answer.valueCoding = coding;\n        } else {\n          var newAnswer = {};\n          newAnswer.valueCoding = coding;\n          responseItem.answer.push(newAnswer);\n        }\n      } else {\n        answer.valueCoding = coding;\n      }\n    }\n\n    if (action.valueAttachment && Object.keys(action.valueAttachment).length > 0) {\n      hasAnswer = true;\n      var attachment = {\n        url: action.valueAttachment.url,\n        title: action.valueAttachment.title,\n        data: action.valueAttachment.data,\n        contentType: action.valueAttachment.contentType,\n        creation: action.valueAttachment.creation,\n        hash: action.valueAttachment.hash,\n        size: action.valueAttachment.size,\n        language: action.valueAttachment.language\n      };\n\n      if (action.multipleAnswers) {\n        if (Object.keys(answer).length === 0) {\n          answer.valueAttachment = attachment;\n        } else {\n          var _newAnswer = {};\n          _newAnswer.valueAttachment = attachment;\n          responseItem.answer.push(_newAnswer);\n        }\n      } else {\n        answer.valueAttachment = attachment;\n      }\n    }\n\n    if (!hasAnswer) {\n      nullAnswerValue(answer);\n\n      if (Object.keys(answer).filter(function (prop) {\n        return !prop.startsWith('value');\n      }).length === 0) {\n        if (responseItem.answer && responseItem.answer.length === 1) {\n          delete responseItem.answer;\n        }\n      }\n    }\n\n    runEnableWhen(action, state, draft);\n  });\n}\n\nfunction processNewCodingStringValueAction(action, state) {\n  return immer_1.default(state, function (draft) {\n    var responseItem = skjemautfyller_core_1.getResponseItemWithPath(action.itemPath || [], draft.FormData);\n\n    if (!responseItem) {\n      return;\n    }\n\n    if (!responseItem.answer) {\n      responseItem.answer = [];\n    }\n\n    if (!index_1.isStringEmpty(action.valueString)) {\n      var found = -1;\n\n      for (var i = 0; i < responseItem.answer.length; i++) {\n        if (!index_1.isStringEmpty(responseItem.answer[i].valueString)) {\n          found = i;\n          break;\n        }\n      }\n\n      var newAnswer = {\n        valueString: action.valueString\n      };\n\n      if (found >= 0) {\n        responseItem.answer[found] = newAnswer;\n      } else {\n        responseItem.answer.push(newAnswer);\n      }\n    }\n  });\n}\n\nfunction getResponseItemWithLinkIdPossiblyContainingRepeat(linkId, items, path) {\n  var findResponseItem = function findResponseItem(linkId, items) {\n    var _iterator = _createForOfIteratorHelper(items),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        var result = skjemautfyller_core_1.getQuestionnaireResponseItemWithLinkid(linkId, item, path || []);\n        if (result) return result;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n\n  return findResponseItem(linkId, items);\n}\n\nfunction calculateEnableWhenItemsToClear(items, formData, formDefinition, path, qrItemsToClear, responseItems) {\n  if (!items || !formData.Content) {\n    return;\n  }\n\n  var definitionItems = skjemautfyller_core_1.getDefinitionItems(formDefinition);\n\n  if (!responseItems || responseItems.length === 0) {\n    return;\n  }\n\n  var qitemsWithEnableWhen = [];\n\n  for (var i = 0; i < items.length; i++) {\n    if (definitionItems) {\n      qitemsWithEnableWhen.push.apply(qitemsWithEnableWhen, _toConsumableArray(getItemsWithEnableWhen(items[i].linkId, definitionItems)));\n    }\n  }\n\n  if (!qitemsWithEnableWhen || qitemsWithEnableWhen.length === 0) {\n    return;\n  }\n\n  for (var _i2 = 0, _qitemsWithEnableWhen = qitemsWithEnableWhen; _i2 < _qitemsWithEnableWhen.length; _i2++) {\n    var qItemWithEnableWhen = _qitemsWithEnableWhen[_i2];\n    var enableWhenClauses = qItemWithEnableWhen.enableWhen;\n\n    if (!enableWhenClauses) {\n      continue;\n    }\n\n    var qrItemsWithEnableWhen = skjemautfyller_core_1.getResponseItemAndPathWithLinkId(qItemWithEnableWhen.linkId, formData.Content);\n\n    var _iterator2 = _createForOfIteratorHelper(qrItemsWithEnableWhen),\n        _step2;\n\n    try {\n      var _loop2 = function _loop2() {\n        var qrItemWithEnableWhen = _step2.value;\n        var enableMatches = [];\n        var enableBehavior = qItemWithEnableWhen.enableBehavior;\n        enableWhenClauses.forEach(function (enableWhen) {\n          var enableWhenQuestionItem = skjemautfyller_core_1.getQuestionnaireDefinitionItem(enableWhen.question, definitionItems);\n          if (!enableWhenQuestionItem) return;\n          var responseItem = getResponseItemWithLinkIdPossiblyContainingRepeat(enableWhen.question, responseItems, path);\n\n          if (responseItem) {\n            var matchesAnswer = skjemautfyller_core_1.enableWhenMatchesAnswer(enableWhen, responseItem.answer);\n            enableMatches.push(matchesAnswer);\n          }\n        });\n        var enable = enableBehavior === fhir_1.QuestionnaireItemEnableBehaviorCodes.ALL ? enableMatches.every(function (x) {\n          return x === true;\n        }) : enableMatches.some(function (x) {\n          return x === true;\n        });\n\n        if (!enable) {\n          var item = getResponseItemWithLinkIdPossiblyContainingRepeat(qrItemWithEnableWhen.item.linkId, responseItems, path);\n\n          if (item) {\n            removeAddedRepeatingItems(qItemWithEnableWhen, item, responseItems);\n            wipeAnswerItems(item, qItemWithEnableWhen);\n          }\n\n          qrItemsToClear.push({\n            qItemWithEnableWhen: qItemWithEnableWhen,\n            linkId: qrItemWithEnableWhen.item.linkId\n          });\n        }\n      };\n\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        _loop2();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  calculateEnableWhenItemsToClear(qitemsWithEnableWhen, formData, formDefinition, path, qrItemsToClear, responseItems);\n  qitemsWithEnableWhen.forEach(function (i) {\n    return i.item && calculateEnableWhenItemsToClear(i.item, formData, formDefinition, path, qrItemsToClear, responseItems);\n  });\n}\n\nfunction removeAddedRepeatingItems(defItem, repeatingItemLinkId, responseItems) {\n  if (defItem.repeats) {\n    var arrayToDeleteItem = skjemautfyller_core_1.getArrayContainingResponseItemFromItems(repeatingItemLinkId.linkId, responseItems);\n    var minOccurs = extension_1.getMinOccursExtensionValue(defItem);\n\n    if (arrayToDeleteItem) {\n      var keepThreshold = minOccurs ? minOccurs : 1;\n      var repeatingItemIndex = arrayToDeleteItem.filter(function (item) {\n        return item.linkId === repeatingItemLinkId.linkId;\n      }).length;\n\n      for (var i = arrayToDeleteItem.length - 1; i >= 0; i--) {\n        var e = arrayToDeleteItem[i];\n\n        if (e.linkId === defItem.linkId) {\n          if (repeatingItemIndex > keepThreshold) {\n            arrayToDeleteItem.splice(i, 1);\n          }\n\n          repeatingItemIndex--;\n        }\n      }\n    }\n  }\n}\n\nfunction getFormDefinition(state) {\n  if (!state.skjemautfyller.form.FormDefinition) {\n    return null;\n  }\n\n  return state.skjemautfyller.form.FormDefinition;\n}\n\nexports.getFormDefinition = getFormDefinition;\n\nfunction wipeAnswerItems(answerItem, item) {\n  if (!answerItem || !item) {\n    return undefined;\n  }\n\n  if (answerItem.answer) {\n    answerItem.answer.forEach(function (answer) {\n      resetAnswerValue(answer, item);\n    });\n\n    for (var i = answerItem.answer.length - 1; i >= 0; i--) {\n      var a = answerItem.answer[i];\n      if (Object.keys(a).length === 0) answerItem.answer.splice(i, 1);\n    }\n  }\n\n  for (var _i3 = 0; answerItem.item && item.item && _i3 < answerItem.item.length; _i3++) {\n    wipeAnswerItems(answerItem.item[_i3], item.item[_i3]);\n  }\n\n  for (var _i4 = 0; answerItem.answer && item.item && _i4 < answerItem.answer.length; _i4++) {\n    var nestedItems = answerItem.answer[_i4].item;\n\n    if (nestedItems && nestedItems.length > 0) {\n      for (var j = 0; j < nestedItems.length; j++) {\n        wipeAnswerItems(nestedItems[j], item.item[_i4]);\n      }\n    }\n  }\n}\n\nfunction resetAnswerValue(answer, item) {\n  var initialAnswer = createQuestionnaireResponseAnswer_1.createQuestionnaireResponseAnswer(item);\n  nullAnswerValue(answer, initialAnswer);\n}\n\nfunction nullAnswerValue(answer) {\n  var initialAnswer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  if (!answer) {\n    return undefined;\n  }\n\n  if (answer.valueBoolean !== undefined) {\n    initialAnswer ? answer.valueBoolean = initialAnswer.valueBoolean : answer.valueBoolean = false;\n  } else if (answer.valueCoding !== undefined) {\n    initialAnswer ? answer.valueCoding = initialAnswer.valueCoding : delete answer.valueCoding;\n  } else if (answer.valueDate !== undefined) {\n    initialAnswer ? answer.valueDate = initialAnswer.valueDate : delete answer.valueDate;\n  } else if (answer.valueDateTime !== undefined) {\n    initialAnswer ? answer.valueDateTime = initialAnswer.valueDateTime : delete answer.valueDateTime;\n  } else if (answer.valueDecimal !== undefined) {\n    initialAnswer ? answer.valueDecimal = initialAnswer.valueDecimal : delete answer.valueDecimal;\n  } else if (answer.valueInteger !== undefined) {\n    initialAnswer ? answer.valueInteger = initialAnswer.valueInteger : delete answer.valueInteger;\n  } else if (answer.valueString !== undefined) {\n    initialAnswer ? answer.valueString = initialAnswer.valueString : delete answer.valueString;\n  } else if (answer.valueTime !== undefined) {\n    initialAnswer ? answer.valueTime = initialAnswer.valueTime : delete answer.valueTime;\n  }\n}\n\nexports.nullAnswerValue = nullAnswerValue;\n\nfunction getItemsWithEnableWhen(linkId, definitionItems) {\n  var relatedItems = [];\n\n  var getQuestionnaireItemHasEnableWhenLinkid = function getQuestionnaireItemHasEnableWhenLinkid(linkId, definitionItem) {\n    if (!definitionItem) {\n      return undefined;\n    }\n\n    var hasItems = definitionItem.item && definitionItem.item.length > 0;\n\n    if (!hasItems) {\n      return undefined;\n    }\n\n    var itemsEnableWhenMatchLinkId = getItemEnableWhenQuestionMatchIdFromArray(linkId, definitionItem.item);\n\n    if (itemsEnableWhenMatchLinkId && itemsEnableWhenMatchLinkId.length >= 0) {\n      itemsEnableWhenMatchLinkId.forEach(function (i) {\n        relatedItems.push(i);\n      });\n    }\n\n    for (var i = 0; definitionItem.item && i < definitionItem.item.length; i++) {\n      getQuestionnaireItemHasEnableWhenLinkid(linkId, definitionItem.item[i]);\n    }\n  };\n\n  for (var k = 0; k < definitionItems.length; k++) {\n    var enableWhen = definitionItems[k].enableWhen;\n\n    if (enableWhen) {\n      for (var n = 0; n < enableWhen.length; n++) {\n        if (enableWhen[n].question === linkId) {\n          relatedItems.push(definitionItems[k]);\n        }\n      }\n    }\n\n    getQuestionnaireItemHasEnableWhenLinkid(linkId, definitionItems[k]);\n  }\n\n  return relatedItems;\n}\n\nfunction getItemEnableWhenQuestionMatchIdFromArray(linkId, definitionItems) {\n  if (!definitionItems) {\n    return [];\n  }\n\n  var matchedItems = [];\n\n  for (var i = 0; i < definitionItems.length; i++) {\n    var enableWhen = definitionItems[i].enableWhen;\n\n    if (!enableWhen) {\n      continue;\n    }\n\n    for (var j = 0; j < enableWhen.length; j++) {\n      if (enableWhen[j].question === linkId) {\n        matchedItems.push(definitionItems[i]);\n      }\n    }\n  }\n\n  return matchedItems;\n}\n\nfunction processSetSkjemaDefinition(action, state) {\n  if (!action.questionnaire) {\n    return state;\n  }\n\n  var formDefinition = {\n    Content: action.questionnaire\n  };\n  var formData;\n\n  if (action.questionnaireResponse && action.syncQuestionnaireResponse) {\n    formData = {\n      Content: syncQuestionnaireResponse_1.syncQuestionnaireResponse(action.questionnaire, action.questionnaireResponse)\n    };\n  } else if (action.questionnaireResponse) {\n    formData = {\n      Content: action.questionnaireResponse\n    };\n  } // override stale formData slice\n  // else if (state.FormData === initialState.FormData) {\n  //     formData = { Content: generateQuestionnaireResponse_1.generateQuestionnaireResponse(action.questionnaire) };\n  // }\n  else {\n    // formData = state.FormData;\n    formData = {\n      Content: generateQuestionnaireResponse_1.generateQuestionnaireResponse(action.questionnaire)\n    };\n  }\n\n  return Object.assign(Object.assign({}, state), {\n    FormDefinition: formDefinition,\n    FormData: formData,\n    Language: action.language || state.Language\n  });\n}","map":null,"metadata":{},"sourceType":"script"}