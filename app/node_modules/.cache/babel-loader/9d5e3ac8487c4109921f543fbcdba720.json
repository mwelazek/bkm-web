{"ast":null,"code":"import _defineProperty from \"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FunctionButton } from '../buttons/function-button';\nimport { ConfirmBox } from '../../molecules/confirmbox';\nimport Delete from '../../icons/Delete';\nimport FormatJPG from '../../icons/FormatJPG';\nimport FormatPNG from '../../icons/FormatPNG';\nimport FormatPDF from '../../icons/FormatPDF';\nimport FormatWORD from '../../icons/FormatWORD';\nimport FormatRTF from '../../icons/FormatRTF';\nimport FormatXML from '../../icons/FormatXML';\nimport FormatAny from '../../icons/FormatAny';\nimport styles from './toolkitstyles.module.scss';\nexport var Type;\n\n(function (Type) {\n  Type[\"verified\"] = \"verified\";\n  Type[\"rejected\"] = \"rejected\";\n})(Type || (Type = {}));\n\nvar fileType = function fileType(fileName, className) {\n  if (fileName) {\n    var filetype = fileName.split('.')[1];\n    var props = {\n      className: className,\n      size: 'large'\n    };\n\n    switch (filetype) {\n      case 'doc':\n        return React.createElement(FormatWORD, Object.assign({}, props));\n\n      case 'jpg':\n      case 'jpeg':\n        return React.createElement(FormatJPG, Object.assign({}, props));\n\n      case 'pdf':\n        return React.createElement(FormatPDF, Object.assign({}, props));\n\n      case 'png':\n        return React.createElement(FormatPNG, Object.assign({}, props));\n\n      case 'rtf':\n        return React.createElement(FormatRTF, Object.assign({}, props));\n\n      case 'xml':\n        return React.createElement(FormatXML, Object.assign({}, props));\n\n      default:\n        return React.createElement(FormatAny, Object.assign({}, props));\n    }\n  } else return '';\n};\n\nvar FileElement = /*#__PURE__*/function (_React$Component) {\n  _inherits(FileElement, _React$Component);\n\n  var _super = _createSuper(FileElement);\n\n  function FileElement(props) {\n    var _this;\n\n    _classCallCheck(this, FileElement);\n\n    _this = _super.call(this, props);\n\n    _this.setConfirmDelete = function () {\n      _this.setState({\n        showDeleteLightbox: true\n      });\n    };\n\n    _this.onDeleteLightboxClose = function () {\n      _this.setState({\n        showDeleteLightbox: false\n      });\n    };\n\n    _this.renderConfirmDelete = function () {\n      return _this.state.showDeleteLightbox && React.createElement(ConfirmBox, {\n        wrapperClassName: _this.props.confirmDeleteClassName,\n        onClose: _this.onDeleteLightboxClose,\n        noCloseButton: false,\n        closeText: _this.props.cancelText,\n        confirmText: _this.props.confirmText,\n        onConfirm: _this.deleteFile,\n        onCancel: _this.onDeleteLightboxClose\n      }, React.createElement(\"h4\", null, _this.props.verifyDeleteText));\n    };\n\n    _this.state = {\n      showDeleteLightbox: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.renderDeleteButton = _this.renderDeleteButton.bind(_assertThisInitialized(_this));\n    _this.deleteFile = _this.deleteFile.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FileElement, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      var _this$props = this.props,\n          fileId = _this$props.fileId,\n          onOpenFile = _this$props.onOpenFile;\n\n      if (onOpenFile && fileId) {\n        onOpenFile(fileId);\n      }\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"deleteFile\",\n    value: function deleteFile() {\n      if (this.props.deleteFile) {\n        return this.props.deleteFile(this.props.fileId ? this.props.fileId : '');\n      }\n    }\n  }, {\n    key: \"renderDeleteButton\",\n    value: function renderDeleteButton() {\n      var _this$props2 = this.props,\n          shouldRenderDeleteButton = _this$props2.shouldRenderDeleteButton,\n          loading = _this$props2.loading,\n          dontShowHardcodedText = _this$props2.dontShowHardcodedText,\n          deleteText = _this$props2.deleteText,\n          confirmDelete = _this$props2.confirmDelete;\n\n      if (shouldRenderDeleteButton && !loading) {\n        return React.createElement(FunctionButton, {\n          svgIcon: React.createElement(Delete, {\n            variant: 'error'\n          }),\n          className: classNames(styles.dropzone__deleteButton, _defineProperty({}, \"\".concat(this.props.customClass, \"__button\"), this.props.customClass)),\n          onClick: confirmDelete ? this.setConfirmDelete : this.deleteFile\n        }, React.createElement(React.Fragment, null, deleteText, !dontShowHardcodedText && 'Slett'));\n      }\n    }\n  }, {\n    key: \"renderFile\",\n    value: function renderFile() {\n      var _this$props3 = this.props,\n          loading = _this$props3.loading,\n          fileId = _this$props3.fileId,\n          fileName = _this$props3.fileName,\n          onRequestLink = _this$props3.onRequestLink;\n\n      if (!loading) {\n        var attachmentLink = onRequestLink && fileId ? onRequestLink(fileId) : '';\n\n        if (attachmentLink) {\n          return React.createElement(\"a\", {\n            href: attachmentLink,\n            className: classNames(_defineProperty({}, \"\".concat(this.props.customClass, \"__link\"), this.props.customClass)),\n            onClick: this.handleClick\n          }, fileName);\n        }\n\n        return fileName;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames3;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"li\", {\n        className: classNames((_classNames3 = {}, _defineProperty(_classNames3, styles['dropzone__files__file'], !this.props.customClass), _defineProperty(_classNames3, \"\".concat(this.props.customClass), this.props.customClass), _defineProperty(_classNames3, \"\".concat(this.props.customClass, \"--\").concat(this.props.type), this.props.customClass), _classNames3))\n      }, fileType(this.props.fileName, classNames(_defineProperty({}, \"\".concat(this.props.customClass, \"__svgicon\"), this.props.customClass))), this.renderFile(), this.renderDeleteButton()), this.props.confirmDelete && this.renderConfirmDelete());\n    }\n  }]);\n\n  return FileElement;\n}(React.Component);\n\nexport { FileElement as default };","map":null,"metadata":{},"sourceType":"module"}