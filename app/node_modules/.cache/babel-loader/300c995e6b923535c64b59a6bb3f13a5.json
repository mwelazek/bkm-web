{"ast":null,"code":"import * as React from 'react';\nimport classNames from 'classnames';\nimport { AnalyticsId } from '@helsenorge/core-utils/adobe-analytics';\nimport { isIconTypeDestructive, getIconColor } from './helper';\nimport toolkitstyles from './styles.module.scss';\nexport const FunctionButton = React.forwardRef((_ref, ref) => {\n  let {\n    children,\n    disabled,\n    primary,\n    secondary,\n    onClick,\n    id,\n    className,\n    ariaLabel,\n    ariaHidden,\n    ariaHaspopup,\n    ariaExpanded,\n    ariaControls,\n    ariaDescribedBy,\n    dataName,\n    testId,\n    svgIcon\n  } = _ref;\n  const [isThreeLines, setIsThreeLines] = React.useState(false);\n\n  if (!primary && !secondary) {\n    primary = true;\n  }\n\n  const buttonRef = React.useRef(null);\n  const textRef = React.useRef(null);\n  const iconTypeIsDestructive = isIconTypeDestructive(svgIcon);\n  const classes = classNames(toolkitstyles.atom_functionbutton, {\n    [toolkitstyles['atom_functionbutton--primary']]: primary,\n    [toolkitstyles['atom_functionbutton--secondary']]: secondary,\n    [toolkitstyles['atom_functionbutton--destructive']]: iconTypeIsDestructive,\n    disabled: disabled\n  }, className);\n  const textClasses = classNames(toolkitstyles.atom_functionbutton__text, {\n    [toolkitstyles['atom_functionbutton__text--destructive']]: iconTypeIsDestructive,\n    [toolkitstyles['atom_functionbutton__text--threelines']]: isThreeLines\n  });\n\n  const iconWithColor = icon => {\n    const iconColor = getIconColor(icon);\n    return React.cloneElement(icon, {\n      color: iconColor\n    });\n  };\n\n  const handleResize = () => {\n    if (textRef.current) {\n      setIsThreeLines(textRef.current.offsetHeight > 40);\n    }\n  };\n\n  React.useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return React.createElement(\"button\", {\n    ref: ref ? ref : buttonRef,\n    type: \"button\",\n    id: id,\n    disabled: disabled,\n    className: classes,\n    onClick: onClick,\n    \"aria-label\": ariaLabel,\n    \"aria-hidden\": ariaHidden,\n    \"aria-haspopup\": ariaHaspopup,\n    \"aria-expanded\": ariaExpanded,\n    \"aria-controls\": ariaControls,\n    \"aria-describedby\": ariaDescribedBy,\n    \"data-name\": dataName,\n    \"data-testid\": testId,\n    \"data-analyticsid\": AnalyticsId.FunctionButton\n  }, React.createElement(\"span\", {\n    className: toolkitstyles.atom_functionbutton__icon\n  }, iconWithColor(svgIcon)), primary && React.createElement(\"span\", {\n    ref: textRef,\n    className: textClasses\n  }, children));\n});\nexport default FunctionButton;","map":null,"metadata":{},"sourceType":"module"}