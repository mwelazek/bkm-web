{"ast":null,"code":"import * as React from 'react';\nimport classNames from 'classnames';\nimport { AnalyticsId } from '@helsenorge/core-utils/adobe-analytics';\nimport ChevronDownSmall from './../../../icons/ChevronDownSmall';\nimport ChevronLeft from './../../../icons/ChevronLeft';\nimport './styles.scss';\nexport var NavigationButton = React.forwardRef(function NavigationButtonForwardRef(_ref, ref) {\n  var arrowUp = _ref.arrowUp,\n      arrowBack = _ref.arrowBack,\n      arrowBefore = _ref.arrowBefore,\n      isArrowHidden = _ref.isArrowHidden,\n      onClick = _ref.onClick,\n      className = _ref.className,\n      ariaHidden = _ref.ariaHidden,\n      ariaExpanded = _ref.ariaExpanded,\n      ariaControls = _ref.ariaControls,\n      tabIndex = _ref.tabIndex,\n      children = _ref.children,\n      fullWidth = _ref.fullWidth,\n      testId = _ref.testId;\n  var buttonRef = React.useRef(null);\n  var classes = classNames('atom_navigationbutton', className, {\n    'atom_navigationbutton--full-width': fullWidth\n  });\n  var arrowClasses = classNames('atom_navigationbutton__icon', {\n    'atom_navigationbutton__icon--up': arrowUp,\n    'atom_navigationbutton__icon--before': arrowBefore || arrowBack,\n    'atom_navigationbutton__icon--after': !arrowBefore && !arrowBack,\n    'atom_navigationbutton__icon--back': arrowBack\n  });\n  return React.createElement(\"button\", {\n    ref: ref ? ref : buttonRef,\n    type: \"button\",\n    onClick: onClick,\n    className: classes,\n    \"aria-hidden\": ariaHidden,\n    \"aria-controls\": ariaControls,\n    \"aria-expanded\": ariaExpanded,\n    tabIndex: tabIndex,\n    \"data-testid\": testId,\n    \"data-analyticsid\": AnalyticsId.NavigationButton\n  }, !isArrowHidden && arrowBefore && React.createElement(ChevronDownSmall, {\n    className: arrowClasses\n  }), !isArrowHidden && arrowBack && React.createElement(ChevronLeft, {\n    className: arrowClasses\n  }), React.createElement(\"span\", {\n    className: \"atom_navigationbutton__text\"\n  }, children), !isArrowHidden && !arrowBefore && !arrowBack && React.createElement(ChevronDownSmall, {\n    className: arrowClasses\n  }));\n});\nexport default NavigationButton;","map":null,"metadata":{},"sourceType":"module"}