{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.submitForm = exports.removeAssignedRoles = exports.fetchSingleGroup = exports.fetchRoleMappings = exports.assignRoles = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _connectedReducerRegistry = require(\"@onaio/connected-reducer-registry\");\n\nvar _keycloakService = require(\"@opensrp/keycloak-service\");\n\nvar _notifications = require(\"@opensrp/notifications\");\n\nvar _constants = require(\"../../constants\");\n\nvar _userGroups = require(\"../../ducks/userGroups\");\n\nvar fetchRoleMappings = function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(groupId, keycloakBaseURL, roleMappingEndpoint, setRolesAction, t) {\n    var keycloakService;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            keycloakService = new _keycloakService.KeycloakService(\"\".concat(_constants.KEYCLOAK_URL_USER_GROUPS, \"/\").concat(groupId).concat(roleMappingEndpoint), keycloakBaseURL);\n            _context.next = 3;\n            return keycloakService.list().then(function (response) {\n              setRolesAction(response);\n            })[\"catch\"](function (_) {\n              (0, _notifications.sendErrorNotification)(t('There was a problem fetching role mappings'));\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchRoleMappings(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.fetchRoleMappings = fetchRoleMappings;\n\nvar removeAssignedRoles = function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2(groupId, keycloakBaseURL, allRoles, rolesToRemove, t) {\n    var data, keycloakService;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = [];\n            rolesToRemove.forEach(function (roleId) {\n              var roleObj = allRoles.find(function (role) {\n                return role.id === roleId;\n              });\n              data.push(roleObj);\n            });\n            keycloakService = new _keycloakService.KeycloakService(\"\".concat(_constants.KEYCLOAK_URL_USER_GROUPS, \"/\").concat(groupId).concat(_constants.KEYCLOAK_URL_ASSIGNED_ROLES), keycloakBaseURL);\n            _context2.next = 5;\n            return keycloakService.update(data, null, 'DELETE').then(function () {\n              (0, _notifications.sendSuccessNotification)(t('Role Mappings Updated Successfully'));\n            })[\"catch\"](function (_) {\n              (0, _notifications.sendErrorNotification)(t('There was a problem removing assigned roles'));\n            });\n\n          case 5:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function removeAssignedRoles(_x6, _x7, _x8, _x9, _x10) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.removeAssignedRoles = removeAssignedRoles;\n\nvar assignRoles = function () {\n  var _ref3 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee3(groupId, keycloakBaseURL, allRoles, rolesToAdd, t) {\n    var data, keycloakService;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            data = [];\n            rolesToAdd.forEach(function (roleId) {\n              var roleObj = allRoles.find(function (role) {\n                return role.id === roleId;\n              });\n              data.push(roleObj);\n            });\n            keycloakService = new _keycloakService.KeycloakService(\"\".concat(_constants.KEYCLOAK_URL_USER_GROUPS, \"/\").concat(groupId).concat(_constants.KEYCLOAK_URL_ASSIGNED_ROLES), keycloakBaseURL);\n            _context3.next = 5;\n            return keycloakService.create(data).then(function () {\n              (0, _notifications.sendSuccessNotification)(t('Role Mappings Updated Successfully'));\n            })[\"catch\"](function (_) {\n              (0, _notifications.sendErrorNotification)(t('There was a problem assigning roles'));\n            });\n\n          case 5:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function assignRoles(_x11, _x12, _x13, _x14, _x15) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.assignRoles = assignRoles;\n\nvar fetchSingleGroup = function () {\n  var _ref4 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee4(groupId, keycloakBaseURL, dispatch, t) {\n    var keycloakService;\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            keycloakService = new _keycloakService.KeycloakService(_constants.KEYCLOAK_URL_USER_GROUPS, keycloakBaseURL);\n            _context4.next = 3;\n            return keycloakService.read(groupId).then(function (response) {\n              dispatch((0, _userGroups.fetchKeycloakUserGroups)([response]));\n            })[\"catch\"](function (_) {\n              (0, _notifications.sendErrorNotification)(t('There was a problem fetching User Group'));\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function fetchSingleGroup(_x16, _x17, _x18, _x19) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.fetchSingleGroup = fetchSingleGroup;\n\nvar submitForm = function () {\n  var _ref5 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee5(values, keycloakBaseURL, setSubmittingCallback, t) {\n    var serve, newUUID, _serve;\n\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (values.id) {\n              serve = new _keycloakService.KeycloakService(\"\".concat(_constants.KEYCLOAK_URL_USER_GROUPS, \"/\").concat(values.id), keycloakBaseURL);\n              serve.update(values).then(function () {\n                return (0, _notifications.sendSuccessNotification)(t('User Group edited successfully'));\n              })[\"catch\"](function (_) {\n                return (0, _notifications.sendErrorNotification)(t('There was a problem editing User Group'));\n              })[\"finally\"](function () {\n                _connectedReducerRegistry.history.push(_constants.URL_USER_GROUPS);\n\n                setSubmittingCallback(false);\n              });\n            } else {\n              _serve = new _keycloakService.KeycloakService(_constants.KEYCLOAK_URL_USER_GROUPS, keycloakBaseURL);\n\n              _serve.create({\n                name: values.name\n              }).then(function (res) {\n                var _res$headers$get;\n\n                var locationStr = (_res$headers$get = res.headers.get('location')) === null || _res$headers$get === void 0 ? void 0 : _res$headers$get.split('/');\n                newUUID = locationStr[locationStr.length - 1];\n                (0, _notifications.sendSuccessNotification)(t('User Group created successfully'));\n              })[\"catch\"](function (_) {\n                return (0, _notifications.sendErrorNotification)(t('There was a problem creating User Group'));\n              })[\"finally\"](function () {\n                setSubmittingCallback(false);\n\n                if (newUUID) {\n                  _connectedReducerRegistry.history.push(\"\".concat(_constants.URL_USER_GROUP_EDIT, \"/\").concat(newUUID));\n                }\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function submitForm(_x20, _x21, _x22, _x23) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.submitForm = submitForm;","map":null,"metadata":{},"sourceType":"script"}