{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar form_1 = __importDefault(require(\"@helsenorge/toolkit/components/molecules/form\"));\n\nvar form_2 = require(\"../actions/form\");\n\nvar newValue_1 = require(\"../actions/newValue\");\n\nvar repeat_button_1 = __importDefault(require(\"../components/formcomponents/repeat/repeat-button\"));\n\nvar extensions_1 = __importDefault(require(\"../constants/extensions\"));\n\nvar index_1 = __importDefault(require(\"../constants/index\"));\n\nvar itemType_1 = __importDefault(require(\"../constants/itemType\"));\n\nvar presentationButtonsType_1 = require(\"../constants/presentationButtonsType\");\n\nvar form_3 = require(\"../reducers/form\");\n\nvar actionRequester_1 = require(\"../util/actionRequester\");\n\nvar extension_1 = require(\"../util/extension\");\n\nvar hacks_1 = require(\"../util/hacks\");\n\nvar index_2 = require(\"../util/index\");\n\nvar questionnaireInspector_1 = require(\"../util/questionnaireInspector\");\n\nvar renderContext_1 = require(\"../util/renderContext\");\n\nvar scoringCalculator_1 = require(\"../util/scoringCalculator\");\n\nvar skjemautfyller_core_1 = require(\"../util/skjemautfyller-core\");\n\nvar Skjemautfyller = /*#__PURE__*/function (_React$Component) {\n  _inherits(Skjemautfyller, _React$Component);\n\n  var _super = _createSuper(Skjemautfyller);\n\n  function Skjemautfyller(props) {\n    var _this;\n\n    _classCallCheck(this, Skjemautfyller);\n\n    _this = _super.call(this, props);\n\n    _this.onSubmit = function () {\n      var _this$props = _this.props,\n          formData = _this$props.formData,\n          onSubmit = _this$props.onSubmit;\n\n      if (formData && formData.Content && onSubmit) {\n        onSubmit(formData.Content);\n      }\n    };\n\n    _this.onSave = function () {\n      if (_this.props.onSave && _this.props.formData && _this.props.formData.Content) {\n        _this.props.onSave(_this.props.formData.Content);\n      }\n    };\n\n    _this.onAnswerChange = function (newState, _path, item, answer) {\n      if (_this.props.onChange && newState.skjemautfyller.form.FormDefinition.Content && newState.skjemautfyller.form.FormData.Content) {\n        var actionRequester = new actionRequester_1.ActionRequester(newState.skjemautfyller.form.FormDefinition.Content, newState.skjemautfyller.form.FormData.Content);\n        var questionnaireInspector = new questionnaireInspector_1.QuestionniareInspector(newState.skjemautfyller.form.FormDefinition.Content, newState.skjemautfyller.form.FormData.Content);\n\n        _this.props.onChange(item, answer, actionRequester, questionnaireInspector);\n\n        var _iterator = _createForOfIteratorHelper(actionRequester.getActions()),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var action = _step.value;\n\n            _this.props.dispatch(action);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      _this.runScoringCalculator(newState);\n    };\n\n    _this.runScoringCalculator = function (newState) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      if (!_this.scoringCalculator && ((_a = _this.props.formDefinition) === null || _a === void 0 ? void 0 : _a.Content)) {\n        _this.scoringCalculator = new scoringCalculator_1.ScoringCalculator(_this.props.formDefinition.Content);\n      }\n\n      if (!_this.scoringCalculator || !((_d = (_c = (_b = newState.skjemautfyller) === null || _b === void 0 ? void 0 : _b.form) === null || _c === void 0 ? void 0 : _c.FormData) === null || _d === void 0 ? void 0 : _d.Content) || !((_g = (_f = (_e = newState.skjemautfyller) === null || _e === void 0 ? void 0 : _e.form) === null || _f === void 0 ? void 0 : _f.FormDefinition) === null || _g === void 0 ? void 0 : _g.Content)) {\n        return;\n      }\n\n      var scores = _this.scoringCalculator.calculate(newState.skjemautfyller.form.FormData.Content);\n\n      var actions = [];\n\n      for (var linkId in scores) {\n        var templateItem = _this.scoringCalculator.getCachedTotalOrSectionItem(linkId);\n\n        if (!templateItem) continue;\n        var extension = extension_1.getQuestionnaireUnitExtensionValue(templateItem);\n        if (!extension) continue;\n        var quantity = {\n          unit: extension.display,\n          system: extension.system,\n          code: extension.code\n        };\n        var item = skjemautfyller_core_1.getQuestionnaireDefinitionItem(linkId, (_h = newState.skjemautfyller.form.FormDefinition.Content) === null || _h === void 0 ? void 0 : _h.item);\n        var itemsAndPaths = skjemautfyller_core_1.getResponseItemAndPathWithLinkId(linkId, newState.skjemautfyller.form.FormData.Content);\n        var value = scores[linkId];\n\n        if (item && value != null && !isNaN(value) && isFinite(value)) {\n          var decimalPlacesExtension = extension_1.getExtension(extensions_1.default.STEP_URL, item);\n\n          if (decimalPlacesExtension && decimalPlacesExtension.valueInteger != null) {\n            var places = Number(decimalPlacesExtension.valueInteger);\n            value = Number(value === null || value === void 0 ? void 0 : value.toFixed(places));\n          }\n\n          quantity.value = value;\n        }\n\n        var _iterator2 = _createForOfIteratorHelper(itemsAndPaths),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var itemAndPath = _step2.value;\n            actions.push(newValue_1.newQuantityValue(itemAndPath.path, quantity, item));\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      for (var _i = 0, _actions = actions; _i < _actions.length; _i++) {\n        var a = _actions[_i];\n\n        _this.props.dispatch(a);\n      }\n    };\n\n    _this.renderSkjema = function (pdf) {\n      var _this$props2 = _this.props,\n          formDefinition = _this$props2.formDefinition,\n          resources = _this$props2.resources;\n\n      if (!formDefinition || !formDefinition.Content || !resources) {\n        return null;\n      }\n\n      if (pdf) {\n        return _this.renderFormItems(true);\n      }\n\n      var presentationButtonsType = extension_1.getPresentationButtonsExtension(formDefinition.Content);\n      var form = _this.props.authorized ? _this.renderFormWhenAuthorized() : _this.renderFormWhenNotAuthorized();\n      return React.createElement(\"div\", {\n        className: _this.getButtonClasses(presentationButtonsType, ['page_skjemautfyller__content'])\n      }, React.createElement(\"div\", {\n        className: \"page_skjemautfyller__messageboxes\"\n      }), form);\n    };\n\n    _this.renderFormWhenNotAuthorized = function () {\n      var resources = _this.props.resources;\n\n      if (!resources) {\n        return;\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(form_1.default, {\n        action: \"#\",\n        disabled: _this.props.blockSubmit,\n        errorMessage: resources.formError,\n        requiredLabel: resources.formRequired,\n        optionalLabel: resources.formOptional,\n        triggerPreventDefaultOnSubmit: true,\n        validationSummaryPlacement: _this.props.validationSummaryPlacement,\n        validationSummary: {\n          enable: true,\n          header: resources.validationSummaryHeader\n        },\n        submitButtonDisabled: _this.props.submitButtonDisabled,\n        pauseButtonDisabled: _this.props.saveButtonDisabled\n      }, _this.renderFormItems()), React.createElement(\"div\", {\n        className: \"page_skjemautfyller__buttonwrapper page_skjemautfyller__saveblock\"\n      }, _this.props.loginButton));\n    };\n\n    _this.renderFormWhenAuthorized = function () {\n      var resources = _this.props.resources;\n\n      if (!resources) {\n        return;\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(form_1.default, {\n        action: \"#\",\n        disabled: _this.props.blockSubmit,\n        submitButtonText: resources.formSend,\n        errorMessage: resources.formError,\n        onSubmit: _this.onSubmit,\n        requiredLabel: resources.formRequired,\n        optionalLabel: resources.formOptional,\n        cancelButtonText: resources.formCancel,\n        pauseButtonText: resources.formSave ? resources.formSave : 'Lagre',\n        onPause: _this.props.onSave ? _this.onSave : undefined,\n        pauseButtonClasses: 'page_skjemautfyller__pausebutton',\n        pauseButtonType: \"display\",\n        submitButtonType: \"display\",\n        cancelButtonType: \"display\",\n        pauseButtonLevel: \"secondary\",\n        cancelButtonRight: true,\n        onCancel: _this.props.onCancel,\n        buttonClasses: \"page_skjemautfyller__saveblock\",\n        validationSummaryPlacement: _this.props.validationSummaryPlacement,\n        validationSummary: {\n          enable: true,\n          header: resources.validationSummaryHeader\n        },\n        submitButtonDisabled: _this.props.submitButtonDisabled,\n        pauseButtonDisabled: _this.props.saveButtonDisabled\n      }, _this.renderFormItems()));\n    };\n\n    _this.state = {\n      valid: true,\n      validated: false,\n      showCancelLightbox: false\n    };\n    return _this;\n  }\n\n  _createClass(Skjemautfyller, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.mount();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      hacks_1.IE11HackToWorkAroundBug187484();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.questionnaire && nextProps.questionnaire !== this.props.questionnaire) {\n        this.props.updateSkjema(nextProps.questionnaire, nextProps.questionnaireResponse, nextProps.language, nextProps.syncQuestionnaireResponse);\n      }\n    }\n  }, {\n    key: \"renderFormItems\",\n    value: function renderFormItems(pdf) {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          formDefinition = _this$props3.formDefinition,\n          resources = _this$props3.resources,\n          formData = _this$props3.formData,\n          promptLoginMessage = _this$props3.promptLoginMessage;\n\n      if (!formDefinition || !formDefinition.Content || !formDefinition.Content.item) {\n        return undefined;\n      }\n\n      var contained = formDefinition.Content.contained;\n      var renderedItems = [];\n      var isNavigatorEnabled = !!extension_1.getNavigatorExtension(formDefinition.Content);\n      var isNavigatorBlindzoneInitiated = false;\n      formDefinition.Content.item.map(function (item) {\n        if (index_2.isHiddenItem(item)) return [];\n        var Comp = index_2.getComponentForItem(item.type);\n\n        if (!Comp) {\n          return undefined;\n        }\n\n        var responseItems;\n\n        if (formData) {\n          responseItems = skjemautfyller_core_1.getRootQuestionnaireResponseItemFromData(item.linkId, formData);\n        }\n\n        if (responseItems && responseItems.length > 0) {\n          responseItems.forEach(function (responseItem, index) {\n            var _a;\n\n            var repeatButton = item.repeats && index_2.shouldRenderRepeatButton(item, responseItems, index) ? React.createElement(\"div\", {\n              className: \"page_skjemautfyller__repeatbutton-wrapper\"\n            }, React.createElement(repeat_button_1.default, {\n              key: \"item_\".concat(item.linkId, \"_add_repeat_item\"),\n              resources: _this2.props.resources,\n              item: item,\n              responseItems: responseItems,\n              parentPath: _this2.props.path,\n              renderContext: new renderContext_1.RenderContext()\n            })) : undefined;\n            var path = skjemautfyller_core_1.createPathForItem(_this2.props.path, item, responseItem, index);\n\n            if (isNavigatorEnabled && item.type === itemType_1.default.GROUP && !isNavigatorBlindzoneInitiated) {\n              isNavigatorBlindzoneInitiated = true;\n              renderedItems.push(React.createElement(\"section\", {\n                id: \"navigator_blindzone\"\n              }));\n            }\n\n            renderedItems.push(React.createElement(Comp, {\n              language: (_a = formDefinition.Content) === null || _a === void 0 ? void 0 : _a.language,\n              pdf: pdf,\n              includeSkipLink: isNavigatorEnabled && item.type === itemType_1.default.GROUP,\n              promptLoginMessage: promptLoginMessage,\n              key: \"item_\".concat(responseItem.linkId, \"_\").concat(index),\n              id: 'item_' + responseItem.linkId + skjemautfyller_core_1.createIdSuffix(path, index, item.repeats),\n              item: item,\n              responseItem: responseItem,\n              answer: skjemautfyller_core_1.getAnswerFromResponseItem(responseItem),\n              resources: resources,\n              containedResources: contained,\n              path: path,\n              headerTag: index_1.default.DEFAULT_HEADER_TAG,\n              visibleDeleteButton: skjemautfyller_core_1.shouldRenderDeleteButton(item, index),\n              repeatButton: repeatButton,\n              onRequestAttachmentLink: _this2.props.onRequestAttachmentLink,\n              onOpenAttachment: _this2.props.onOpenAttachment,\n              onDeleteAttachment: _this2.props.onDeleteAttachment,\n              uploadAttachment: _this2.props.uploadAttachment,\n              onRequestHelpButton: _this2.props.onRequestHelpButton,\n              onRequestHelpElement: _this2.props.onRequestHelpElement,\n              attachmentErrorMessage: _this2.props.attachmentErrorMessage,\n              attachmentMaxFileSize: _this2.props.attachmentMaxFileSize,\n              attachmentValidTypes: _this2.props.attachmentValidTypes,\n              validateScriptInjection: _this2.props.validateScriptInjection,\n              onAnswerChange: _this2.onAnswerChange,\n              renderContext: new renderContext_1.RenderContext(),\n              onRenderMarkdown: _this2.props.onRenderMarkdown,\n              fetchValueSet: _this2.props.fetchValueSet,\n              autoSuggestProps: _this2.props.autoSuggestProps\n            }));\n          });\n        }\n      });\n      return renderedItems;\n    }\n  }, {\n    key: \"getButtonClasses\",\n    value: function getButtonClasses(presentationButtonsType, defaultClasses) {\n      defaultClasses = defaultClasses !== null && defaultClasses !== void 0 ? defaultClasses : [];\n\n      if (presentationButtonsType === presentationButtonsType_1.PresentationButtonsType.None) {\n        defaultClasses.push('page_skjemautfyller__hidden_buttons');\n      }\n\n      if (presentationButtonsType === presentationButtonsType_1.PresentationButtonsType.Sticky || this.props.sticky && !presentationButtonsType) {\n        defaultClasses.push('page_skjemautfyller__stickybar');\n      }\n\n      return defaultClasses.join(' ');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resources = this.props.resources;\n\n      if (!resources) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, null, this.renderSkjema(this.props.pdf));\n    }\n  }]);\n\n  return Skjemautfyller;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    formDefinition: form_3.getFormDefinition(state),\n    formData: form_3.getFormData(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    updateSkjema: function updateSkjema(questionnaire, questionnaireResponse, language, syncQuestionnaireResponse) {\n      dispatch(form_2.setSkjemaDefinition(questionnaire, questionnaireResponse, language, syncQuestionnaireResponse));\n    },\n    mount: function mount() {\n      if (props.questionnaire) {\n        dispatch(form_2.setSkjemaDefinition(props.questionnaire, props.questionnaireResponse, props.language, props.syncQuestionnaireResponse));\n      }\n    },\n    dispatch: dispatch,\n    path: []\n  };\n}\n\nvar SkjemautfyllerContainer = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Skjemautfyller);\nexports.SkjemautfyllerContainer = SkjemautfyllerContainer;","map":null,"metadata":{},"sourceType":"script"}