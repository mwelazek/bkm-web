{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar uuid = __importStar(require(\"uuid\"));\n\nvar extensions_1 = __importDefault(require(\"../constants/extensions\"));\n\nvar scoring_1 = __importDefault(require(\"../constants/scoring\"));\n\nvar scoringItemType_1 = require(\"../constants/scoringItemType\");\n\nvar extension_1 = require(\"./extension\");\n\nfunction createDummySectionScoreItem() {\n  return {\n    linkId: uuid.v4(),\n    type: 'quantity',\n    extension: [{\n      url: extensions_1.default.QUESTIONNAIRE_UNIT,\n      valueCoding: {\n        system: 'http://ehelse.no/Score',\n        code: 'score',\n        display: 'score'\n      }\n    }],\n    code: [{\n      system: scoring_1.default.SCORING_FORMULAS,\n      code: scoring_1.default.Type.SECTION_SCORE,\n      display: 'Sectionscore'\n    }]\n  };\n}\n\nexports.createDummySectionScoreItem = createDummySectionScoreItem;\n\nfunction scoringItemType(item) {\n  if (item.code) {\n    var scoring = getCodingWithScoring(item);\n\n    switch (scoring === null || scoring === void 0 ? void 0 : scoring.code) {\n      case 'TS':\n        return scoringItemType_1.ScoringItemType.TOTAL_SCORE;\n\n      case 'SS':\n        return scoringItemType_1.ScoringItemType.SECTION_SCORE;\n\n      case 'QS':\n        return scoringItemType_1.ScoringItemType.QUESTION_SCORE;\n\n      default:\n        return scoringItemType_1.ScoringItemType.NONE;\n    }\n  } else if (item.extension) {\n    var calculatedExpressionExtension = extension_1.getCalculatedExpressionExtension(item);\n    return calculatedExpressionExtension ? scoringItemType_1.ScoringItemType.QUESTION_FHIRPATH_SCORE : scoringItemType_1.ScoringItemType.NONE;\n  }\n\n  return scoringItemType_1.ScoringItemType.NONE;\n}\n\nexports.scoringItemType = scoringItemType;\n\nfunction isSectionScoringItem(item) {\n  var scoring = getCodingWithScoring(item);\n  return scoring ? scoring.code === scoring_1.default.Type.SECTION_SCORE : false;\n}\n\nexports.isSectionScoringItem = isSectionScoringItem;\n\nfunction isTotalScoringItem(item) {\n  var scoring = getCodingWithScoring(item);\n  return scoring ? scoring.code === scoring_1.default.Type.TOTAL_SCORE : false;\n}\n\nexports.isTotalScoringItem = isTotalScoringItem;\n\nfunction isQuestionScoringItem(item) {\n  var scoring = getCodingWithScoring(item);\n  return scoring ? scoring.code === scoring_1.default.Type.QUESTION_SCORE : false;\n}\n\nexports.isQuestionScoringItem = isQuestionScoringItem;\n\nfunction getCodingWithScoring(item) {\n  if (!item.code) return;\n  var scoringTypes = [scoring_1.default.Type.QUESTION_SCORE, scoring_1.default.Type.SECTION_SCORE, scoring_1.default.Type.TOTAL_SCORE];\n\n  var _iterator = _createForOfIteratorHelper(item.code),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var coding = _step.value;\n      var system = coding.system;\n\n      if (system === scoring_1.default.SCORING_FORMULAS && scoringTypes.filter(function (s) {\n        return s === coding.code;\n      }).length > 0) {\n        return {\n          v: coding\n        };\n      }\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}","map":null,"metadata":{},"sourceType":"script"}