{"ast":null,"code":"import * as React from 'react';\nimport classNames from 'classnames';\nimport { theme } from '@helsenorge/designsystem-react';\nimport { AnalyticsId } from '@helsenorge/core-utils/adobe-analytics';\nimport './styles.scss';\nexport var DisplayButton = React.forwardRef(function (_ref, ref) {\n  var onClick = _ref.onClick,\n      children = _ref.children,\n      primary = _ref.primary,\n      secondary = _ref.secondary,\n      tertiary = _ref.tertiary,\n      fullWidth = _ref.fullWidth,\n      formNoValidate = _ref.formNoValidate,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      leftIcon = _ref.leftIcon,\n      rightIcon = _ref.rightIcon,\n      leftIconSVGPath = _ref.leftIconSVGPath,\n      rightIconSVGPath = _ref.rightIconSVGPath,\n      testId = _ref.testId;\n\n  if (!primary && !secondary && !tertiary) {\n    primary = true;\n  }\n\n  var buttonRef = React.useRef(null);\n  var classes = classNames('atom_displaybutton', {\n    'atom_displaybutton--primary': primary\n  }, {\n    'atom_displaybutton--secondary': secondary\n  }, {\n    'atom_displaybutton--tertiary': tertiary\n  }, {\n    'atom_displaybutton--fullwidth': fullWidth\n  }, {\n    'atom_displaybutton--haslefticon': leftIconSVGPath || leftIcon\n  }, {\n    'atom_displaybutton--hasrighticon': rightIconSVGPath || rightIcon\n  }, className);\n  var iconColor = primary ? theme.palette.white : theme.palette.blueberry700;\n  var leftIconComponent;\n  var rightIconComponent;\n\n  if (leftIcon) {\n    leftIconComponent = React.cloneElement(leftIcon, {\n      color: iconColor,\n      className: 'atom_displaybutton--icon-left'\n    });\n  }\n\n  if (rightIcon) {\n    rightIconComponent = React.cloneElement(rightIcon, {\n      color: iconColor,\n      className: 'atom_displaybutton--icon-right'\n    });\n  }\n\n  return React.createElement(\"button\", {\n    ref: ref ? ref : buttonRef,\n    type: \"button\",\n    onClick: onClick,\n    className: classes,\n    formNoValidate: formNoValidate,\n    disabled: disabled,\n    \"data-testid\": testId,\n    \"data-analyticsid\": AnalyticsId.DisplayButton\n  }, leftIconComponent, leftIconSVGPath && React.createElement(\"span\", {\n    className: \"atom_displaybutton--icon-left\",\n    style: {\n      backgroundImage: \"url(\".concat(leftIconSVGPath, \")\")\n    }\n  }), React.createElement(\"span\", {\n    className: \"atom_displaybutton--text\"\n  }, children), rightIconComponent, rightIconSVGPath && React.createElement(\"span\", {\n    className: \"atom_displaybutton--icon-right\",\n    style: {\n      backgroundImage: \"url(\".concat(rightIconSVGPath, \")\")\n    }\n  }));\n});\nexport default DisplayButton;","map":null,"metadata":{},"sourceType":"module"}