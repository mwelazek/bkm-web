{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport './styles.scss';\n\nfunction SvgIcon(props) {\n  const {\n    children,\n    className,\n    color = 'inherit',\n    component: Component = 'svg',\n    fontSize,\n    size = 'default',\n    stroked = false,\n    style = {},\n    title,\n    variant = 'default',\n    viewBox = '0 0 24 24'\n  } = props,\n        other = __rest(props, [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"size\", \"stroked\", \"style\", \"title\", \"variant\", \"viewBox\"]);\n\n  return React.createElement(Component, Object.assign({\n    \"aria-hidden\": !title,\n    \"aria-label\": title,\n    className: classNames('svgicon', {\n      ['svgicon' + '--state-' + variant]: variant !== 'default',\n      ['svgicon' + '--fontSize-' + size.toLowerCase()]: size.toLowerCase() !== 'default',\n      ['svgicon' + '--stroked']: stroked\n    }, className),\n    color: color,\n    focusable: !title,\n    role: title ? 'presentation' : 'img',\n    style: Object.assign({\n      fontSize: fontSize\n    }, style),\n    tabIndex: title ? 0 : -1,\n    viewBox: viewBox\n  }, other), children);\n}\n\nexport default React.memo(SvgIcon);","map":null,"metadata":{},"sourceType":"module"}