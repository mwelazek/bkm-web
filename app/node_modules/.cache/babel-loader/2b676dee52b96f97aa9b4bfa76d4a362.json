{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseOrganization = exports.ViewDetailsWrapper = exports.ViewDetails = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _antd = require(\"antd\");\n\nvar _icons = require(\"@ant-design/icons\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _constants = require(\"../../../constants\");\n\nvar _lodash = require(\"lodash\");\n\nrequire(\"./index.css\");\n\nvar _mls = require(\"../../../mls\");\n\nvar _utils = require(\"../../AddEditOrganization/utils\");\n\nvar parseOrganization = function parseOrganization(org) {\n  var identifierObj = (0, _reactUtils.getObjLike)(org.identifier, 'use', _reactUtils.IdentifierUseCodes.OFFICIAL);\n  var identifier = (0, _lodash.get)(identifierObj, '0.value');\n  return {\n    id: org.id,\n    identifier: identifier,\n    active: org.active,\n    name: org.name,\n    type: (0, _lodash.get)(org, 'type.0.coding.0.display'),\n    alias: org.alias,\n    partOf: (0, _lodash.get)(org, 'partOf.display')\n  };\n};\n\nexports.parseOrganization = parseOrganization;\n\nvar ViewDetails = function ViewDetails(props) {\n  var _organizationKeyValue;\n\n  var resourceId = props.resourceId,\n      fhirBaseURL = props.fhirBaseURL;\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useQuery = (0, _reactQuery.useQuery)([_constants.organizationResourceType, resourceId], function () {\n    return new _reactUtils.FHIRServiceClass(fhirBaseURL, _constants.organizationResourceType).read(resourceId);\n  }),\n      organization = _useQuery.data,\n      orgIsLoading = _useQuery.isLoading,\n      orgError = _useQuery.error;\n\n  var _useQuery2 = (0, _reactQuery.useQuery)([_constants.organizationAffiliationResourceType, resourceId], function () {\n    return (0, _reactUtils.loadAllResources)(fhirBaseURL, _constants.organizationAffiliationResourceType);\n  }, {\n    select: function select(res) {\n      return (0, _reactUtils.getResourcesFromBundle)(res);\n    }\n  }),\n      affiliationsData = _useQuery2.data,\n      affiliationsLoading = _useQuery2.isLoading,\n      affiliationsError = _useQuery2.error;\n\n  var _useQuery3 = (0, _reactQuery.useQuery)([_constants.practitionerRoleResourceType, resourceId], function () {\n    return new _reactUtils.FHIRServiceClass(fhirBaseURL, _constants.practitionerRoleResourceType).list({\n      _include: 'PractitionerRole:practitioner',\n      organization: resourceId\n    }).then(function (bundle) {\n      return (0, _reactUtils.getResourcesFromBundle)(bundle).filter(function (resource) {\n        return resource.resourceType === _constants.practitionerResourceType;\n      });\n    });\n  }),\n      assignedPractitioners = _useQuery3.data,\n      assignedPractitionersLoading = _useQuery3.isLoading;\n\n  if (orgIsLoading) {\n    return _react[\"default\"].createElement(_antd.Spin, {\n      size: \"large\",\n      className: \"custom-spinner\"\n    });\n  }\n\n  if (orgError && !organization || affiliationsError && !affiliationsData) {\n    return _react[\"default\"].createElement(_antd.Alert, {\n      type: \"error\",\n      message: \"\".concat(orgError || affiliationsError)\n    });\n  }\n\n  var org = organization;\n\n  var _parseOrganization = parseOrganization(org),\n      active = _parseOrganization.active,\n      id = _parseOrganization.id,\n      identifier = _parseOrganization.identifier;\n\n  var assignedLocations = (0, _utils.FindAssignedLocations)(affiliationsData !== null && affiliationsData !== void 0 ? affiliationsData : [], id);\n  var practitionerKeyValues = (0, _defineProperty2[\"default\"])({}, t('Team practitioners'), _react[\"default\"].createElement(\"ul\", {\n    id: \"practitioner-teams\"\n  }, (assignedPractitioners !== null && assignedPractitioners !== void 0 ? assignedPractitioners : []).map(function (practitioner) {\n    var officialNames = (0, _reactUtils.getObjLike)(practitioner.name, 'use', _reactUtils.IdentifierUseCodes.OFFICIAL);\n    var firstOficialName = officialNames[0];\n    return _react[\"default\"].createElement(\"li\", {\n      key: practitioner.id\n    }, (0, _reactUtils.parseFhirHumanName)(firstOficialName));\n  })));\n  var locationsKeyValues = (0, _defineProperty2[\"default\"])({}, t('Assigned locations'), _react[\"default\"].createElement(\"ul\", {\n    id: \"assigned-locations\"\n  }, assignedLocations.map(function (location) {\n    return _react[\"default\"].createElement(\"li\", {\n      key: location.reference\n    }, location.display);\n  })));\n  var organizationKeyValues = (_organizationKeyValue = {}, (0, _defineProperty2[\"default\"])(_organizationKeyValue, t('Team id'), id), (0, _defineProperty2[\"default\"])(_organizationKeyValue, t('Team identifier'), identifier), (0, _defineProperty2[\"default\"])(_organizationKeyValue, t('Team status'), active ? t('Active') : t('Disabled')), _organizationKeyValue);\n  return _react[\"default\"].createElement(_antd.Space, {\n    direction: \"vertical\"\n  }, (0, _reactUtils.renderObjectAsKeyvalue)(organizationKeyValues), assignedPractitionersLoading ? _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Fetching assigned practitioners'),\n    type: \"info\"\n  }) : assignedPractitioners !== null && assignedPractitioners !== void 0 && assignedPractitioners.length ? (0, _reactUtils.renderObjectAsKeyvalue)(practitionerKeyValues) : _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Organization does not have any assigned practitioners'),\n    type: \"warning\"\n  }), affiliationsLoading ? _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Fetching assigned locations'),\n    type: \"info\"\n  }) : assignedLocations.length ? (0, _reactUtils.renderObjectAsKeyvalue)(locationsKeyValues) : _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Organization does not have any assigned locations'),\n    type: \"warning\"\n  }));\n};\n\nexports.ViewDetails = ViewDetails;\n\nvar ViewDetailsWrapper = function ViewDetailsWrapper(props) {\n  var resourceId = props.resourceId,\n      fhirBaseURL = props.fhirBaseURL;\n\n  var _useSearchParams = (0, _reactUtils.useSearchParams)(),\n      removeParam = _useSearchParams.removeParam;\n\n  if (!resourceId) {\n    return null;\n  }\n\n  return _react[\"default\"].createElement(_antd.Col, {\n    className: \"view-details-content\"\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"flex-right\"\n  }, _react[\"default\"].createElement(_antd.Button, {\n    \"data-testid\": \"close-button\",\n    icon: _react[\"default\"].createElement(_icons.CloseOutlined, null),\n    shape: \"circle\",\n    type: \"text\",\n    onClick: function onClick() {\n      return removeParam(_reactUtils.viewDetailsQuery);\n    }\n  })), _react[\"default\"].createElement(ViewDetails, {\n    resourceId: resourceId,\n    fhirBaseURL: fhirBaseURL\n  }));\n};\n\nexports.ViewDetailsWrapper = ViewDetailsWrapper;","map":null,"metadata":{},"sourceType":"script"}