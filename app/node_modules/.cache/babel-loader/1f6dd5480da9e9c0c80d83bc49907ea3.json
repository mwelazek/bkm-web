{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocationFormFields = exports.generateLocationUnit = exports.defaultFormField = void 0;\nexports.postPutLocationUnit = postPutLocationUnit;\nexports.validationRulesFactory = exports.treeToOptions = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _uuid = require(\"uuid\");\n\nvar _lodash = require(\"lodash\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _types = require(\"../../helpers/types\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar defaultFormField = {\n  id: '',\n  name: '',\n  parentId: undefined,\n  status: _types.LocationUnitStatus.ACTIVE,\n  isJurisdiction: true,\n  description: undefined,\n  alias: undefined\n};\nexports.defaultFormField = defaultFormField;\n\nvar getLocationFormFields = function getLocationFormFields(location, parentId) {\n  var _location$partOf;\n\n  return _objectSpread(_objectSpread({}, location !== null && location !== void 0 ? location : defaultFormField), {}, {\n    isJurisdiction: true,\n    parentId: parentId !== null && parentId !== void 0 ? parentId : location === null || location === void 0 ? void 0 : (_location$partOf = location.partOf) === null || _location$partOf === void 0 ? void 0 : _location$partOf.reference\n  });\n};\n\nexports.getLocationFormFields = getLocationFormFields;\n\nvar generateLocationUnit = function generateLocationUnit(formValues, initialValues, parentNode) {\n  var id = formValues.id,\n      name = formValues.name,\n      status = formValues.status,\n      description = formValues.description,\n      alias = formValues.alias,\n      isJurisdiction = formValues.isJurisdiction;\n  var uuid = (0, _lodash.get)(initialValues, 'identifier.0.value');\n  var thisLocationsIdentifier = uuid ? uuid : (0, _uuid.v4)();\n  var partOf;\n\n  if (parentNode) {\n    partOf = {\n      reference: parentNode.model.nodeId,\n      display: parentNode.model.node.name\n    };\n  }\n\n  var payload = {\n    resourceType: 'Location',\n    status: status,\n    name: name,\n    alias: alias,\n    description: description,\n    partOf: partOf,\n    identifier: [{\n      use: 'official',\n      value: thisLocationsIdentifier\n    }],\n    physicalType: {\n      coding: [{\n        system: 'http://terminology.hl7.org/CodeSystem/location-physical-type',\n        code: isJurisdiction ? 'jdn' : 'bu',\n        display: isJurisdiction ? 'Jurisdiction' : 'Building'\n      }]\n    }\n  };\n\n  if (id) {\n    payload.id = id;\n  } else {\n    payload.id = (0, _uuid.v4)();\n  }\n\n  return payload;\n};\n\nexports.generateLocationUnit = generateLocationUnit;\n\nvar validationRulesFactory = function validationRulesFactory(t) {\n  return {\n    id: [{\n      type: 'string'\n    }],\n    parentId: [{\n      type: 'string',\n      message: t(\"Parent ID can only contain letters, numbers and spaces\")\n    }, {\n      required: false\n    }],\n    name: [{\n      type: 'string',\n      message: t(\"Name can only contain letters, numbers and spaces\")\n    }, {\n      required: true,\n      message: t(\"Name is required\")\n    }],\n    alias: [{\n      type: 'string',\n      message: t(\"Name can only contain letters, numbers and spaces\")\n    }, {\n      required: true,\n      message: t(\"Alias is required\")\n    }],\n    status: [{\n      type: 'string'\n    }, {\n      required: true,\n      message: t(\"Status is required\")\n    }],\n    isJurisdiction: [{\n      type: 'boolean'\n    }, {\n      required: false\n    }],\n    description: [{\n      type: 'string'\n    }, {\n      required: false\n    }]\n  };\n};\n\nexports.validationRulesFactory = validationRulesFactory;\n\nvar treeToOptions = function treeToOptions(trees, parentIdDisabledCallback) {\n  var recurseCreateOptions = function recurseCreateOptions(node) {\n    var optionValue = _objectSpread({\n      value: node.model.nodeId,\n      title: node.model.node.name\n    }, parentIdDisabledCallback ? {\n      disabled: parentIdDisabledCallback(node)\n    } : {});\n\n    if (node.hasChildren()) {\n      optionValue.children = node.children.map(recurseCreateOptions);\n    }\n\n    return optionValue;\n  };\n\n  return trees.map(recurseCreateOptions);\n};\n\nexports.treeToOptions = treeToOptions;\n\nfunction postPutLocationUnit(_x, _x2) {\n  return _postPutLocationUnit.apply(this, arguments);\n}\n\nfunction _postPutLocationUnit() {\n  _postPutLocationUnit = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(payload, baseUrl) {\n    var serve;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            serve = new _reactUtils.FHIRServiceClass(baseUrl, 'Location');\n            return _context.abrupt(\"return\", serve.update(payload)[\"catch\"](function (err) {\n              throw err;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _postPutLocationUnit.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"script"}