{"ast":null,"code":"var _jsxFileName = \"/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/components/Logout/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { logout } from '@opensrp/server-logout';\nimport React from 'react';\nimport { DOMAIN_NAME, KEYCLOAK_LOGOUT_URL, OPENSRP_LOGOUT_URL, EXPRESS_OAUTH_LOGOUT_URL, BACKEND_ACTIVE } from '../../configs/env';\nimport { getFetchOptions } from '@opensrp/keycloak-service';\nimport { getAccessToken, getExtraData } from '@onaio/session-reducer';\nimport { store } from '@opensrp/store';\nimport { Spin } from 'antd';\nimport { sendErrorNotification } from '@opensrp/notifications';\nimport { useHistory } from 'react-router';\nimport { useTranslation } from '../../mls';\n/** HOC function that calls function that logs out the user from both opensrp\n * and keycloak.\n *\n * @returns {Function} returns Ripple component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CustomLogout = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    oAuth2Data\n  } = getExtraData(store.getState());\n  const idTokenHint = oAuth2Data === null || oAuth2Data === void 0 ? void 0 : oAuth2Data.id_token;\n  const payload = getFetchOptions(new AbortController().signal, getAccessToken(store.getState()), 'GET');\n  const redirectUri = BACKEND_ACTIVE ? EXPRESS_OAUTH_LOGOUT_URL : DOMAIN_NAME;\n  const history = useHistory();\n  logout(payload, KEYCLOAK_LOGOUT_URL, redirectUri, OPENSRP_LOGOUT_URL, idTokenHint).catch(_ => {\n    sendErrorNotification(t('There was a problem logging out. Please try again.'));\n    history.push('/');\n  });\n  return /*#__PURE__*/_jsxDEV(Spin, {\n    size: \"large\",\n    className: \"custom-spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CustomLogout, \"8pKm9cV0uTIUkUTmo7pWasI0KAY=\", false, function () {\n  return [useTranslation, useHistory];\n});\n\n_c = CustomLogout;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomLogout\");","map":{"version":3,"sources":["/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/components/Logout/index.tsx"],"names":["logout","React","DOMAIN_NAME","KEYCLOAK_LOGOUT_URL","OPENSRP_LOGOUT_URL","EXPRESS_OAUTH_LOGOUT_URL","BACKEND_ACTIVE","getFetchOptions","getAccessToken","getExtraData","store","Spin","sendErrorNotification","useHistory","useTranslation","CustomLogout","t","oAuth2Data","getState","idTokenHint","id_token","payload","AbortController","signal","redirectUri","history","catch","_","push"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,cALF,QAMO,mBANP;AAOA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,wBAA7C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,WAA/B;AAEA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,YAAsB,GAAG,MAAmB;AAAA;;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAQF,cAAc,EAA5B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAiBR,YAAY,CAACC,KAAK,CAACQ,QAAN,EAAD,CAAnC;AACA,QAAMC,WAAW,GAAGF,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEG,QAAhC;AACA,QAAMC,OAAO,GAAGd,eAAe,CAC7B,IAAIe,eAAJ,GAAsBC,MADO,EAE7Bf,cAAc,CAACE,KAAK,CAACQ,QAAN,EAAD,CAFe,EAG7B,KAH6B,CAA/B;AAKA,QAAMM,WAAW,GAAGlB,cAAc,GAAGD,wBAAH,GAA8BH,WAAhE;AACA,QAAMuB,OAAO,GAAGZ,UAAU,EAA1B;AACAb,EAAAA,MAAM,CAACqB,OAAD,EAAUlB,mBAAV,EAA+BqB,WAA/B,EAA4CpB,kBAA5C,EAAgEe,WAAhE,CAAN,CAAmFO,KAAnF,CACGC,CAAD,IAAc;AACZf,IAAAA,qBAAqB,CAACI,CAAC,CAAC,oDAAD,CAAF,CAArB;AACAS,IAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACD,GAJH;AAMA,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBM;;GAAMb,Y;UACGD,c,EASED,U;;;KAVLE,Y","sourcesContent":["import { logout } from '@opensrp/server-logout';\nimport React from 'react';\nimport {\n  DOMAIN_NAME,\n  KEYCLOAK_LOGOUT_URL,\n  OPENSRP_LOGOUT_URL,\n  EXPRESS_OAUTH_LOGOUT_URL,\n  BACKEND_ACTIVE,\n} from '../../configs/env';\nimport { getFetchOptions } from '@opensrp/keycloak-service';\nimport { getAccessToken, getExtraData } from '@onaio/session-reducer';\nimport { store } from '@opensrp/store';\nimport { Spin } from 'antd';\nimport { sendErrorNotification } from '@opensrp/notifications';\nimport { useHistory } from 'react-router';\nimport { useTranslation } from '../../mls';\n\n/** HOC function that calls function that logs out the user from both opensrp\n * and keycloak.\n *\n * @returns {Function} returns Ripple component\n */\nexport const CustomLogout: React.FC = (): JSX.Element => {\n  const { t } = useTranslation();\n  const { oAuth2Data } = getExtraData(store.getState());\n  const idTokenHint = oAuth2Data?.id_token;\n  const payload = getFetchOptions(\n    new AbortController().signal,\n    getAccessToken(store.getState()) as string,\n    'GET'\n  );\n  const redirectUri = BACKEND_ACTIVE ? EXPRESS_OAUTH_LOGOUT_URL : DOMAIN_NAME;\n  const history = useHistory();\n  logout(payload, KEYCLOAK_LOGOUT_URL, redirectUri, OPENSRP_LOGOUT_URL, idTokenHint).catch(\n    (_: Error) => {\n      sendErrorNotification(t('There was a problem logging out. Please try again.'));\n      history.push('/');\n    }\n  );\n  return <Spin size=\"large\" className=\"custom-spinner\" />;\n};\n"]},"metadata":{},"sourceType":"module"}