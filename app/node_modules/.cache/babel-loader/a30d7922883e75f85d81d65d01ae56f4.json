{"ast":null,"code":"/**\n * debounce limits time a function can be executed\n * @param func function to debounce\n * @param wait wait for x time\n * @param immediate run now\n */\n\n/* eslint-disable @typescript-eslint/no-this-alias, prefer-rest-params */\nexport function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments,\n        later = function later() {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    },\n        callNow = immediate && !timeout;\n\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\n/* eslint-enable @typescript-eslint/no-this-alias, prefer-rest-params */","map":null,"metadata":{},"sourceType":"module"}