{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nexports.parseTableData = parseTableData;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _antd = require(\"antd\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _Form = require(\"./Form\");\n\nvar _lodash = require(\"lodash\");\n\nvar _fhirLocationManagement = require(\"@opensrp/fhir-location-management\");\n\nvar _constants = require(\"../../constants\");\n\nvar _utils = require(\"./utils\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _mls = require(\"../../mls\");\n\nvar _rbac = require(\"@opensrp/rbac\");\n\nvar _excluded = [\"data\", \"isLoading\", \"error\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction parseTableData(locationNode) {\n  var data = [];\n  locationNode.forEach(function (location) {\n    var _partOf$display;\n\n    var model = location.model;\n    var _model$node = model.node,\n        id = _model$node.id,\n        name = _model$node.name,\n        status = _model$node.status,\n        partOf = _model$node.partOf,\n        description = _model$node.description;\n    data.push({\n      id: id,\n      key: model.nodeId,\n      name: name,\n      partOf: (_partOf$display = partOf === null || partOf === void 0 ? void 0 : partOf.display) !== null && _partOf$display !== void 0 ? _partOf$display : '-',\n      description: description,\n      status: status,\n      physicalType: (0, _lodash.get)(model.node, 'physicalType.coding.0.display'),\n      node: location.model.node\n    });\n  });\n  return data;\n}\n\nvar AffiliationTable = function AffiliationTable(props) {\n  var baseUrl = props.baseUrl,\n      locationNodes = props.locationNodes;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      seeModal = _useState2[0],\n      setSeeModal = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useQuery = (0, _reactQuery.useQuery)([_constants.organizationAffiliationResourceType], function () {\n    return (0, _reactUtils.loadAllResources)(baseUrl, _constants.organizationAffiliationResourceType);\n  }, {\n    select: function select(res) {\n      return (0, _reactUtils.getResourcesFromBundle)(res);\n    }\n  }),\n      affiliationsData = _useQuery.data,\n      affiliationsLoading = _useQuery.isLoading,\n      affiliationsError = _useQuery.error,\n      affiliationsQuery = (0, _objectWithoutProperties2[\"default\"])(_useQuery, _excluded);\n\n  var _useQuery2 = (0, _reactQuery.useQuery)([_constants.organizationResourceType], function () {\n    return (0, _reactUtils.loadAllResources)(baseUrl, _constants.organizationResourceType);\n  }, {\n    select: function select(res) {\n      return (0, _reactUtils.getResourcesFromBundle)(res);\n    }\n  }),\n      orgsData = _useQuery2.data,\n      orgsLoading = _useQuery2.isLoading,\n      orgsError = _useQuery2.error;\n\n  if (affiliationsError && !affiliationsData || orgsError && !orgsData) {\n    return _react[\"default\"].createElement(_reactUtils.BrokenPage, {\n      errorMessage: t('Unable to load teams or teams assignments at the moment')\n    });\n  }\n\n  var tableDispData = parseTableData(locationNodes);\n  var affiliationsByLocId = (0, _utils.reformatOrganizationByLocation)(affiliationsData !== null && affiliationsData !== void 0 ? affiliationsData : []);\n  var columns = [{\n    title: t('Name'),\n    dataIndex: 'name'\n  }, {\n    title: t('Assigned teams'),\n    render: function render(_, record) {\n      var _affiliationsByLocId$;\n\n      var id = record.id;\n      var affiliations = (_affiliationsByLocId$ = affiliationsByLocId[\"\".concat(_fhirLocationManagement.locationResourceType, \"/\").concat(id)]) !== null && _affiliationsByLocId$ !== void 0 ? _affiliationsByLocId$ : [];\n      return affiliations.map(function (affiliation) {\n        var _affiliation$organiza;\n\n        return (_affiliation$organiza = affiliation.organization) === null || _affiliation$organiza === void 0 ? void 0 : _affiliation$organiza.display;\n      }).join(', ');\n    }\n  }, {\n    title: t('Actions'),\n    width: '10%',\n    render: function render(_, record) {\n      return _react[\"default\"].createElement(_rbac.RbacCheck, {\n        permissions: ['OrganizationAffiliation.update']\n      }, _react[\"default\"].createElement(_antd.Button, {\n        type: \"link\",\n        className: \"action-button\",\n        onClick: function onClick() {\n          var node = record.node;\n          setLocation(node);\n          setSeeModal(true);\n        }\n      }, t('Edit')));\n    }\n  }];\n\n  var modalCancel = function modalCancel() {\n    return setSeeModal(false);\n  };\n\n  return _react[\"default\"].createElement(_react[\"default\"].Fragment, null, _react[\"default\"].createElement(_Form.AffiliationModal, {\n    baseUrl: baseUrl,\n    location: location,\n    visible: seeModal,\n    allOrgs: orgsData !== null && orgsData !== void 0 ? orgsData : [],\n    affiliationsByLoc: affiliationsByLocId,\n    handleCancel: modalCancel,\n    allAffiliations: affiliationsData !== null && affiliationsData !== void 0 ? affiliationsData : []\n  }), _react[\"default\"].createElement(_reactUtils.TableLayout, {\n    loading: orgsLoading || affiliationsLoading || affiliationsQuery.isRefetching,\n    id: \"org-affiliation\",\n    persistState: true,\n    datasource: tableDispData,\n    columns: columns\n  }));\n};\n\nvar _default = AffiliationTable;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}