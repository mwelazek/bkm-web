{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommodityAddEdit = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactHelmet = require(\"react-helmet\");\n\nvar _Form = require(\"./Form\");\n\nvar _reactRouter = require(\"react-router\");\n\nvar _constants = require(\"../../constants\");\n\nvar _antd = require(\"antd\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _utils = require(\"./utils\");\n\nvar _mls = require(\"../../mls\");\n\nvar CommodityAddEdit = function CommodityAddEdit(props) {\n  var _groupQuery$data$name;\n\n  var fhirBaseUrl = props.fhirBaseURL,\n      listId = props.listId;\n\n  var _useParams = (0, _reactRouter.useParams)(),\n      resourceId = _useParams.id;\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var groupQuery = (0, _reactQuery.useQuery)([_constants.groupResourceType, resourceId], (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new _reactUtils.FHIRServiceClass(fhirBaseUrl, _constants.groupResourceType).read(resourceId));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), {\n    enabled: !!resourceId\n  });\n\n  if (!groupQuery.isIdle && groupQuery.isLoading) {\n    return _react[\"default\"].createElement(_antd.Spin, {\n      size: \"large\",\n      className: \"custom-spinner\"\n    });\n  }\n\n  if (groupQuery.error && !groupQuery.data) {\n    return _react[\"default\"].createElement(_reactUtils.BrokenPage, {\n      errorMessage: groupQuery.error.message\n    });\n  }\n\n  var initialValues = (0, _utils.getGroupFormFields)(groupQuery.data);\n  var pageTitle = groupQuery.data ? t('Edit Commodity | {{name}}', {\n    name: (_groupQuery$data$name = groupQuery.data.name) !== null && _groupQuery$data$name !== void 0 ? _groupQuery$data$name : ''\n  }) : t('Create Commodity');\n  var postSuccess = (0, _utils.updateListReferencesFactory)(fhirBaseUrl, listId);\n  return _react[\"default\"].createElement(\"section\", {\n    className: \"content-section\"\n  }, _react[\"default\"].createElement(_reactHelmet.Helmet, null, _react[\"default\"].createElement(\"title\", null, pageTitle)), _react[\"default\"].createElement(_reactUtils.PageHeader, {\n    title: pageTitle\n  }), _react[\"default\"].createElement(\"div\", {\n    className: \"bg-white p-5\"\n  }, _react[\"default\"].createElement(_Form.CommodityForm, {\n    fhirBaseUrl: fhirBaseUrl,\n    initialValues: initialValues,\n    cancelUrl: _constants.LIST_COMMODITY_URL,\n    successUrl: _constants.LIST_COMMODITY_URL,\n    postSuccess: postSuccess\n  })));\n};\n\nexports.CommodityAddEdit = CommodityAddEdit;","map":null,"metadata":{},"sourceType":"script"}