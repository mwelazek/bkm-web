{"ast":null,"code":"import * as React from 'react';\nexport function Validation(_ref) {\n  var addFormComponent = _ref.addFormComponent,\n      removeFormComponent = _ref.removeFormComponent,\n      children = _ref.children,\n      onValidated = _ref.onValidated,\n      showRequiredLabel = _ref.showRequiredLabel,\n      showOptionalLabel = _ref.showOptionalLabel,\n      requiredLabel = _ref.requiredLabel,\n      optionalLabel = _ref.optionalLabel,\n      refCallback = _ref.refCallback;\n  var componentRef = React.useRef(null);\n  React.useEffect(function () {\n    if (addFormComponent && componentRef.current) {\n      addFormComponent(componentRef.current);\n    }\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      if (removeFormComponent && componentRef.current) {\n        removeFormComponent(componentRef.current);\n      }\n    };\n  }, []);\n  var clone = React.Children.map(children, function (child) {\n    return React.cloneElement(child, {\n      ref: function ref(el) {\n        componentRef.current = el;\n\n        if (refCallback) {\n          refCallback(el);\n        }\n      },\n      onValidated: onValidated,\n      showRequiredLabel: showRequiredLabel,\n      showOptionalLabel: showOptionalLabel,\n      requiredLabel: requiredLabel,\n      optionalLabel: optionalLabel\n    });\n  });\n  return React.createElement(React.Fragment, null, clone);\n}\nexport default Validation;","map":null,"metadata":{},"sourceType":"module"}