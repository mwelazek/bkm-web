{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.UserGroupsList = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactHelmet = require(\"react-helmet\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _antd = require(\"antd\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _reactRouter = require(\"react-router\");\n\nvar _icons = require(\"@ant-design/icons\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reduxReducerRegistry = _interopRequireDefault(require(\"@onaio/redux-reducer-registry\"));\n\nvar _notifications = require(\"@opensrp/notifications\");\n\nvar _keycloakService = require(\"@opensrp/keycloak-service\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _userGroups = require(\"../../ducks/userGroups\");\n\nvar _mls = require(\"../../mls\");\n\nvar _constants = require(\"../../constants\");\n\nvar _UserGroupDetailView = require(\"../UserGroupDetailView\");\n\nvar _utils = require(\"../UserGroupsList/utils\");\n\nvar _rbac = require(\"@opensrp/rbac\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\n_reduxReducerRegistry[\"default\"].register(_userGroups.reducerName, _userGroups.reducer);\n\nvar userGroupsSelector = (0, _userGroups.makeKeycloakUserGroupsSelector)();\nvar defaultProps = {\n  keycloakBaseURL: ''\n};\n\nvar UserGroupsList = function UserGroupsList(props) {\n  var keycloakBaseURL = props.keycloakBaseURL;\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  var searchQuery = (0, _reactUtils.getQueryParams)(props.location)[_constants.SEARCH_QUERY_PARAM];\n\n  var getUserGroupsList = (0, _reactRedux.useSelector)(function (state) {\n    return userGroupsSelector(state, {\n      searchText: searchQuery\n    });\n  });\n\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      groupId = _useState2[0],\n      setGroupId = _useState2[1];\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var history = (0, _reactRouter.useHistory)();\n\n  var _useQuery = (0, _reactQuery.useQuery)(['fetchKeycloakUserGroups', _constants.KEYCLOAK_URL_USER_GROUPS, keycloakBaseURL], function () {\n    return new _keycloakService.KeycloakService(_constants.KEYCLOAK_URL_USER_GROUPS, keycloakBaseURL).list();\n  }, {\n    onError: function onError() {\n      return (0, _notifications.sendErrorNotification)(t('There was a problem fetching User Groups'));\n    },\n    onSuccess: function onSuccess(response) {\n      return dispatch((0, _userGroups.fetchKeycloakUserGroups)(response));\n    }\n  }),\n      isUserGroupsLoading = _useQuery.isLoading,\n      isUserGroupsError = _useQuery.isError;\n\n  var _useQuery2 = (0, _reactQuery.useQuery)(['loadGroupDetails', groupId, keycloakBaseURL], function () {\n    return (0, _utils.loadGroupDetails)(groupId, keycloakBaseURL);\n  }, {\n    enabled: groupId !== null,\n    onError: function onError() {\n      return (0, _notifications.sendErrorNotification)(t('There was a problem fetching Group Details'));\n    }\n  }),\n      isGroupDetailsLoading = _useQuery2.isLoading,\n      isGroupDetailsError = _useQuery2.isError,\n      GroupDetails = _useQuery2.data;\n\n  var _useQuery3 = (0, _reactQuery.useQuery)([_constants.KEYCLOAK_URL_EFFECTIVE_ROLES, groupId, keycloakBaseURL], function () {\n    var keycloakService = new _keycloakService.KeycloakService(\"\".concat(_constants.KEYCLOAK_URL_USER_GROUPS, \"/\").concat(groupId).concat(_constants.KEYCLOAK_URL_EFFECTIVE_ROLES), keycloakBaseURL);\n    return keycloakService.list();\n  }, {\n    enabled: groupId !== null,\n    onError: function onError() {\n      return (0, _notifications.sendErrorNotification)(t('There was a problem fetching effective roles'));\n    }\n  }),\n      effectiveRolesLoading = _useQuery3.isLoading,\n      effectiveRolesError = _useQuery3.isError,\n      effectiveRoles = _useQuery3.data;\n\n  var _useQuery4 = (0, _reactQuery.useQuery)(['loadGroupMembers', groupId, keycloakBaseURL], function () {\n    return (0, _utils.loadGroupMembers)(groupId, keycloakBaseURL);\n  }, {\n    enabled: groupId !== null,\n    onError: function onError() {\n      return (0, _notifications.sendErrorNotification)(t('There was a problem fetching Group Members'));\n    }\n  }),\n      isUserGroupMembersLoading = _useQuery4.isLoading,\n      isUserGroupMembersError = _useQuery4.isError,\n      userGroupMembers = _useQuery4.data;\n\n  var searchFormProps = {\n    defaultValue: (0, _reactUtils.getQueryParams)(props.location)[_constants.SEARCH_QUERY_PARAM],\n    onChangeHandler: (0, _reactUtils.createChangeHandler)(_constants.SEARCH_QUERY_PARAM, props)\n  };\n  var columns = [{\n    title: t('Name'),\n    dataIndex: 'name',\n    sorter: function sorter(a, b) {\n      return a.name.localeCompare(b.name);\n    }\n  }];\n\n  if (isUserGroupsLoading) {\n    return _react[\"default\"].createElement(_antd.Spin, {\n      \"data-testid\": \"group-list-loader\",\n      size: \"large\",\n      className: \"custom-spinner\"\n    });\n  }\n\n  if (isUserGroupsError) return _react[\"default\"].createElement(_reactUtils.Resource404, null);\n\n  var getItems = function getItems(record) {\n    return [{\n      key: record.id,\n      label: _react[\"default\"].createElement(_antd.Button, {\n        type: \"link\",\n        \"data-testid\": \"view-details\",\n        onClick: function onClick() {\n          setGroupId(record.id);\n        }\n      }, t('View Details'))\n    }];\n  };\n\n  return _react[\"default\"].createElement(\"div\", {\n    className: \"content-section\"\n  }, _react[\"default\"].createElement(_reactHelmet.Helmet, null, _react[\"default\"].createElement(\"title\", null, t('User Groups'))), _react[\"default\"].createElement(_reactUtils.PageHeader, {\n    title: t('User Groups')\n  }), _react[\"default\"].createElement(_antd.Row, {\n    className: \"list-view\"\n  }, _react[\"default\"].createElement(_antd.Col, {\n    className: 'main-content'\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"main-content__header\"\n  }, _react[\"default\"].createElement(_reactUtils.SearchForm, searchFormProps), _react[\"default\"].createElement(_rbac.RbacCheck, {\n    permissions: ['iam_group.create']\n  }, _react[\"default\"].createElement(_antd.Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return history.push(_constants.URL_USER_GROUP_CREATE);\n    }\n  }, _react[\"default\"].createElement(_icons.PlusOutlined, null), t('New User Group')))), _react[\"default\"].createElement(_reactUtils.TableLayout, {\n    id: \"UserGroupsList\",\n    persistState: true,\n    datasource: getUserGroupsList,\n    columns: columns,\n    actions: {\n      title: t('Actions'),\n      width: '10%',\n      render: function render(record) {\n        return _react[\"default\"].createElement(\"span\", null, _react[\"default\"].createElement(_rbac.RbacCheck, {\n          permissions: ['iam_group.update']\n        }, _react[\"default\"].createElement(_react[\"default\"].Fragment, null, _react[\"default\"].createElement(_reactRouterDom.Link, {\n          to: \"\".concat(_constants.URL_USER_GROUP_EDIT, \"/\").concat(record.id),\n          className: \"m-0 p-1\"\n        }, t('Edit')), _react[\"default\"].createElement(_antd.Divider, {\n          type: \"vertical\"\n        }))), _react[\"default\"].createElement(_antd.Dropdown, {\n          menu: {\n            items: getItems(record)\n          },\n          placement: \"bottomLeft\",\n          arrow: true,\n          trigger: ['click']\n        }, _react[\"default\"].createElement(_icons.MoreOutlined, {\n          className: \"more-options\",\n          \"data-testid\": \"more-options\"\n        })));\n      }\n    }\n  })), groupId ? _react[\"default\"].createElement(_antd.Col, {\n    className: \"pl-3\",\n    span: 5\n  }, _react[\"default\"].createElement(_UserGroupDetailView.ViewDetails, {\n    loading: isGroupDetailsLoading || isUserGroupMembersLoading || effectiveRolesLoading,\n    error: isGroupDetailsError || isUserGroupMembersError || effectiveRolesError,\n    GroupDetails: GroupDetails,\n    effectiveRoles: effectiveRoles,\n    userGroupMembers: userGroupMembers,\n    onClose: function onClose() {\n      setGroupId(null);\n    }\n  })) : null));\n};\n\nexports.UserGroupsList = UserGroupsList;\nUserGroupsList.defaultProps = defaultProps;\nvar _default = UserGroupsList;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}