{"ast":null,"code":"import * as React from 'react';\nimport ReactDOM from 'react-dom';\nexport default class PrivateRadioGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultValue: this.props.defaultValue\n    };\n  }\n\n  componentDidMount() {\n    this.setRadioNames();\n    this.setCheckedRadio();\n  }\n\n  componentDidUpdate() {\n    this.setRadioNames();\n    this.setCheckedRadio();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.classNameGroup\n    }, this.props.children);\n  }\n\n  setRadioNames() {\n    const $radios = this.getRadios();\n\n    if ($radios) {\n      for (let i = 0, length = $radios.length; i < length; i++) {\n        $radios[i].setAttribute('name', this.props.name);\n      }\n    }\n  }\n\n  getRadios() {\n    const node = ReactDOM.findDOMNode(this);\n\n    if (node instanceof Element) {\n      return node.querySelectorAll('input[type=\"radio\"]');\n    }\n\n    return null;\n  }\n\n  setCheckedRadio() {\n    const $radios = this.getRadios();\n    const destinationValue = this.props.value != null ? this.props.value : this.state.defaultValue;\n\n    if ($radios) {\n      for (let i = 0, length = $radios.length; i < length; i++) {\n        const $radio = $radios[i];\n\n        if ($radio.value === destinationValue) {\n          $radio.checked = true;\n        }\n      }\n    }\n  }\n\n  getCheckedValue() {\n    const $radios = this.getRadios();\n\n    if ($radios) {\n      for (let i = 0, length = $radios.length; i < length; i++) {\n        if ($radios[i].checked) {\n          return $radios[i].value;\n        }\n      }\n    }\n\n    return null;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}