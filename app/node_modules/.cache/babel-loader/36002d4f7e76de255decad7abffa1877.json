{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar extensions_1 = __importDefault(require(\"../constants/extensions\"));\n\nvar itemcontrol_1 = __importDefault(require(\"../constants/itemcontrol\"));\n\nvar itemType_1 = __importDefault(require(\"../constants/itemType\"));\n\nvar presentationButtonsType_1 = require(\"../constants/presentationButtonsType\");\n\nvar index_1 = require(\"../util/index\");\n\nfunction getValidationTextExtension(item) {\n  var validationTextExtension = getExtension(extensions_1.default.VALIDATIONTEXT_URL, item);\n\n  if (!validationTextExtension || !validationTextExtension.valueString) {\n    return undefined;\n  }\n\n  return validationTextExtension.valueString;\n}\n\nexports.getValidationTextExtension = getValidationTextExtension;\n\nfunction getPresentationButtonsExtension(questionniare) {\n  var extension = getExtension(extensions_1.default.PRESENTATION_BUTTONS, questionniare);\n\n  if (!extension || !extension.valueCoding || !extension.valueCoding.code) {\n    return null;\n  }\n\n  switch (extension.valueCoding.code) {\n    case 'none':\n      return presentationButtonsType_1.PresentationButtonsType.None;\n\n    case 'static':\n      return presentationButtonsType_1.PresentationButtonsType.Static;\n\n    case 'sticky':\n      return presentationButtonsType_1.PresentationButtonsType.Sticky;\n  }\n\n  return null;\n}\n\nexports.getPresentationButtonsExtension = getPresentationButtonsExtension;\n\nfunction getNavigatorExtension(questionniare) {\n  var _a;\n\n  var navigatorExtension = getExtension(extensions_1.default.NAVIGATOR, questionniare);\n  return (_a = navigatorExtension === null || navigatorExtension === void 0 ? void 0 : navigatorExtension.valueCodeableConcept) === null || _a === void 0 ? void 0 : _a.coding;\n}\n\nexports.getNavigatorExtension = getNavigatorExtension;\n\nfunction getSidebarSections(questionniare, onRenderMarkdown) {\n  var _a;\n\n  var items = [];\n\n  var getSidebarItems = function getSidebarItems(currentItem, currentItems) {\n    var _a;\n\n    var itemControls = getItemControlExtensionValue(currentItem);\n\n    if (currentItem.type === itemType_1.default.TEXT && itemControls && itemControls.some(function (itemControl) {\n      return itemControl.code === itemcontrol_1.default.SIDEBAR;\n    })) {\n      items.push({\n        item: currentItem,\n        markdownText: index_1.getText(currentItem, onRenderMarkdown)\n      });\n    }\n\n    (_a = currentItem.item) === null || _a === void 0 ? void 0 : _a.forEach(function (item) {\n      getSidebarItems(item, currentItems);\n    });\n  };\n\n  (_a = questionniare.item) === null || _a === void 0 ? void 0 : _a.forEach(function (item) {\n    getSidebarItems(item, items);\n  });\n  return items;\n}\n\nexports.getSidebarSections = getSidebarSections;\n\nfunction getExtension(url, item) {\n  if (!item || !item.extension || item.extension.length === 0) {\n    return undefined;\n  }\n\n  var filteredExtension = item.extension.filter(function (e) {\n    return e.url === url;\n  });\n\n  if (!filteredExtension || filteredExtension.length === 0) {\n    return undefined;\n  }\n\n  return filteredExtension[0];\n}\n\nexports.getExtension = getExtension;\n\nfunction getPlaceholder(item) {\n  if (!item || !item.extension || item.extension.length === 0) {\n    return undefined;\n  }\n\n  var extension = getExtension(extensions_1.default.ENTRY_FORMAT_URL, item);\n\n  if (!extension) {\n    return undefined;\n  }\n\n  return extension.valueString;\n}\n\nexports.getPlaceholder = getPlaceholder;\n\nfunction getQuestionnaireUnitExtensionValue(item) {\n  if (!item || !item.extension || item.extension.length === 0) {\n    return undefined;\n  }\n\n  var extension = getExtension(extensions_1.default.QUESTIONNAIRE_UNIT, item);\n\n  if (!extension) {\n    return undefined;\n  }\n\n  return extension.valueCoding;\n}\n\nexports.getQuestionnaireUnitExtensionValue = getQuestionnaireUnitExtensionValue;\n\nfunction getMaxValueExtensionValue(item) {\n  var maxValue = getExtension(extensions_1.default.MAX_VALUE_URL, item);\n\n  if (maxValue && maxValue.valueDecimal !== null && maxValue.valueDecimal !== undefined) {\n    return Number(maxValue.valueDecimal);\n  }\n\n  if (maxValue && maxValue.valueInteger !== null && maxValue.valueInteger !== undefined) {\n    return Number(maxValue.valueInteger);\n  }\n\n  return undefined;\n}\n\nexports.getMaxValueExtensionValue = getMaxValueExtensionValue;\n\nfunction getMinValueExtensionValue(item) {\n  var minValue = getExtension(extensions_1.default.MIN_VALUE_URL, item);\n\n  if (minValue && minValue.valueDecimal !== null && minValue.valueDecimal !== undefined) {\n    return Number(minValue.valueDecimal);\n  }\n\n  if (minValue && minValue.valueInteger !== null && minValue.valueInteger !== undefined) {\n    return Number(minValue.valueInteger);\n  }\n\n  return undefined;\n}\n\nexports.getMinValueExtensionValue = getMinValueExtensionValue;\n\nfunction getMinOccursExtensionValue(item) {\n  var minValue = getExtension(extensions_1.default.MIN_OCCURS_URL, item);\n\n  if (minValue && minValue.valueInteger !== null && minValue.valueInteger !== undefined) {\n    return Number(minValue.valueInteger);\n  }\n\n  return undefined;\n}\n\nexports.getMinOccursExtensionValue = getMinOccursExtensionValue;\n\nfunction getMaxOccursExtensionValue(item) {\n  var maxValue = getExtension(extensions_1.default.MAX_OCCURS_URL, item);\n\n  if (maxValue && maxValue.valueInteger !== null && maxValue.valueInteger !== undefined) {\n    return Number(maxValue.valueInteger);\n  }\n\n  return undefined;\n}\n\nexports.getMaxOccursExtensionValue = getMaxOccursExtensionValue;\n\nfunction getMinLengthExtensionValue(item) {\n  var minLength = getExtension(extensions_1.default.MIN_LENGTH_URL, item);\n\n  if (minLength && minLength.valueInteger) {\n    return Number(minLength.valueInteger);\n  }\n\n  return undefined;\n}\n\nexports.getMinLengthExtensionValue = getMinLengthExtensionValue;\n\nfunction getRegexExtension(item) {\n  var regexExtension = getExtension(extensions_1.default.REGEX_URL, item);\n\n  if (!regexExtension || !regexExtension.valueString) {\n    return undefined;\n  }\n\n  return regexExtension.valueString;\n}\n\nexports.getRegexExtension = getRegexExtension;\n\nfunction getRepeatsTextExtension(item) {\n  var repeatsTextExtension = getExtension(extensions_1.default.REPEATSTEXT_URL, item);\n\n  if (!repeatsTextExtension || !repeatsTextExtension.valueString) {\n    return undefined;\n  }\n\n  return repeatsTextExtension.valueString;\n}\n\nexports.getRepeatsTextExtension = getRepeatsTextExtension;\n\nfunction getItemControlExtensionValue(item) {\n  var itemControlExtension = getExtension(extensions_1.default.ITEMCONTROL_URL, item);\n\n  if (!itemControlExtension || !itemControlExtension.valueCodeableConcept || !itemControlExtension.valueCodeableConcept.coding) {\n    return undefined;\n  }\n\n  return itemControlExtension.valueCodeableConcept.coding;\n}\n\nexports.getItemControlExtensionValue = getItemControlExtensionValue;\n\nfunction getMarkdownExtensionValue(item) {\n  var markdownExtension = getExtension(extensions_1.default.MARKDOWN_URL, item);\n\n  if (!markdownExtension || !markdownExtension.valueMarkdown) {\n    return undefined;\n  }\n\n  return markdownExtension.valueMarkdown;\n}\n\nexports.getMarkdownExtensionValue = getMarkdownExtensionValue;\n\nfunction getSublabelExtensionValue(item) {\n  var markdownExtension = getExtension(extensions_1.default.SUBLABEL, item);\n\n  if (!markdownExtension || !markdownExtension.valueMarkdown) {\n    return undefined;\n  }\n\n  return markdownExtension.valueMarkdown;\n}\n\nexports.getSublabelExtensionValue = getSublabelExtensionValue;\n\nfunction getQuestionnaireHiddenExtensionValue(item) {\n  var questionnaireHiddenExtension = getExtension(extensions_1.default.QUESTIONNAIRE_HIDDEN, item);\n\n  if (!questionnaireHiddenExtension || !questionnaireHiddenExtension.valueBoolean) {\n    return false;\n  }\n\n  return questionnaireHiddenExtension.valueBoolean;\n}\n\nexports.getQuestionnaireHiddenExtensionValue = getQuestionnaireHiddenExtensionValue;\n\nfunction getCalculatedExpressionExtension(item) {\n  var calculatedExpressionExtension = getExtension(extensions_1.default.CALCULATED_EXPRESSION, item);\n\n  if (!calculatedExpressionExtension || calculatedExpressionExtension.valueString === null || calculatedExpressionExtension.valueString === undefined) {\n    return;\n  }\n\n  return calculatedExpressionExtension;\n}\n\nexports.getCalculatedExpressionExtension = getCalculatedExpressionExtension;","map":null,"metadata":{},"sourceType":"script"}