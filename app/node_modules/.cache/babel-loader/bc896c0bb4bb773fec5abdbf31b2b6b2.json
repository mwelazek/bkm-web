{"ast":null,"code":"import _slicedToArray from \"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useMemo } from 'react';\nimport Select from '../../select';\nimport { ColorFormat } from '../interface';\nimport ColorAlphaInput from './ColorAlphaInput';\nimport ColorHexInput from './ColorHexInput';\nimport ColorHsbInput from './ColorHsbInput';\nimport ColorRgbInput from './ColorRgbInput';\nvar selectOptions = [ColorFormat.hex, ColorFormat.hsb, ColorFormat.rgb].map(function (format) {\n  return {\n    value: format,\n    label: format.toLocaleUpperCase()\n  };\n});\n\nvar ColorInput = function ColorInput(props) {\n  var prefixCls = props.prefixCls,\n      format = props.format,\n      value = props.value,\n      onFormatChange = props.onFormatChange,\n      onChange = props.onChange;\n\n  var _useMergedState = useMergedState(ColorFormat.hex, {\n    value: format,\n    onChange: onFormatChange\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      colorFormat = _useMergedState2[0],\n      setColorFormat = _useMergedState2[1];\n\n  var colorInputPrefixCls = \"\".concat(prefixCls, \"-input\");\n\n  var handleFormatChange = function handleFormatChange(newFormat) {\n    setColorFormat(newFormat);\n  };\n\n  var steppersNode = useMemo(function () {\n    var inputProps = {\n      value: value,\n      prefixCls: prefixCls,\n      onChange: onChange\n    };\n\n    switch (colorFormat) {\n      case ColorFormat.hsb:\n        return /*#__PURE__*/React.createElement(ColorHsbInput, Object.assign({}, inputProps));\n\n      case ColorFormat.rgb:\n        return /*#__PURE__*/React.createElement(ColorRgbInput, Object.assign({}, inputProps));\n\n      case ColorFormat.hex:\n      default:\n        return /*#__PURE__*/React.createElement(ColorHexInput, Object.assign({}, inputProps));\n    }\n  }, [colorFormat, prefixCls, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(colorInputPrefixCls, \"-container\")\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: colorFormat,\n    bordered: false,\n    getPopupContainer: function getPopupContainer(current) {\n      return current;\n    },\n    popupMatchSelectWidth: 68,\n    placement: \"bottomRight\",\n    onChange: handleFormatChange,\n    className: \"\".concat(prefixCls, \"-format-select\"),\n    size: \"small\",\n    options: selectOptions\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: colorInputPrefixCls\n  }, steppersNode), /*#__PURE__*/React.createElement(ColorAlphaInput, {\n    prefixCls: prefixCls,\n    value: value,\n    onChange: onChange\n  }));\n};\n\nexport default ColorInput;","map":null,"metadata":{},"sourceType":"module"}