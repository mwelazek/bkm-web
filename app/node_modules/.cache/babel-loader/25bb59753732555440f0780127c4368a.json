{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GroupList = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _antd = require(\"antd\");\n\nvar _GroupDetail = require(\"../BaseComponents/GroupDetail\");\n\nvar _icons = require(\"@ant-design/icons\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _mls = require(\"../../mls\");\n\nvar _BaseGroupsListView = require(\"../BaseComponents/BaseGroupsListView\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _rbac = require(\"@opensrp/rbac\");\n\nvar keyValueDetailRender = function keyValueDetailRender(obj, t) {\n  var _keyValues;\n\n  var _parseGroup = (0, _GroupDetail.parseGroup)(obj),\n      name = _parseGroup.name,\n      active = _parseGroup.active,\n      lastUpdated = _parseGroup.lastUpdated,\n      id = _parseGroup.id,\n      quantity = _parseGroup.quantity,\n      members = _parseGroup.members;\n\n  var keyValues = (_keyValues = {}, (0, _defineProperty2[\"default\"])(_keyValues, t('Id'), id), (0, _defineProperty2[\"default\"])(_keyValues, t('Name'), name), (0, _defineProperty2[\"default\"])(_keyValues, t('Active'), active ? t('Active') : t('Inactive')), (0, _defineProperty2[\"default\"])(_keyValues, t('Last updated'), t('{{val, datetime}}', {\n    val: new Date(lastUpdated)\n  })), (0, _defineProperty2[\"default\"])(_keyValues, t('No. of Members'), quantity), (0, _defineProperty2[\"default\"])(_keyValues, t('Members'), members === null || members === void 0 ? void 0 : members.map(function (member) {\n    return member.entity.display;\n  }).join(', ')), _keyValues);\n  return _react[\"default\"].createElement(_antd.Space, {\n    direction: \"vertical\"\n  }, Object.entries(keyValues).map(function (_ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    var props = (0, _defineProperty2[\"default\"])({}, key, value);\n    return value ? _react[\"default\"].createElement(\"div\", {\n      key: key,\n      \"data-testid\": \"key-value\"\n    }, _react[\"default\"].createElement(_reactUtils.SingleKeyNestedValue, props)) : null;\n  }));\n};\n\nvar GroupList = function GroupList(props) {\n  var fhirBaseURL = props.fhirBaseURL;\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useSearchParams = (0, _reactUtils.useSearchParams)(),\n      addParam = _useSearchParams.addParam;\n\n  var getItems = function getItems(record) {\n    return [{\n      key: '1',\n      label: _react[\"default\"].createElement(_antd.Button, {\n        type: \"link\",\n        \"data-testid\": \"view-details\",\n        onClick: function onClick() {\n          addParam(_reactUtils.viewDetailsQuery, record.id);\n        }\n      }, t('View Details'))\n    }];\n  };\n\n  var getColumns = function getColumns(t) {\n    return [{\n      title: t('Name'),\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: t('Active'),\n      dataIndex: 'active',\n      key: 'active',\n      render: function render(value) {\n        return _react[\"default\"].createElement(\"div\", null, value ? 'Yes' : 'No');\n      }\n    }, {\n      title: t('Last Updated'),\n      dataIndex: 'lastUpdated',\n      key: 'lastUpdated',\n      render: function render(value) {\n        return t('{{val,datetime}}', {\n          val: new Date(value)\n        });\n      }\n    }, {\n      title: t('Actions'),\n      width: '10%',\n      render: function render(_, record) {\n        return _react[\"default\"].createElement(\"span\", {\n          className: \"d-flex align-items-center\"\n        }, _react[\"default\"].createElement(_rbac.RbacCheck, {\n          permissions: ['Group.update']\n        }, _react[\"default\"].createElement(_react[\"default\"].Fragment, null, _react[\"default\"].createElement(_reactRouterDom.Link, {\n          to: \"#\",\n          className: \"m-0 p-1\",\n          onClick: function onClick(e) {\n            return e.preventDefault();\n          }\n        }, t('Edit')), _react[\"default\"].createElement(_antd.Divider, {\n          type: \"vertical\"\n        }))), _react[\"default\"].createElement(_antd.Dropdown, {\n          menu: {\n            items: getItems(record)\n          },\n          placement: \"bottomRight\",\n          arrow: true,\n          trigger: ['click']\n        }, _react[\"default\"].createElement(_icons.MoreOutlined, {\n          \"data-testid\": \"action-dropdown\",\n          className: \"more-options\"\n        })));\n      }\n    }];\n  };\n\n  var baseListViewProps = {\n    getColumns: getColumns,\n    keyValueMapperRenderProp: keyValueDetailRender,\n    createButtonLabel: t('Add Group'),\n    fhirBaseURL: fhirBaseURL,\n    pageTitle: t('Groups List')\n  };\n  return _react[\"default\"].createElement(_BaseGroupsListView.BaseListView, baseListViewProps);\n};\n\nexports.GroupList = GroupList;","map":null,"metadata":{},"sourceType":"script"}