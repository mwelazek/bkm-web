{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOrgSelectOptions = exports.getCareTeamFormFields = exports.defaultInitialValues = void 0;\nexports.getPatientName = getPatientName;\nexports.submitForm = exports.selectFilterFunction = exports.getPractitionerSelectOptions = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _connectedReducerRegistry = require(\"@onaio/connected-reducer-registry\");\n\nvar _uuid = require(\"uuid\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _notifications = require(\"@opensrp/notifications\");\n\nvar _constants = require(\"../../constants\");\n\nvar _lodash = require(\"lodash\");\n\nvar _defaultInitialValues;\n\nvar _excluded = [\"meta\", \"text\", \"participant\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar getCarriedOverParticipants = function getCarriedOverParticipants(values, initialValues) {\n  var _initialValues$initia;\n\n  var _ref = (_initialValues$initia = initialValues.initialCareTeam) !== null && _initialValues$initia !== void 0 ? _initialValues$initia : {},\n      participant = _ref.participant;\n\n  var participantByKey = (participant !== null && participant !== void 0 ? participant : []).reduce(function (ac, val) {\n    var _val$member;\n\n    var reference = (_val$member = val.member) === null || _val$member === void 0 ? void 0 : _val$member.reference;\n    return _objectSpread(_objectSpread({}, ac), {}, (0, _defineProperty2[\"default\"])({}, reference, val));\n  }, {});\n\n  var currentManagingOrgValuesyId = values[_constants.managingOrganizations].reduce(function (ac, val) {\n    return _objectSpread(_objectSpread({}, ac), {}, (0, _defineProperty2[\"default\"])({}, val, val));\n  }, {});\n\n  var currentpractitionersById = values[_constants.practitionerParticipants].reduce(function (ac, val) {\n    return _objectSpread(_objectSpread({}, ac), {}, (0, _defineProperty2[\"default\"])({}, val, val));\n  }, {});\n\n  var cleanParticipants = function cleanParticipants(refs, lookup) {\n    refs.forEach(function (ref) {\n      if (!lookup[ref]) {\n        delete participantByKey[ref];\n      }\n    });\n  };\n\n  cleanParticipants(initialValues.practitionerParticipants, currentpractitionersById);\n  cleanParticipants(initialValues.managingOrganizations, currentManagingOrgValuesyId);\n  return participantByKey;\n};\n\nvar submitForm = function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(values, initialValues, fhirBaseURL, organizations, practitioners, t) {\n    var initialCareTeam, id, uuid, _ref3, meta, text, participant, nonMetaFields, allPractitionersById, practitionerParticipantsById, organizationsById, managingOrgsById, carriedOverParticipantsById, finalParticipantsById, managingOrgsPayload, careTeamId, payload, serve, successNotificationMessage;\n\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            initialCareTeam = initialValues.initialCareTeam, id = initialValues.id, uuid = initialValues.uuid;\n            _ref3 = initialCareTeam !== null && initialCareTeam !== void 0 ? initialCareTeam : {}, meta = _ref3.meta, text = _ref3.text, participant = _ref3.participant, nonMetaFields = (0, _objectWithoutProperties2[\"default\"])(_ref3, _excluded);\n            allPractitionersById = (0, _lodash.keyBy)(practitioners, function (practitioner) {\n              return \"\".concat(_constants.practitionerResourceType, \"/\").concat(practitioner.id);\n            });\n            practitionerParticipantsById = {};\n\n            values[_constants.practitionerParticipants].forEach(function (id) {\n              var fullPractitionerObj = allPractitionersById[id];\n              practitionerParticipantsById[id] = {\n                member: {\n                  reference: id,\n                  display: getPatientName(fullPractitionerObj)\n                }\n              };\n            });\n\n            organizationsById = (0, _lodash.keyBy)(organizations, function (org) {\n              return \"\".concat(_constants.organizationResourceType, \"/\").concat(org.id);\n            });\n            managingOrgsById = {};\n\n            values[_constants.managingOrganizations].forEach(function (id) {\n              var _organizationsById$id;\n\n              var orgName = (_organizationsById$id = organizationsById[id]) === null || _organizationsById$id === void 0 ? void 0 : _organizationsById$id.name;\n              var orgDisplay = orgName ? {\n                display: organizationsById[id].name\n              } : {};\n              managingOrgsById[id] = {\n                role: [{\n                  coding: [{\n                    system: 'http://snomed.info/sct',\n                    code: '394730007',\n                    display: 'Healthcare related organization'\n                  }]\n                }],\n                member: _objectSpread(_objectSpread({}, orgDisplay), {}, {\n                  reference: id\n                })\n              };\n            });\n\n            carriedOverParticipantsById = getCarriedOverParticipants(values, initialValues);\n            finalParticipantsById = _objectSpread(_objectSpread(_objectSpread({}, carriedOverParticipantsById), practitionerParticipantsById), managingOrgsById);\n            managingOrgsPayload = Object.values(managingOrgsById).map(function (obj) {\n              return obj.member;\n            });\n            careTeamId = uuid ? uuid : (0, _uuid.v4)();\n            payload = _objectSpread(_objectSpread({}, nonMetaFields), {}, {\n              resourceType: _constants.FHIR_CARE_TEAM,\n              identifier: [{\n                use: 'official',\n                value: careTeamId\n              }],\n              id: id ? id : careTeamId,\n              name: values.name,\n              status: values.status,\n              participant: Object.values(finalParticipantsById),\n              managingOrganization: managingOrgsPayload\n            });\n            serve = new _reactUtils.FHIRServiceClass(fhirBaseURL, _constants.FHIR_CARE_TEAM);\n            successNotificationMessage = t('Successfully added CareTeams');\n\n            if (id) {\n              successNotificationMessage = t('Successfully updated CareTeams');\n            }\n\n            _context.next = 18;\n            return serve.update(payload).then(function () {\n              return (0, _notifications.sendSuccessNotification)(successNotificationMessage);\n            })[\"catch\"](function () {\n              (0, _notifications.sendErrorNotification)(t('There was a problem fetching the Care Team'));\n            })[\"finally\"](function () {\n              return _connectedReducerRegistry.history.push(_constants.URL_CARE_TEAM);\n            });\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function submitForm(_x, _x2, _x3, _x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.submitForm = submitForm;\n\nfunction getPatientName(obj) {\n  if (!obj) {\n    return '';\n  }\n\n  var names = obj.name;\n  var officialName = (0, _reactUtils.getObjLike)(names, 'use', _reactUtils.IdentifierUseCodes.OFFICIAL)[0];\n  return (0, _reactUtils.parseFhirHumanName)(officialName);\n}\n\nvar defaultInitialValues = (_defaultInitialValues = {}, (0, _defineProperty2[\"default\"])(_defaultInitialValues, _constants.uuid, ''), (0, _defineProperty2[\"default\"])(_defaultInitialValues, _constants.id, ''), (0, _defineProperty2[\"default\"])(_defaultInitialValues, _constants.name, ''), (0, _defineProperty2[\"default\"])(_defaultInitialValues, _constants.status, 'active'), (0, _defineProperty2[\"default\"])(_defaultInitialValues, \"initialCareTeam\", undefined), (0, _defineProperty2[\"default\"])(_defaultInitialValues, _constants.managingOrganizations, []), (0, _defineProperty2[\"default\"])(_defaultInitialValues, _constants.organizationParticipants, []), (0, _defineProperty2[\"default\"])(_defaultInitialValues, _constants.practitionerParticipants, []), _defaultInitialValues);\nexports.defaultInitialValues = defaultInitialValues;\n\nvar getCareTeamFormFields = function getCareTeamFormFields(careTeam) {\n  var _careTeam$managingOrg;\n\n  if (!careTeam) {\n    return defaultInitialValues;\n  }\n\n  var id = careTeam.id,\n      identifier = careTeam.identifier,\n      name = careTeam.name,\n      status = careTeam.status,\n      participant = careTeam.participant;\n  var officialIdentifier = (0, _reactUtils.getObjLike)(identifier, 'use', _reactUtils.IdentifierUseCodes.OFFICIAL);\n  var participantRefs = (participant !== null && participant !== void 0 ? participant : []).map(function (participant) {\n    var _participant$member;\n\n    return (_participant$member = participant.member) === null || _participant$member === void 0 ? void 0 : _participant$member.reference;\n  }).filter(function (x) {\n    return x !== undefined;\n  });\n  var practitionerRefs = participantRefs.filter(function (ref) {\n    return ref.startsWith(_constants.practitionerResourceType);\n  });\n  var organizationRefs = participantRefs.filter(function (ref) {\n    return ref.startsWith(_constants.organizationResourceType);\n  });\n  var managingOrgsRefs = ((_careTeam$managingOrg = careTeam.managingOrganization) !== null && _careTeam$managingOrg !== void 0 ? _careTeam$managingOrg : []).map(function (ref) {\n    return ref.reference;\n  }).filter(function (ref) {\n    return !!ref;\n  });\n  return {\n    uuid: (0, _lodash.get)(officialIdentifier, '0.value', undefined),\n    id: id,\n    name: name,\n    status: status,\n    initialCareTeam: careTeam,\n    practitionerParticipants: practitionerRefs,\n    organizationParticipants: organizationRefs,\n    managingOrganizations: managingOrgsRefs\n  };\n};\n\nexports.getCareTeamFormFields = getCareTeamFormFields;\n\nvar getOrgSelectOptions = function getOrgSelectOptions() {\n  var orgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return orgs.map(function (org) {\n    return {\n      value: \"\".concat(_constants.organizationResourceType, \"/\").concat(org.id),\n      label: org.name\n    };\n  });\n};\n\nexports.getOrgSelectOptions = getOrgSelectOptions;\n\nvar getPractitionerSelectOptions = function getPractitionerSelectOptions() {\n  var resources = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return resources.map(function (res) {\n    return {\n      value: \"\".concat(_constants.practitionerResourceType, \"/\").concat(res.id),\n      label: getPatientName(res)\n    };\n  });\n};\n\nexports.getPractitionerSelectOptions = getPractitionerSelectOptions;\n\nvar selectFilterFunction = function selectFilterFunction(inputValue, option) {\n  var _option$label;\n\n  return !!(option !== null && option !== void 0 && (_option$label = option.label) !== null && _option$label !== void 0 && _option$label.toLowerCase().includes(inputValue.toLowerCase()));\n};\n\nexports.selectFilterFunction = selectFilterFunction;","map":null,"metadata":{},"sourceType":"script"}