{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst react_redux_1 = require(\"react-redux\");\n\nconst typography_module_scss_1 = __importDefault(require(\"@helsenorge/designsystem-react/scss/typography.module.scss\"));\n\nconst itemcontrol_1 = __importDefault(require(\"../../../constants/itemcontrol\"));\n\nconst extension_1 = require(\"../../../util/extension\");\n\nconst index_1 = require(\"../../../util/index\");\n\nconst map_props_1 = require(\"../../../util/map-props\");\n\nconst Display = _ref => {\n  let {\n    id,\n    enable,\n    pdf,\n    item,\n    onRenderMarkdown\n  } = _ref;\n  const itemControls = item ? extension_1.getItemControlExtensionValue(item) : null;\n  const highlightClass = itemControls && itemControls.some(itemControl => itemControl.code === itemcontrol_1.default.HIGHLIGHT) ? 'page_skjemautfyller__component_highlight' : '';\n\n  if (!enable) {\n    return null;\n  }\n\n  let value = undefined;\n\n  if (item) {\n    const markdown = item._text ? extension_1.getMarkdownExtensionValue(item._text) : undefined;\n\n    if (markdown) {\n      value = React.createElement(\"div\", {\n        id: index_1.getId(id),\n        className: `page_skjemautfyller__markdown ${typography_module_scss_1.default['anchorlink-wrapper']}`,\n        dangerouslySetInnerHTML: {\n          __html: index_1.getText(item, onRenderMarkdown)\n        }\n      });\n    } else {\n      value = React.createElement(\"p\", {\n        id: index_1.getId(id)\n      }, `${index_1.renderPrefix(item)} ${index_1.getText(item, onRenderMarkdown)}`);\n    }\n  }\n\n  if (pdf) {\n    if (!value) {\n      return null;\n    }\n\n    return React.createElement(\"div\", null, value);\n  }\n\n  return React.createElement(\"div\", {\n    className: `page_skjemautfyller__component page_skjemautfyller__component_display ${highlightClass}`\n  }, value);\n};\n\nconst connectedComponent = react_redux_1.connect(map_props_1.mapStateToProps, map_props_1.mapDispatchToProps, map_props_1.mergeProps)(Display);\nexports.default = connectedComponent;","map":null,"metadata":{},"sourceType":"script"}