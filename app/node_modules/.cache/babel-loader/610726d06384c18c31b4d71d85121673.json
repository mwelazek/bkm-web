{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NewEditLocationUnit = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactRouter = require(\"react-router\");\n\nvar _LocationForm = require(\"../LocationForm\");\n\nvar _utils = require(\"../LocationForm/utils\");\n\nvar _antd = require(\"antd\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _reactHelmet = require(\"react-helmet\");\n\nvar _utils2 = require(\"../../helpers/utils\");\n\nvar _mls = require(\"../../mls\");\n\nvar NewEditLocationUnit = function NewEditLocationUnit(props) {\n  var _sParams$get;\n\n  var hidden = props.hidden,\n      disabled = props.disabled,\n      fhirBaseURL = props.fhirBaseURL,\n      fhirRootLocationId = props.fhirRootLocationId,\n      successURLGenerator = props.successURLGenerator,\n      cancelURLGenerator = props.cancelURLGenerator,\n      disabledTreeNodesCallback = props.disabledTreeNodesCallback;\n  var history = (0, _reactRouter.useHistory)();\n  var location = (0, _reactRouter.useLocation)();\n  var params = (0, _reactRouter.useParams)();\n  var sParams = new URLSearchParams(location.search);\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var cancelHandler = function cancelHandler() {\n    var cancelURL = cancelURLGenerator();\n    history.push(cancelURL);\n  };\n\n  var _useGetLocationHierar = (0, _utils2.useGetLocationHierarchy)(fhirBaseURL, fhirRootLocationId),\n      data = _useGetLocationHierar.data,\n      error = _useGetLocationHierar.error,\n      isLoading = _useGetLocationHierar.isLoading;\n\n  var locId = params.id;\n\n  var _useGetLocation = (0, _utils2.useGetLocation)(fhirBaseURL, locId),\n      locData = _useGetLocation.data,\n      locError = _useGetLocation.error,\n      locIsLoading = _useGetLocation.isLoading,\n      locIsIdle = _useGetLocation.isIdle;\n\n  var ifNotIdle = function ifNotIdle(isDoing) {\n    return !locIsIdle && isDoing;\n  };\n\n  if (isLoading || ifNotIdle(locIsLoading)) {\n    return _react[\"default\"].createElement(_antd.Spin, {\n      size: \"large\",\n      className: \"custom-spinner\"\n    });\n  }\n\n  if (error && !data && locError && !locData) {\n    return _react[\"default\"].createElement(_reactUtils.BrokenPage, {\n      errorMessage: t('Unable to load the location or location hierarchy')\n    });\n  }\n\n  if (!data || ifNotIdle(!locData)) {\n    return _react[\"default\"].createElement(_reactUtils.Resource404, {\n      errorMessage: t('Unable to load the location or location hierarchy')\n    });\n  }\n\n  var parentId = (_sParams$get = sParams.get('parentId')) !== null && _sParams$get !== void 0 ? _sParams$get : undefined;\n  var initialValues = (0, _utils.getLocationFormFields)(locData, parentId);\n  var locationFormProps = {\n    initialValues: initialValues,\n    tree: data,\n    successURLGenerator: successURLGenerator,\n    hidden: hidden,\n    disabled: disabled,\n    onCancel: cancelHandler,\n    fhirBaseURL: fhirBaseURL,\n    disabledTreeNodesCallback: disabledTreeNodesCallback\n  };\n  var pageTitle = locData ? t('Edit > {{name}}', {\n    name: initialValues.name\n  }) : t('Add Location Unit');\n  return _react[\"default\"].createElement(_antd.Row, {\n    className: \"content-section\"\n  }, _react[\"default\"].createElement(_reactHelmet.Helmet, null, _react[\"default\"].createElement(\"title\", null, pageTitle)), _react[\"default\"].createElement(_reactUtils.PageHeader, {\n    title: pageTitle\n  }), _react[\"default\"].createElement(_antd.Col, {\n    className: \"bg-white p-4\",\n    span: 24\n  }, _react[\"default\"].createElement(_LocationForm.LocationForm, locationFormProps)));\n};\n\nexports.NewEditLocationUnit = NewEditLocationUnit;","map":null,"metadata":{},"sourceType":"script"}