{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ucumJsonDefs = exports.UcumJsonDefs = void 0;\n/**\n * This class handles opening, reading and loading the JSON file of ucum\n * definitions (prefixes, base units, and unit atoms).\n *\n * @author Lee Mericle\n *\n */\n\nvar Pfx = require(\"./prefix.js\");\n\nvar PfxT = require(\"./prefixTables.js\");\n\nvar Un = require(\"./unit.js\");\n\nvar Utab = require('./unitTables.js');\n\nvar unpackArray = require('./jsonArrayPack.js').unpackArray;\n\nclass UcumJsonDefs {\n  /**\n   * This method loads the JSON prefix and unit objects into the prefix and\n   * unit tables.\n   *\n   * @returns nothing\n   */\n  loadJsonDefs() {\n    // requiring the file will take care of opening it for use\n    const jsonDefs = require('../data/ucumDefs.min.json');\n\n    jsonDefs.prefixes = unpackArray(jsonDefs.prefixes);\n    jsonDefs.units = unpackArray(jsonDefs.units);\n\n    if (Utab.UnitTables.getInstance().unitsCount() === 0) {\n      let pTab = PfxT.PrefixTables.getInstance();\n      let prefixes = jsonDefs[\"prefixes\"];\n      let plen = prefixes.length;\n\n      for (let p = 0; p < plen; p++) {\n        let newPref = new Pfx.Prefix(prefixes[p]);\n        pTab.add(newPref);\n      }\n\n      let uTab = Utab.UnitTables.getInstance();\n      let units = jsonDefs[\"units\"];\n      let ulen = units.length;\n\n      for (let u = 0; u < ulen; u++) {\n        let newUnit = new Un.Unit(units[u]);\n        uTab.addUnit(newUnit);\n      }\n    } // end if the data has not already been loaded\n\n  } // end loadJsonDefs\n\n\n} // end UcumJsonDefs class\n\n\nexports.UcumJsonDefs = UcumJsonDefs;\nvar ucumJsonDefs = new UcumJsonDefs();\nexports.ucumJsonDefs = ucumJsonDefs;","map":null,"metadata":{},"sourceType":"script"}