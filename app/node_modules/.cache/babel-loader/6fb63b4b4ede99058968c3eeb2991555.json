{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar safe_input_field_1 = __importDefault(require(\"@helsenorge/toolkit/components/atoms/safe-input-field\"));\n\nvar validation_1 = __importDefault(require(\"@helsenorge/toolkit/components/molecules/form/validation\"));\n\nvar newValue_1 = require(\"../../../actions/newValue\");\n\nvar extension_1 = require(\"../../../util/extension\");\n\nvar index_1 = require(\"../../../util/index\");\n\nvar map_props_1 = require(\"../../../util/map-props\");\n\nvar with_common_functions_1 = __importDefault(require(\"../../with-common-functions\"));\n\nvar label_1 = __importDefault(require(\"../label\"));\n\nvar sublabel_1 = __importDefault(require(\"../sublabel\"));\n\nvar textview_1 = __importDefault(require(\"../textview\"));\n\nvar Quantity = /*#__PURE__*/function (_React$Component) {\n  _inherits(Quantity, _React$Component);\n\n  var _super = _createSuper(Quantity);\n\n  function Quantity() {\n    var _this;\n\n    _classCallCheck(this, Quantity);\n\n    _this = _super.apply(this, arguments);\n\n    _this.handleChange = function (event) {\n      var _a;\n\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          promptLoginMessage = _this$props.promptLoginMessage,\n          path = _this$props.path,\n          item = _this$props.item,\n          onAnswerChange = _this$props.onAnswerChange;\n      var extension = extension_1.getQuestionnaireUnitExtensionValue(_this.props.item);\n\n      if (extension) {\n        var quantity = {\n          unit: extension.display,\n          system: extension.system,\n          code: extension.code\n        };\n        var value = Number(parseFloat(event.target.value));\n\n        if (value != null && !isNaN(value) && isFinite(value)) {\n          quantity.value = value;\n        }\n\n        if (dispatch) {\n          (_a = dispatch(newValue_1.newQuantityValueAsync(_this.props.path, quantity, _this.props.item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n            return onAnswerChange(newState, path, item, {\n              valueQuantity: quantity\n            });\n          });\n        }\n\n        if (promptLoginMessage) {\n          promptLoginMessage();\n        }\n      }\n    };\n\n    _this.getUnit = function () {\n      var valueCoding = extension_1.getQuestionnaireUnitExtensionValue(_this.props.item);\n\n      if (valueCoding && valueCoding.display) {\n        return valueCoding.display;\n      }\n\n      return '';\n    };\n\n    return _this;\n  }\n\n  _createClass(Quantity, [{\n    key: \"getValue\",\n    value: function getValue() {\n      var answer = this.props.answer;\n\n      if (answer && answer.valueQuantity !== undefined && answer.valueQuantity !== null) {\n        return answer.valueQuantity.value;\n      }\n    }\n  }, {\n    key: \"getPDFValue\",\n    value: function getPDFValue() {\n      var value = this.getValue();\n\n      if (value === undefined || value === null) {\n        var text = '';\n\n        if (this.props.resources && this.props.resources.ikkeBesvart) {\n          text = this.props.resources.ikkeBesvart;\n        }\n\n        return text;\n      }\n\n      return \"\".concat(value, \" \").concat(this.getUnit());\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _a;\n\n      var responseItemHasChanged = this.props.responseItem !== nextProps.responseItem;\n      var helpItemHasChanged = this.props.isHelpOpen !== nextProps.isHelpOpen;\n      var resourcesHasChanged = JSON.stringify(this.props.resources) !== JSON.stringify(nextProps.resources);\n      var repeats = (_a = this.props.item.repeats) !== null && _a !== void 0 ? _a : false;\n      return responseItemHasChanged || helpItemHasChanged || resourcesHasChanged || repeats;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          item = _this$props2.item,\n          onRenderMarkdown = _this$props2.onRenderMarkdown;\n\n      if (this.props.pdf || index_1.isReadOnly(item)) {\n        return React.createElement(textview_1.default, {\n          id: id,\n          item: this.props.item,\n          value: this.getPDFValue(),\n          onRenderMarkdown: onRenderMarkdown\n        }, this.props.children);\n      }\n\n      var value = this.getValue();\n      var subLabelText = index_1.getSublabelText(item, onRenderMarkdown);\n      return React.createElement(\"div\", {\n        className: \"page_skjemautfyller__component page_skjemautfyller__component_quantity\"\n      }, React.createElement(validation_1.default, Object.assign({}, this.props), React.createElement(safe_input_field_1.default, {\n        size: \"xSmall\",\n        type: \"number\",\n        id: index_1.getId(this.props.id),\n        inputName: index_1.getId(this.props.id),\n        value: value !== undefined ? value + '' : '',\n        showLabel: true,\n        label: React.createElement(label_1.default, {\n          item: item,\n          onRenderMarkdown: onRenderMarkdown\n        }),\n        subLabel: subLabelText ? React.createElement(sublabel_1.default, {\n          subLabelText: subLabelText\n        }) : undefined,\n        isRequired: index_1.isRequired(item),\n        placeholder: extension_1.getPlaceholder(item),\n        max: extension_1.getMaxValueExtensionValue(item),\n        min: extension_1.getMinValueExtensionValue(item),\n        onBlur: this.handleChange,\n        errorMessage: extension_1.getValidationTextExtension(item),\n        pattern: index_1.getDecimalPattern(item),\n        className: \"page_skjemautfyller__quantity\",\n        helpButton: this.props.renderHelpButton(),\n        helpElement: this.props.renderHelpElement(),\n        validateOnExternalUpdate: true\n      }, React.createElement(\"span\", {\n        className: \"page_skjemautfyller__unit\"\n      }, this.getUnit()))), React.createElement(\"div\", null, this.props.repeatButton), this.props.children ? React.createElement(\"div\", {\n        className: \"nested-fieldset nested-fieldset--full-height\"\n      }, this.props.children) : null);\n    }\n  }]);\n\n  return Quantity;\n}(React.Component);\n\nvar withCommonFunctionsComponent = with_common_functions_1.default(Quantity);\nvar connectedComponent = react_redux_1.connect(map_props_1.mapStateToProps, map_props_1.mapDispatchToProps, map_props_1.mergeProps)(withCommonFunctionsComponent);\nexports.default = connectedComponent;","map":null,"metadata":{},"sourceType":"script"}