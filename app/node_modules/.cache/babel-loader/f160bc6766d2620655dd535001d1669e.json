{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validationRulesFactory = exports.postPutHealthCareService = exports.orgFilterFunction = exports.getOrgSelectOptions = exports.getHealthCareFormFields = exports.generateHealthCarePayload = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _uuid = require(\"uuid\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _lodash = require(\"lodash\");\n\nvar _constants = require(\"../../constants\");\n\nvar _fhirTeamManagement = require(\"@opensrp/fhir-team-management\");\n\nvar _excluded = [\"meta\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar validationRulesFactory = function validationRulesFactory(t) {\n  return {\n    id: [{\n      type: 'string'\n    }],\n    identifier: [{\n      type: 'string'\n    }],\n    name: [{\n      type: 'string',\n      message: t('Must be a valid string')\n    }, {\n      required: true,\n      message: t('Required')\n    }],\n    active: [{\n      type: 'boolean'\n    }, {\n      required: true,\n      message: t('Required')\n    }],\n    comment: [{\n      type: 'string'\n    }, {\n      required: false\n    }],\n    providedBy: [{\n      type: 'string'\n    }, {\n      required: false\n    }],\n    extraDetails: [{\n      type: 'string'\n    }, {\n      required: false\n    }]\n  };\n};\n\nexports.validationRulesFactory = validationRulesFactory;\n\nvar getHealthCareFormFields = function getHealthCareFormFields(obj) {\n  if (!obj) {\n    return {};\n  }\n\n  var id = obj.id,\n      name = obj.name,\n      active = obj.active,\n      identifier = obj.identifier,\n      providedBy = obj.providedBy,\n      comment = obj.comment,\n      extraDetails = obj.extraDetails;\n  var identifierObj = (0, _reactUtils.getObjLike)(identifier, 'use', _reactUtils.IdentifierUseCodes.OFFICIAL);\n  var formFields = {\n    initialObject: obj,\n    id: id,\n    identifier: (0, _lodash.get)(identifierObj, '0.value'),\n    active: active,\n    name: name,\n    providedBy: (0, _lodash.get)(providedBy, 'reference', undefined),\n    comment: comment,\n    extraDetails: extraDetails\n  };\n  return formFields;\n};\n\nexports.getHealthCareFormFields = getHealthCareFormFields;\n\nvar generateHealthCarePayload = function generateHealthCarePayload(values, orgs, initialValues) {\n  var id = values.id,\n      rawIdentifier = values.identifier,\n      active = values.active,\n      name = values.name,\n      providedBy = values.providedBy,\n      extraDetails = values.extraDetails,\n      comment = values.comment;\n  var initialObject = initialValues.initialObject;\n  var orgsById = (0, _lodash.keyBy)(orgs, function (org) {\n    return \"\".concat(_fhirTeamManagement.organizationResourceType, \"/\").concat(org.id);\n  });\n  var payload = {\n    resourceType: _constants.healthCareServiceResourceType,\n    active: !!active\n  };\n\n  if (initialObject) {\n    var meta = initialObject.meta,\n        rest = (0, _objectWithoutProperties2[\"default\"])(initialObject, _excluded);\n    payload = _objectSpread(_objectSpread({}, rest), payload);\n  }\n\n  if (name) {\n    payload.name = name;\n  }\n\n  if (id) {\n    payload.id = id;\n  } else {\n    payload.id = (0, _uuid.v4)();\n  }\n\n  var identifier = rawIdentifier;\n\n  if (!rawIdentifier) {\n    identifier = (0, _uuid.v4)();\n  }\n\n  payload.identifier = [{\n    value: identifier,\n    use: _reactUtils.IdentifierUseCodes.OFFICIAL\n  }];\n\n  if (providedBy) {\n    payload.providedBy = {\n      reference: providedBy,\n      display: (0, _lodash.get)(orgsById[providedBy], 'name', '')\n    };\n  }\n\n  if (extraDetails) {\n    payload.extraDetails = extraDetails;\n  }\n\n  if (comment) {\n    payload.comment = comment;\n  }\n\n  return payload;\n};\n\nexports.generateHealthCarePayload = generateHealthCarePayload;\n\nvar getOrgSelectOptions = function getOrgSelectOptions(orgs) {\n  return orgs.map(function (org) {\n    var _org$name;\n\n    var orgId = \"\".concat(_fhirTeamManagement.organizationResourceType, \"/\").concat(org.id);\n    return {\n      value: orgId,\n      label: (_org$name = org.name) !== null && _org$name !== void 0 ? _org$name : orgId\n    };\n  });\n};\n\nexports.getOrgSelectOptions = getOrgSelectOptions;\n\nvar orgFilterFunction = function orgFilterFunction(inputValue, option) {\n  return !!(option !== null && option !== void 0 && option.label.toLowerCase().includes(inputValue.toLowerCase()));\n};\n\nexports.orgFilterFunction = orgFilterFunction;\n\nvar postPutHealthCareService = function postPutHealthCareService(baseUrl, payload) {\n  var serve = new _reactUtils.FHIRServiceClass(baseUrl, _constants.healthCareServiceResourceType);\n  return serve.update(payload);\n};\n\nexports.postPutHealthCareService = postPutHealthCareService;","map":null,"metadata":{},"sourceType":"script"}