{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnitOfMeasure = exports.TypeOfGroup = void 0;\nexports.createSupplyManagementList = createSupplyManagementList;\nexports.getGroupTypeOptions = exports.getGroupFormFields = exports.generateGroupPayload = exports.defaultCode = exports.defaultCharacteristic = void 0;\nexports.getOrCreateList = getOrCreateList;\nexports.validationRulesFactory = exports.updateListReferencesFactory = exports.postPutGroup = exports.groupSelectfilterFunction = exports.getUnitOfMeasureOptions = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _uuid = require(\"uuid\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _lodash = require(\"lodash\");\n\nvar _constants = require(\"../../constants\");\n\nvar _utils = require(\"../../helpers/utils\");\n\nvar _excluded = [\"meta\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar UnitOfMeasure;\nexports.UnitOfMeasure = UnitOfMeasure;\n\n(function (UnitOfMeasure) {\n  UnitOfMeasure[\"Pieces\"] = \"Pieces\";\n  UnitOfMeasure[\"Tablets\"] = \"Tablets\";\n  UnitOfMeasure[\"Ampoules\"] = \"Ampoules\";\n  UnitOfMeasure[\"Strips\"] = \"Strips\";\n  UnitOfMeasure[\"Cycles\"] = \"Cycles\";\n  UnitOfMeasure[\"Bottles\"] = \"Bottles\";\n  UnitOfMeasure[\"TestKits\"] = \"Test kits\";\n  UnitOfMeasure[\"Sachets\"] = \"Sachets\";\n  UnitOfMeasure[\"Straps\"] = \"Straps\";\n})(UnitOfMeasure || (exports.UnitOfMeasure = UnitOfMeasure = {}));\n\nvar TypeOfGroup;\nexports.TypeOfGroup = TypeOfGroup;\n\n(function (TypeOfGroup) {\n  TypeOfGroup[\"Medication\"] = \"medication\";\n  TypeOfGroup[\"Decive\"] = \"device\";\n})(TypeOfGroup || (exports.TypeOfGroup = TypeOfGroup = {}));\n\nvar defaultCharacteristic = {\n  code: {\n    coding: [{\n      system: _utils.snomedCodeSystem,\n      code: _utils.characteristicUnitMeasureCode,\n      display: 'Unit of measure'\n    }]\n  },\n  valueCodeableConcept: {\n    coding: [{\n      system: _utils.snomedCodeSystem,\n      code: '767525000',\n      display: 'Unit'\n    }],\n    text: undefined\n  }\n};\nexports.defaultCharacteristic = defaultCharacteristic;\nvar defaultCode = {\n  coding: [{\n    system: _utils.snomedCodeSystem,\n    code: _utils.supplyMgSnomedCode,\n    display: 'Supply management'\n  }]\n};\nexports.defaultCode = defaultCode;\n\nvar validationRulesFactory = function validationRulesFactory(t) {\n  var _ref;\n\n  return _ref = {}, (0, _defineProperty2[\"default\"])(_ref, _constants.id, [{\n    type: 'string'\n  }]), (0, _defineProperty2[\"default\"])(_ref, _constants.identifier, [{\n    type: 'string'\n  }]), (0, _defineProperty2[\"default\"])(_ref, _constants.name, [{\n    type: 'string',\n    message: t('Must be a valid string')\n  }, {\n    required: true,\n    message: t('Required')\n  }]), (0, _defineProperty2[\"default\"])(_ref, _constants.active, [{\n    type: 'boolean'\n  }, {\n    required: true,\n    message: t('Required')\n  }]), (0, _defineProperty2[\"default\"])(_ref, _constants.type, [{\n    type: 'enum',\n    \"enum\": Object.values(TypeOfGroup),\n    required: true\n  }]), (0, _defineProperty2[\"default\"])(_ref, _constants.unitOfMeasure, [{\n    type: 'enum',\n    \"enum\": Object.values(UnitOfMeasure),\n    required: true\n  }]), _ref;\n};\n\nexports.validationRulesFactory = validationRulesFactory;\n\nvar getGroupFormFields = function getGroupFormFields(obj) {\n  if (!obj) {\n    return {\n      initialObject: {\n        code: defaultCode\n      },\n      active: true\n    };\n  }\n\n  var id = obj.id,\n      name = obj.name,\n      active = obj.active,\n      identifier = obj.identifier,\n      type = obj.type;\n  var identifierObj = (0, _reactUtils.getObjLike)(identifier, 'use', _reactUtils.IdentifierUseCodes.OFFICIAL);\n  var unitMeasureCharacteristic = (0, _utils.getUnitMeasureCharacteristic)(obj);\n  var formFields = {\n    initialObject: obj,\n    id: id,\n    identifier: (0, _lodash.get)(identifierObj, '0.value'),\n    active: active,\n    name: name,\n    type: type,\n    unitOfMeasure: (0, _lodash.get)(unitMeasureCharacteristic, 'valueCodeableConcept.text', undefined)\n  };\n  return formFields;\n};\n\nexports.getGroupFormFields = getGroupFormFields;\n\nvar generateGroupPayload = function generateGroupPayload(values, initialValues) {\n  var id = values.id,\n      rawIdentifier = values.identifier,\n      active = values.active,\n      name = values.name,\n      type = values.type,\n      unitOfMeasure = values.unitOfMeasure;\n  var initialObject = initialValues.initialObject;\n  var payload = {\n    resourceType: _constants.groupResourceType,\n    active: !!active\n  };\n\n  if (initialObject) {\n    var meta = initialObject.meta,\n        rest = (0, _objectWithoutProperties2[\"default\"])(initialObject, _excluded);\n    payload = _objectSpread(_objectSpread({}, rest), payload);\n  }\n\n  if (name) {\n    payload.name = name;\n  }\n\n  if (id) {\n    payload.id = id;\n  } else {\n    payload.id = (0, _uuid.v4)();\n  }\n\n  var identifier = rawIdentifier;\n\n  if (!rawIdentifier) {\n    identifier = (0, _uuid.v4)();\n  }\n\n  payload.identifier = [{\n    value: identifier,\n    use: _reactUtils.IdentifierUseCodes.OFFICIAL\n  }];\n\n  if (type) {\n    payload.type = type;\n  }\n\n  if (unitOfMeasure) {\n    var unitMeasureBackBone = (0, _utils.getUnitMeasureCharacteristic)(payload);\n\n    if (unitMeasureBackBone) {\n      (0, _lodash.set)(unitMeasureBackBone, 'valueCodeableConcept.text', unitOfMeasure);\n    } else {\n      var _payload$characterist;\n\n      var updatedCharacteristic = (0, _lodash.set)(defaultCharacteristic, 'valueCodeableConcept.text', unitOfMeasure);\n      payload.characteristic = [].concat((0, _toConsumableArray2[\"default\"])((_payload$characterist = payload.characteristic) !== null && _payload$characterist !== void 0 ? _payload$characterist : []), [updatedCharacteristic]);\n    }\n  }\n\n  return payload;\n};\n\nexports.generateGroupPayload = generateGroupPayload;\n\nvar getGroupTypeOptions = function getGroupTypeOptions() {\n  return (0, _lodash.values)(TypeOfGroup).map(function (group) {\n    return {\n      value: group,\n      label: (0, _lodash.capitalize)(group)\n    };\n  });\n};\n\nexports.getGroupTypeOptions = getGroupTypeOptions;\n\nvar getUnitOfMeasureOptions = function getUnitOfMeasureOptions() {\n  return (0, _lodash.values)(UnitOfMeasure).map(function (measure) {\n    return {\n      value: measure,\n      label: (0, _lodash.capitalize)(measure)\n    };\n  });\n};\n\nexports.getUnitOfMeasureOptions = getUnitOfMeasureOptions;\n\nvar groupSelectfilterFunction = function groupSelectfilterFunction(inputValue, option) {\n  return !!(option !== null && option !== void 0 && option.label.toLowerCase().includes(inputValue.toLowerCase()));\n};\n\nexports.groupSelectfilterFunction = groupSelectfilterFunction;\n\nvar postPutGroup = function postPutGroup(baseUrl, payload) {\n  var serve = new _reactUtils.FHIRServiceClass(baseUrl, _constants.groupResourceType);\n  return serve.update(payload);\n};\n\nexports.postPutGroup = postPutGroup;\n\nfunction getOrCreateList(_x, _x2) {\n  return _getOrCreateList.apply(this, arguments);\n}\n\nfunction _getOrCreateList() {\n  _getOrCreateList = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2(baseUrl, listId) {\n    var serve;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            serve = new _reactUtils.FHIRServiceClass(baseUrl, _constants.listResourceType);\n            return _context2.abrupt(\"return\", serve.read(listId)[\"catch\"](function (err) {\n              if (err.statusCode === 404) {\n                var listResource = createSupplyManagementList(listId);\n                return serve.update(listResource);\n              }\n\n              throw err;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getOrCreateList.apply(this, arguments);\n}\n\nvar updateListReferencesFactory = function updateListReferencesFactory(baseUrl, listId) {\n  return function () {\n    var _ref2 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(group, edited) {\n      var commoditiesListResource, payload, serve;\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!edited) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.next = 4;\n              return getOrCreateList(baseUrl, listId);\n\n            case 4:\n              commoditiesListResource = _context.sent;\n              payload = (0, _lodash.cloneDeep)(commoditiesListResource);\n\n              if (payload.entry) {\n                payload.entry.push({\n                  item: {\n                    reference: \"\".concat(_constants.groupResourceType, \"/\").concat(group.id)\n                  }\n                });\n              }\n\n              serve = new _reactUtils.FHIRServiceClass(baseUrl, _constants.listResourceType);\n              return _context.abrupt(\"return\", serve.update(payload));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nexports.updateListReferencesFactory = updateListReferencesFactory;\n\nfunction createSupplyManagementList(id) {\n  return {\n    resourceType: _constants.listResourceType,\n    id: id,\n    identifier: [{\n      use: _reactUtils.IdentifierUseCodes.OFFICIAL,\n      value: id\n    }],\n    status: 'current',\n    mode: 'working',\n    title: 'Supply Chain commodities',\n    code: {\n      coding: [{\n        system: 'http://ona.io',\n        code: 'supply-chain',\n        display: 'Supply Chain Commodity'\n      }],\n      text: 'Supply Chain Commodity'\n    },\n    entry: []\n  };\n}","map":null,"metadata":{},"sourceType":"script"}