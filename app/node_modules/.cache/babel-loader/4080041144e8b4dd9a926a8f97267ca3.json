{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logout = exports.defaultErrorCallback = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _serverService = require(\"@opensrp/server-service\");\n\nvar defaultErrorCallback = function defaultErrorCallback() {\n  return;\n};\n\nexports.defaultErrorCallback = defaultErrorCallback;\n\nvar logout = function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2(payload, keycloakLogoutUri, redirectUri, opensrpLogoutUri, idTokenHint) {\n    var filterParams, fullKeycloakLogoutUri, opensrpOptionalLogout;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            filterParams = {};\n\n            if (idTokenHint) {\n              filterParams = {\n                id_token_hint: idTokenHint,\n                post_logout_redirect_uri: redirectUri\n              };\n            }\n\n            fullKeycloakLogoutUri = _serverService.OpenSRPService.getURL(keycloakLogoutUri, filterParams);\n\n            opensrpOptionalLogout = function () {\n              var _ref2 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n                return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (opensrpLogoutUri) {\n                          _context.next = 2;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 2:\n                        _context.next = 4;\n                        return (0, _serverService.customFetch)(opensrpLogoutUri, payload);\n\n                      case 4:\n                        return _context.abrupt(\"return\", _context.sent);\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function opensrpOptionalLogout() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            opensrpOptionalLogout().then(function () {\n              window.location.href = fullKeycloakLogoutUri;\n            })[\"catch\"](function (error) {\n              throw error;\n            });\n            return _context2.abrupt(\"return\", null);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function logout(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.logout = logout;","map":null,"metadata":{},"sourceType":"script"}