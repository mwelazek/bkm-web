{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RootLocationWizard = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _antd = require(\"antd\");\n\nvar _reactHelmet = require(\"react-helmet\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _mls = require(\"../../mls\");\n\nvar _constants = require(\"../../constants\");\n\nvar _reactRouter = require(\"react-router\");\n\nvar _utils = require(\"../LocationForm/utils\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _notifications = require(\"@opensrp/notifications\");\n\nvar _rbac = require(\"@opensrp/rbac\");\n\nvar _i18n = require(\"@opensrp/i18n\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar Text = _antd.Typography.Text;\n\nvar RootLocationWizard = function RootLocationWizard(props) {\n  var rootLocationId = props.rootLocationId,\n      fhirBaseUrl = props.fhirBaseUrl;\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useQuery = (0, _reactQuery.useQuery)([_constants.locationResourceType], function () {\n    return (0, _reactUtils.loadAllResources)(fhirBaseUrl, _constants.locationResourceType, {\n      _summary: 'count'\n    });\n  }, {\n    select: function select(res) {\n      return res.total;\n    }\n  }),\n      LocationCount = _useQuery.data,\n      error = _useQuery.error,\n      isLoading = _useQuery.isLoading;\n\n  var pageTitle = t('Location Unit Management');\n  return _react[\"default\"].createElement(\"section\", {\n    className: \"content-section\"\n  }, _react[\"default\"].createElement(_reactHelmet.Helmet, null, _react[\"default\"].createElement(\"title\", null, pageTitle)), _react[\"default\"].createElement(_reactUtils.PageHeader, {\n    title: pageTitle\n  }), _react[\"default\"].createElement(_antd.Row, {\n    className: \"list-view\"\n  }, _react[\"default\"].createElement(_antd.Col, {\n    className: \"main-content\"\n  }, _react[\"default\"].createElement(_antd.Card, {\n    title: t('Root location was not found'),\n    style: {\n      minHeight: '60vh'\n    }\n  }, _react[\"default\"].createElement(\"p\", null, t(\"Root location with id: {{rootLocationId}} was not found on the server.\", {\n    rootLocationId: rootLocationId\n  })), _react[\"default\"].createElement(CardBodyContent, {\n    fetching: isLoading,\n    locationNum: LocationCount,\n    fhirBaseUrl: fhirBaseUrl,\n    rootLocationId: rootLocationId,\n    error: error\n  })))));\n};\n\nexports.RootLocationWizard = RootLocationWizard;\n\nvar CardBodyContent = function CardBodyContent(_ref) {\n  var fetching = _ref.fetching,\n      locationNum = _ref.locationNum,\n      fhirBaseUrl = _ref.fhirBaseUrl,\n      rootLocationId = _ref.rootLocationId,\n      error = _ref.error;\n\n  var _useTranslation2 = (0, _mls.useTranslation)(),\n      t = _useTranslation2.t;\n\n  var createRootConfirmProps = {\n    fhirBaseUrl: fhirBaseUrl,\n    rootLocationId: rootLocationId\n  };\n\n  if (fetching) {\n    return _react[\"default\"].createElement(_i18n.Trans, {\n      i18nKey: \"LookingForUploadedLocations\",\n      t: t\n    }, _react[\"default\"].createElement(_antd.Spin, {\n      size: \"small\"\n    }), \" Looking for uploaded locations on the server.\");\n  } else if (error || locationNum === undefined) {\n    return _react[\"default\"].createElement(_antd.Space, {\n      direction: \"vertical\"\n    }, _react[\"default\"].createElement(_antd.Alert, {\n      type: \"error\",\n      message: t('Unable to check if the server has any locations.')\n    }), _react[\"default\"].createElement(CreateRootConfirm, createRootConfirmProps));\n  } else if (locationNum === 0) {\n    return _react[\"default\"].createElement(_antd.Space, {\n      direction: \"vertical\"\n    }, _react[\"default\"].createElement(Text, null, t('No locations have been uploaded yet.')), _react[\"default\"].createElement(CreateRootConfirm, createRootConfirmProps));\n  } else {\n    return _react[\"default\"].createElement(_antd.Space, {\n      direction: \"vertical\"\n    }, _react[\"default\"].createElement(_i18n.Trans, {\n      i18nKey: 'locationsOnServer',\n      t: t,\n      locationNum: locationNum\n    }, _react[\"default\"].createElement(Text, null, \"There exists \", {\n      locationNum: locationNum\n    }, \" locations on the server.\"), _react[\"default\"].createElement(Text, null, \" One of these could be the intended but wrongly configured, root location. \"), _react[\"default\"].createElement(Text, null, \" If you are not sure, kindly reach out to the web administrator for help.\")), _react[\"default\"].createElement(CreateRootConfirm, createRootConfirmProps));\n  }\n};\n\nvar CreateRootConfirm = function CreateRootConfirm(props) {\n  var fhirBaseUrl = props.fhirBaseUrl,\n      rootLocationId = props.rootLocationId;\n  var history = (0, _reactRouter.useHistory)();\n\n  var _useTranslation3 = (0, _mls.useTranslation)(),\n      t = _useTranslation3.t;\n\n  var onOk = function onOk() {\n    return history.push(_constants.URL_LOCATION_UNIT);\n  };\n\n  var rootLocationPayload = _objectSpread(_objectSpread({}, rootLocationTemplate), {}, {\n    id: rootLocationId,\n    identifier: [{\n      use: 'official',\n      value: rootLocationId\n    }]\n  });\n\n  return _react[\"default\"].createElement(_rbac.RbacCheck, {\n    permissions: ['Location.create'],\n    fallback: _react[\"default\"].createElement(Text, {\n      type: \"warning\"\n    }, \"Missing required permissions to create locations\")\n  }, _react[\"default\"].createElement(_antd.Popconfirm, {\n    title: t(\"This action will create a new location with id {{rootLocationId}}. The web application will then use the created location as the root location.\", {\n      rootLocationId: rootLocationId\n    }),\n    okText: t('Proceed'),\n    cancelText: t('Cancel'),\n    onConfirm: (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (0, _utils.postPutLocationUnit)(rootLocationPayload, fhirBaseUrl).then(function () {\n                (0, _notifications.sendSuccessNotification)(t('Root location uploaded to the server.'));\n                onOk();\n              })[\"catch\"](function () {\n                (0, _notifications.sendErrorNotification)(t('Could not upload the root location at this time, please try again later.'));\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))\n  }, _react[\"default\"].createElement(_antd.Button, {\n    type: \"primary\"\n  }, t('Create root location.'))));\n};\n\nvar rootLocationTemplate = {\n  resourceType: 'Location',\n  status: 'active',\n  name: 'Root FHIR Location',\n  alias: ['Root Location'],\n  description: 'This is the Root Location that all other locations are part of. Any locations that are directly part of this should be displayed as the root location.',\n  physicalType: {\n    coding: [{\n      system: 'http://terminology.hl7.org/CodeSystem/location-physical-type',\n      code: 'jdn',\n      display: 'Jurisdiction'\n    }]\n  }\n};","map":null,"metadata":{},"sourceType":"script"}