{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getConfig = exports.getAllConfigs = exports.PractToOrgAssignmentStrategy = void 0;\nexports.setAllConfigs = setAllConfigs;\nexports.setConfig = setConfig;\nexports.useGlobalConfigs = exports.supportedRbacStrategies = exports.supportedProjectCode = exports.supportedLanguageCodes = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _reactHooksGlobalState = require(\"react-hooks-global-state\");\n\nvar _constants = require(\"../constants\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar supportedLanguageCodes = ['en', 'sw', 'fr', 'ar', 'th', 'vi'];\nexports.supportedLanguageCodes = supportedLanguageCodes;\nvar supportedProjectCode = ['eusm', 'core', 'echis'];\nexports.supportedProjectCode = supportedProjectCode;\nvar supportedRbacStrategies = ['keycloak'];\nexports.supportedRbacStrategies = supportedRbacStrategies;\nvar PractToOrgAssignmentStrategy;\nexports.PractToOrgAssignmentStrategy = PractToOrgAssignmentStrategy;\n\n(function (PractToOrgAssignmentStrategy) {\n  PractToOrgAssignmentStrategy[\"ONE_TO_ONE\"] = \"ONE_TO_ONE\";\n  PractToOrgAssignmentStrategy[\"ONE_TO_MANY\"] = \"ONE_TO_MANY\";\n})(PractToOrgAssignmentStrategy || (exports.PractToOrgAssignmentStrategy = PractToOrgAssignmentStrategy = {}));\n\nvar defaultConfigs = {\n  languageCode: 'en',\n  appLoginURL: undefined,\n  keycloakBaseURL: undefined,\n  opensrpBaseURL: undefined,\n  fhirBaseURL: undefined,\n  tablespref: undefined,\n  defaultTablesPageSize: 5,\n  projectCode: 'core',\n  rbacStrategy: 'keycloak',\n  practToOrgAssignmentStrategy: PractToOrgAssignmentStrategy.ONE_TO_MANY\n};\nvar localstorage = localStorage.getItem(_constants.USER_PREFERENCE_KEY) ? JSON.parse(localStorage.getItem(_constants.USER_PREFERENCE_KEY)) : {};\n\nvar _createGlobalState = (0, _reactHooksGlobalState.createGlobalState)(_objectSpread(_objectSpread({}, defaultConfigs), localstorage)),\n    useGlobalState = _createGlobalState.useGlobalState,\n    getGlobalState = _createGlobalState.getGlobalState,\n    setGlobalState = _createGlobalState.setGlobalState,\n    unexposedGettersSetters = (0, _objectWithoutProperties2[\"default\"])(_createGlobalState, [\"useGlobalState\", \"getGlobalState\", \"setGlobalState\"]);\n\nvar useGlobalConfigs = useGlobalState;\nexports.useGlobalConfigs = useGlobalConfigs;\nvar getConfig = getGlobalState;\nexports.getConfig = getConfig;\n\nfunction setConfig(key, value) {\n  var newstate = {};\n  newstate[key] = value;\n  saveToLocal(newstate);\n  setGlobalState(key, value);\n}\n\nvar otherGettersSetters = unexposedGettersSetters;\nvar getAllConfigs = otherGettersSetters.getState;\nexports.getAllConfigs = getAllConfigs;\n\nfunction setAllConfigs(value) {\n  saveToLocal(value);\n  otherGettersSetters.setState(value);\n}\n\nfunction saveToLocal(config) {\n  localstorage = {\n    tablespref: config.tablespref\n  };\n  localStorage.setItem(_constants.USER_PREFERENCE_KEY, JSON.stringify(localstorage));\n}","map":null,"metadata":{},"sourceType":"script"}