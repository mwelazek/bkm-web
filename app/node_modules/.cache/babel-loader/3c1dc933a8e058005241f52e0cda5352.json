{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomTreeSelect = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"../../../helpers/utils\");\n\nvar _antd = require(\"antd\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _excluded = [\"value\", \"fullDataCallback\", \"disabledTreeNodesCallback\", \"tree\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar CustomTreeSelect = function CustomTreeSelect(props) {\n  var _tree$children;\n\n  var value = props.value,\n      fullDataCallback = props.fullDataCallback,\n      disabledTreeNodesCallback = props.disabledTreeNodesCallback,\n      tree = props.tree,\n      restProps = (0, _objectWithoutProperties2[\"default\"])(props, _excluded);\n  (0, _react.useEffect)(function () {\n    var node = tree.first(function (node) {\n      return node.model.nodeId === value;\n    });\n\n    if (node) {\n      fullDataCallback === null || fullDataCallback === void 0 ? void 0 : fullDataCallback(node);\n    } else {\n      fullDataCallback === null || fullDataCallback === void 0 ? void 0 : fullDataCallback(tree);\n    }\n  }, [(0, _utils.serializeTree)(tree), fullDataCallback, value]);\n  var userDefinedRoots = (_tree$children = tree.children) !== null && _tree$children !== void 0 ? _tree$children : [];\n  var selectOptions = (0, _utils2.treeToOptions)(userDefinedRoots, disabledTreeNodesCallback);\n\n  var treeSelectProps = _objectSpread(_objectSpread({}, restProps), {}, {\n    treeData: selectOptions,\n    value: value\n  });\n\n  return _react[\"default\"].createElement(_antd.TreeSelect, treeSelectProps);\n};\n\nexports.CustomTreeSelect = CustomTreeSelect;","map":null,"metadata":{},"sourceType":"script"}