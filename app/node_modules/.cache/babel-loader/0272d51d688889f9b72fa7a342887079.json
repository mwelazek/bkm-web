{"ast":null,"code":"import * as React from 'react';\nexport default class CustomTag extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ctrls = {};\n  }\n\n  componentDidMount() {\n    if (this.props.focus) {\n      if (this.ctrls.tag) {\n        this.ctrls.tag.focus();\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.focus) {\n      if (this.props.tagName !== prevProps.tagName) {\n        if (this.ctrls.tag) {\n          this.ctrls.tag.focus();\n        }\n      }\n    }\n  }\n\n  createMarkup(markup) {\n    return {\n      __html: markup\n    };\n  }\n\n  render() {\n    const {\n      id,\n      tabIndex,\n      tagName,\n      className,\n      focus\n    } = this.props;\n    const CustomTagName = tagName;\n    return (\n      /* eslint-disable  @typescript-eslint/ban-ts-ignore */\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/28892\n      React.createElement(CustomTagName // @ts-ignore https://github.com/Microsoft/TypeScript/issues/28892\n      , {\n        // @ts-ignore https://github.com/Microsoft/TypeScript/issues/28892\n        className: className,\n        id: id,\n        tabIndex: focus ? 0 : tabIndex,\n        ref: tag => this.ctrls.tag = tag,\n        dangerouslySetInnerHTML: this.createMarkup(this.props.children)\n      })\n    );\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}