{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport LayoutUtils from '../layout';\nexport default function layoutChange(COMPONENT) {\n  class LayoutChangeComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.processResizeEvent = () => {\n        this.updateState();\n      };\n\n      this.processLayoutChangeEvent = () => {\n        this.updateState();\n      };\n\n      this.processOrientationEvent = () => {\n        this.updateState();\n      };\n\n      this.updateState = () => {\n        this.setState({\n          nullToXs: LayoutUtils.isNullToXs(),\n          xsToSm: LayoutUtils.isXsToSm(),\n          smToMd: LayoutUtils.isSmToMd(),\n          mdToLg: LayoutUtils.isMdToLg(),\n          lgToXl: LayoutUtils.isLgToXl()\n        });\n      };\n\n      this.state = {\n        nullToXs: LayoutUtils.isNullToXs(),\n        xsToSm: LayoutUtils.isXsToSm(),\n        smToMd: LayoutUtils.isSmToMd(),\n        mdToLg: LayoutUtils.isMdToLg(),\n        lgToXl: LayoutUtils.isLgToXl()\n      };\n    }\n\n    componentDidMount() {\n      window.addEventListener('layoutchange', this.processLayoutChangeEvent);\n      window.addEventListener('resize', this.processResizeEvent);\n      window.addEventListener('orientationchange', this.processOrientationEvent);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('layoutchange', this.processLayoutChangeEvent);\n      window.removeEventListener('resize', this.processResizeEvent);\n      window.removeEventListener('orientationchange', this.processOrientationEvent);\n    }\n\n    render() {\n      const _a = this.props,\n            {\n        forwardedRef\n      } = _a,\n            originalProps = __rest(_a, [\"forwardedRef\"]);\n\n      return React.createElement(COMPONENT, Object.assign({\n        ref: forwardedRef\n      }, originalProps, {\n        nullToXs: this.state.nullToXs,\n        xsToSm: this.state.xsToSm,\n        smToMd: this.state.smToMd,\n        mdToLg: this.state.mdToLg,\n        lgToXl: this.state.lgToXl\n      }));\n    }\n\n  }\n\n  const RefForwardingFactory = (props, ref) => React.createElement(LayoutChangeComponent, Object.assign({}, props, {\n    forwardedRef: ref\n  }));\n\n  return React.forwardRef(RefForwardingFactory);\n}","map":null,"metadata":{},"sourceType":"module"}