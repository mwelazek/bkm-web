{"ast":null,"code":"import raf from \"rc-util/es/raf\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport Tooltip from '../tooltip';\nconst SliderTooltip = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    open\n  } = props;\n  const innerRef = useRef(null);\n  const rafRef = useRef(null);\n\n  function cancelKeepAlign() {\n    raf.cancel(rafRef.current);\n    rafRef.current = null;\n  }\n\n  function keepAlign() {\n    rafRef.current = raf(() => {\n      var _a;\n\n      (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.forceAlign();\n      rafRef.current = null;\n    });\n  }\n\n  React.useEffect(() => {\n    if (open) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [open, props.title]);\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    ref: composeRef(innerRef, ref)\n  }, props));\n});\nexport default SliderTooltip;","map":null,"metadata":{},"sourceType":"module"}