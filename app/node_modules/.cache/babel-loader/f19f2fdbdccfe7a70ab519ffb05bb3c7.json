{"ast":null,"code":"import classNames from 'classnames';\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport React, { useContext, useRef } from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport { cloneElement } from '../reactNode';\nimport useStyle from './style';\nimport useWave from './useWave';\n\nconst Wave = props => {\n  const {\n    children,\n    disabled\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const containerRef = useRef(null); // ============================== Style ===============================\n\n  const prefixCls = getPrefixCls('wave');\n  const [, hashId] = useStyle(prefixCls); // =============================== Wave ===============================\n\n  const showWave = useWave(containerRef, classNames(prefixCls, hashId)); // ============================== Effect ==============================\n\n  React.useEffect(() => {\n    const node = containerRef.current;\n\n    if (!node || node.nodeType !== 1 || disabled) {\n      return;\n    } // Click handler\n\n\n    const onClick = e => {\n      // Fix radio button click twice\n      if (e.target.tagName === 'INPUT' || !isVisible(e.target) || // No need wave\n      !node.getAttribute || node.getAttribute('disabled') || node.disabled || node.className.includes('disabled') || node.className.includes('-leave')) {\n        return;\n      }\n\n      showWave();\n    }; // Bind events\n\n\n    node.addEventListener('click', onClick, true);\n    return () => {\n      node.removeEventListener('click', onClick, true);\n    };\n  }, [disabled]); // ============================== Render ==============================\n\n  if (! /*#__PURE__*/React.isValidElement(children)) {\n    return children !== null && children !== void 0 ? children : null;\n  }\n\n  const ref = supportRef(children) ? composeRef(children.ref, containerRef) : containerRef;\n  return cloneElement(children, {\n    ref\n  });\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Wave.displayName = 'Wave';\n}\n\nexport default Wave;","map":null,"metadata":{},"sourceType":"module"}