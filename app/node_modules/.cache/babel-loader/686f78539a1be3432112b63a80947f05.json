{"ast":null,"code":"var _jsxFileName = \"/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/routes/index.tsx\";\nimport { DashboardOutlined, IdcardOutlined } from '@ant-design/icons';\nimport { URL_USER, URL_LOCATION_UNIT, URL_TEAMS, URL_TEAM_ASSIGNMENT, URL_USER_GROUPS, URL_USER_ROLES, URL_FHIR_CARE_TEAM } from '../constants';\nimport { QUEST_VIEW_URL } from '@opensrp/fhir-views';\nimport { LIST_HEALTHCARE_URL } from '@opensrp/fhir-healthcare-service';\nimport { LIST_COMMODITY_URL, LIST_GROUP_URL } from '@opensrp/fhir-group-management';\nimport { LIST_PATIENTS_URL } from '@opensrp/fhir-client';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** Gets Routes For Application\n *\n * @param roles User's roles\n * @returns {Route[]} returns generated routes\n */\nexport function getRoutes(roles, t, userRole) {\n  const routes = [{\n    otherProps: {\n      icon: /*#__PURE__*/_jsxDEV(DashboardOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this)\n    },\n    title: t('Administration'),\n    key: 'admin',\n    enabled: true,\n    permissions: [],\n    children: [{\n      title: t('User Management'),\n      key: 'user-management',\n      isHomePageLink: true,\n      url: URL_USER,\n      permissions: [],\n      enabled: true,\n      children: [{\n        title: t('Users'),\n        key: 'users',\n        url: URL_USER,\n        permissions: []\n      }, {\n        title: t('User Groups'),\n        key: 'user-groups',\n        url: URL_USER_GROUPS,\n        permissions: []\n      }, {\n        title: t('User Roles'),\n        key: 'user-roles',\n        url: URL_USER_ROLES,\n        permissions: []\n      }]\n    }, {\n      title: t('Location Management'),\n      key: 'location-management',\n      isHomePageLink: true,\n      url: URL_LOCATION_UNIT,\n      permissions: [],\n      enabled: true,\n      children: [{\n        title: t('Location Units'),\n        url: URL_LOCATION_UNIT,\n        key: 'location-unit',\n        permissions: []\n      }]\n    }, {\n      title: t('Care Teams Management'),\n      key: 'fhir-care-team',\n      isHomePageLink: true,\n      permissions: [],\n      enabled: true,\n      url: URL_FHIR_CARE_TEAM\n    }, {\n      title: t('Team Management'),\n      key: 'team-management',\n      isHomePageLink: true,\n      permissions: [],\n      url: URL_TEAMS,\n      enabled: true,\n      children: [{\n        title: t('Teams'),\n        url: URL_TEAMS,\n        key: 'TEAMS',\n        permissions: []\n      }, {\n        permissions: [],\n        title: t('Team Assignment'),\n        url: URL_TEAM_ASSIGNMENT,\n        key: 'team-assignment',\n        enabled: true\n      }]\n    }, {\n      title: t('Group Management'),\n      key: 'fhir-group',\n      url: LIST_GROUP_URL,\n      isHomePageLink: true,\n      permissions: [],\n      enabled: true\n    }, {\n      title: t('Commodity Management'),\n      key: 'fhir-commodity',\n      isHomePageLink: true,\n      url: LIST_COMMODITY_URL,\n      permissions: [],\n      enabled: true\n    }, {\n      title: t('Questionnaire Management'),\n      key: 'fhir-quest',\n      permissions: [],\n      enabled: true,\n      url: QUEST_VIEW_URL,\n      isHomePageLink: true\n    }, {\n      title: t('Healthcare Services'),\n      key: 'healthcare',\n      isHomePageLink: true,\n      url: LIST_HEALTHCARE_URL,\n      permissions: [],\n      enabled: true\n    }]\n  }, {\n    otherProps: {\n      icon: /*#__PURE__*/_jsxDEV(IdcardOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 27\n      }, this)\n    },\n    title: t('Patients'),\n    key: 'fhir-patients',\n    permissions: ['Patient.read'],\n    enabled: true,\n    url: LIST_PATIENTS_URL,\n    isHomePageLink: true\n  }];\n  return filterFalsyRoutes(routes, userRole);\n}\n/** Removes the disabled Routes from\n *\n * @param routes all routes\n * @returns {Route[]} returns only enabled routes\n */\n\nexport function filterFalsyRoutes(routes, userRole) {\n  return routes.filter(e => !e.hasOwnProperty('enabled') || e.hasOwnProperty('enabled') && e.enabled === true).map(e => {\n    return e.children ? { ...e,\n      children: filterFalsyRoutes(e.children, userRole)\n    } : e;\n  });\n}\nexport const getRoutesForHomepage = (roles, t, userRole) => {\n  const routes = getRoutes(roles, t, userRole);\n  const homePageRoutes = [];\n\n  function extractHomePAgeLink(routes) {\n    for (const route of routes) {\n      if (route.isHomePageLink) {\n        homePageRoutes.push(route);\n      }\n\n      if (route.children) {\n        extractHomePAgeLink(route.children);\n      }\n    }\n  }\n\n  extractHomePAgeLink(routes);\n  return homePageRoutes;\n};","map":{"version":3,"sources":["/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/routes/index.tsx"],"names":["DashboardOutlined","IdcardOutlined","URL_USER","URL_LOCATION_UNIT","URL_TEAMS","URL_TEAM_ASSIGNMENT","URL_USER_GROUPS","URL_USER_ROLES","URL_FHIR_CARE_TEAM","QUEST_VIEW_URL","LIST_HEALTHCARE_URL","LIST_COMMODITY_URL","LIST_GROUP_URL","LIST_PATIENTS_URL","React","getRoutes","roles","t","userRole","routes","otherProps","icon","title","key","enabled","permissions","children","isHomePageLink","url","filterFalsyRoutes","filter","e","hasOwnProperty","map","getRoutesForHomepage","homePageRoutes","extractHomePAgeLink","route","push"],"mappings":"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","sourcesContent":["import { DashboardOutlined, IdcardOutlined } from '@ant-design/icons';\nimport {\n  ENABLE_HEALTHCARE_SERVICES,\n  ENABLE_FHIR_GROUP,\n  ENABLE_PATIENTS_MODULE,\n  ENABLE_FHIR_CARE_TEAM,\n  ENABLE_QUEST,\n  ENABLE_TEAMS_ASSIGNMENT_MODULE,\n  ENABLE_FHIR_COMMODITY,\n} from '../configs/env';\nimport {\n  URL_USER,\n  URL_LOCATION_UNIT,\n  URL_TEAMS,\n  URL_TEAM_ASSIGNMENT,\n  URL_USER_GROUPS,\n  URL_USER_ROLES,\n  URL_FHIR_CARE_TEAM,\n} from '../constants';\nimport { QUEST_VIEW_URL } from '@opensrp/fhir-views';\nimport type { TFunction } from '@opensrp/i18n';\nimport { LIST_HEALTHCARE_URL } from '@opensrp/fhir-healthcare-service';\nimport { LIST_COMMODITY_URL, LIST_GROUP_URL } from '@opensrp/fhir-group-management';\nimport { LIST_PATIENTS_URL } from '@opensrp/fhir-client';\nimport {\n  COMPOSITE_ENABLE_LOCATIONS_MANAGEMENT,\n  COMPOSITE_ENABLE_TEAM_MANAGEMENT,\n  COMPOSITE_ENABLE_USER_MANAGEMENT,\n} from '../configs/settings';\nimport React from 'react';\nimport { UserRole } from '@opensrp/rbac/dist/types/roleDefinition';\n\n/** Interface for menu items */\nexport interface Route {\n  key: string;\n  enabled?: boolean;\n  url?: string;\n  title: string;\n  isHomePageLink?: boolean;\n  otherProps?: {\n    icon?: string | JSX.Element;\n  };\n  permissions?: string[];\n  children?: Route[];\n}\n\nexport interface GetRoutes {\n  (roles: string[], t: TFunction, userRole: UserRole): Route[];\n}\n\n/** Gets Routes For Application\n *\n * @param roles User's roles\n * @returns {Route[]} returns generated routes\n */\nexport function getRoutes(roles: string[], t: TFunction, userRole: UserRole): Route[] {\n  const routes: Route[] = [\n    {\n      otherProps: { icon: <DashboardOutlined /> },\n      title: t('Administration'),\n      key: 'admin',\n      enabled: true,\n      permissions: [],\n      children: [\n        {\n          title: t('User Management'),\n          key: 'user-management',\n          isHomePageLink: true,\n          url: URL_USER,\n          permissions: [],\n          enabled: true,\n          children: [\n            { title: t('Users'), key: 'users', url: URL_USER, permissions: [] },\n            {\n              title: t('User Groups'),\n              key: 'user-groups',\n              url: URL_USER_GROUPS,\n              permissions: [],\n            },\n            {\n              title: t('User Roles'),\n              key: 'user-roles',\n              url: URL_USER_ROLES,\n              permissions: [],\n            },\n          ],\n        },\n        {\n          title: t('Location Management'),\n          key: 'location-management',\n          isHomePageLink: true,\n          url: URL_LOCATION_UNIT,\n          permissions: [],\n          enabled: true,\n          children: [\n            {\n              title: t('Location Units'),\n              url: URL_LOCATION_UNIT,\n              key: 'location-unit',\n              permissions: [],\n            },\n          ],\n        },\n        {\n          title: t('Care Teams Management'),\n          key: 'fhir-care-team',\n          isHomePageLink: true,\n          permissions: [],\n          enabled: true,\n          url: URL_FHIR_CARE_TEAM,\n        },\n        {\n          title: t('Team Management'),\n          key: 'team-management',\n          isHomePageLink: true,\n          permissions: [],\n          url: URL_TEAMS,\n          enabled: true,\n          children: [\n            { title: t('Teams'), url: URL_TEAMS, key: 'TEAMS', permissions: [] },\n            {\n              permissions: [],\n              title: t('Team Assignment'),\n              url: URL_TEAM_ASSIGNMENT,\n              key: 'team-assignment',\n              enabled: true,\n            },\n          ],\n        },\n        {\n          title: t('Group Management'),\n          key: 'fhir-group',\n          url: LIST_GROUP_URL,\n          isHomePageLink: true,\n          permissions: [],\n          enabled: true,\n        },\n        {\n          title: t('Commodity Management'),\n          key: 'fhir-commodity',\n          isHomePageLink: true,\n          url: LIST_COMMODITY_URL,\n          permissions: [],\n          enabled: true,\n        },\n        {\n          title: t('Questionnaire Management'),\n          key: 'fhir-quest',\n          permissions: [],\n          enabled: true,\n          url: QUEST_VIEW_URL,\n          isHomePageLink: true,\n        },\n        {\n          title: t('Healthcare Services'),\n          key: 'healthcare',\n          isHomePageLink: true,\n          url: LIST_HEALTHCARE_URL,\n          permissions: [],\n          enabled: true,\n        },\n      ],\n    },\n    {\n      otherProps: { icon: <IdcardOutlined /> },\n      title: t('Patients'),\n      key: 'fhir-patients',\n      permissions: ['Patient.read'],\n      enabled: true,\n      url: LIST_PATIENTS_URL,\n      isHomePageLink: true,\n    },\n  ];\n\n  return filterFalsyRoutes(routes, userRole);\n}\n\n/** Removes the disabled Routes from\n *\n * @param routes all routes\n * @returns {Route[]} returns only enabled routes\n */\nexport function filterFalsyRoutes(routes: Route[], userRole: UserRole): Route[] {\n  return routes\n    .filter(\n      (e) =>\n        (!e.hasOwnProperty('enabled') || (e.hasOwnProperty('enabled') && e.enabled === true))\n    )\n    .map((e) => {\n      return e.children ? { ...e, children: filterFalsyRoutes(e.children, userRole) } : e;\n    });\n}\n\nexport const getRoutesForHomepage: GetRoutes = (roles, t, userRole) => {\n  const routes = getRoutes(roles, t, userRole);\n  const homePageRoutes: Route[] = [];\n\n  function extractHomePAgeLink(routes: Route[]) {\n    for (const route of routes) {\n      if (route.isHomePageLink) {\n        homePageRoutes.push(route);\n      }\n      if (route.children) {\n        extractHomePAgeLink(route.children);\n      }\n    }\n  }\n\n  extractHomePAgeLink(routes);\n  return homePageRoutes;\n};\n"]},"metadata":{},"sourceType":"module"}