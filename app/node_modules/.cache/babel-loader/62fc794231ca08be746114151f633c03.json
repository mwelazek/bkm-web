{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.submitForm = exports.defaultCredentialsProps = exports.cancelUserHandler = exports.UserCredentials = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _antd = require(\"antd\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _reactRouter = require(\"react-router\");\n\nvar _reduxReducerRegistry = _interopRequireDefault(require(\"@onaio/redux-reducer-registry\"));\n\nvar _keycloakService = require(\"@opensrp/keycloak-service\");\n\nvar _connectedReducerRegistry = require(\"@onaio/connected-reducer-registry\");\n\nrequire(\"../../index.css\");\n\nvar _constants = require(\"../../constants\");\n\nvar _mls = require(\"../../mls\");\n\nvar _user = require(\"../../ducks/user\");\n\nvar _notifications = require(\"@opensrp/notifications\");\n\n_reduxReducerRegistry[\"default\"].register(_user.reducerName, _user.reducer);\n\nvar cancelUserHandler = function cancelUserHandler(genericHistory) {\n  genericHistory.push(_constants.URL_USER);\n};\n\nexports.cancelUserHandler = cancelUserHandler;\nvar defaultCredentialsProps = {\n  fetchKeycloakUsersCreator: _user.fetchKeycloakUsers,\n  keycloakUser: null,\n  serviceClass: _keycloakService.KeycloakService,\n  cancelUserHandler: cancelUserHandler\n};\nexports.defaultCredentialsProps = defaultCredentialsProps;\n\nvar submitForm = function submitForm(values, userId, serviceClass, keycloakBaseURL, t) {\n  var serve = new serviceClass(\"\".concat(_constants.KEYCLOAK_URL_USERS, \"/\").concat(userId).concat(_constants.KEYCLOAK_URL_RESET_PASSWORD), keycloakBaseURL);\n  var password = values.password;\n  serve.update({\n    temporary: false,\n    type: 'password',\n    value: password\n  }).then(function () {\n    (0, _notifications.sendSuccessNotification)(t('Credentials updated successfully'));\n\n    _connectedReducerRegistry.history.push(_constants.URL_USER);\n  })[\"catch\"](function (e) {\n    (0, _notifications.sendErrorNotification)(e.description);\n  });\n};\n\nexports.submitForm = submitForm;\n\nvar UserCredentials = function UserCredentials(props) {\n  var serviceClass = props.serviceClass,\n      match = props.match,\n      keycloakBaseURL = props.keycloakBaseURL;\n  var userId = match.params[_constants.ROUTE_PARAM_USER_ID];\n  var username = match.params[_constants.ROUTE_PARAM_USERNAME];\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var layout = {\n    labelCol: {\n      xs: {\n        offset: 0,\n        span: 16\n      },\n      sm: {\n        offset: 2,\n        span: 10\n      },\n      md: {\n        offset: 0,\n        span: 12\n      },\n      lg: {\n        offset: 0,\n        span: 8\n      }\n    },\n    wrapperCol: {\n      xs: {\n        span: 24\n      },\n      sm: {\n        span: 14\n      },\n      md: {\n        span: 12\n      },\n      lg: {\n        span: 10\n      }\n    }\n  };\n  var tailLayout = {\n    wrapperCol: {\n      xs: {\n        offset: 0,\n        span: 16\n      },\n      sm: {\n        offset: 12,\n        span: 24\n      },\n      md: {\n        offset: 10,\n        span: 16\n      },\n      lg: {\n        offset: 8,\n        span: 14\n      }\n    }\n  };\n  var history = (0, _reactRouter.useHistory)();\n  var heading = \"\".concat(t('User Credentials'), \" | \").concat(username);\n  return _react[\"default\"].createElement(_antd.Row, {\n    className: \"content-section\"\n  }, _react[\"default\"].createElement(_reactUtils.PageHeader, {\n    title: heading\n  }), _react[\"default\"].createElement(_antd.Col, {\n    className: \"bg-white p-3\",\n    span: 24\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"form-container\"\n  }, _react[\"default\"].createElement(_antd.Form, (0, _extends2[\"default\"])({}, layout, {\n    onFinish: function onFinish(values) {\n      return submitForm(values, userId, serviceClass, keycloakBaseURL, t);\n    }\n  }), _react[\"default\"].createElement(_antd.Form.Item, {\n    name: \"password\",\n    label: t('Password'),\n    rules: [{\n      required: true,\n      message: t('Password is required')\n    }],\n    hasFeedback: true\n  }, _react[\"default\"].createElement(_antd.Input.Password, null)), _react[\"default\"].createElement(_antd.Form.Item, {\n    name: \"confirm\",\n    label: t('Confirm Password'),\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: t('Confirm Password is required')\n    }, function (_ref) {\n      var getFieldValue = _ref.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(t('The two passwords that you entered do not match!'));\n        }\n      };\n    }]\n  }, _react[\"default\"].createElement(_antd.Input.Password, null)), _react[\"default\"].createElement(_antd.Form.Item, tailLayout, _react[\"default\"].createElement(_antd.Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"reset-password\"\n  }, t('Set password')), _react[\"default\"].createElement(_antd.Button, {\n    onClick: function onClick() {\n      return props.cancelUserHandler(history);\n    },\n    className: \"cancel-user\"\n  }, t('Cancel')))))));\n};\n\nexports.UserCredentials = UserCredentials;\nUserCredentials.defaultProps = defaultCredentialsProps;","map":null,"metadata":{},"sourceType":"script"}