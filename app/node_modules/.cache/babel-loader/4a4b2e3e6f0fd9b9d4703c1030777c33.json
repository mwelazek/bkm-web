{"ast":null,"code":"var r = function (r, e) {\n  return r(e = {\n    exports: {}\n  }, e.exports), e.exports;\n}(function (r) {\n  /*!\n    Copyright (c) 2017 Jed Watson.\n    Licensed under the MIT License (MIT), see\n    http://jedwatson.github.io/classnames\n  */\n  !function () {\n    var e = {}.hasOwnProperty;\n\n    function n() {\n      for (var r = arguments, t = [], o = 0; o < arguments.length; o++) {\n        var s = r[o];\n\n        if (s) {\n          var a = typeof s;\n          if (\"string\" === a || \"number\" === a) t.push(s);else if (Array.isArray(s) && s.length) {\n            var i = n.apply(null, s);\n            i && t.push(i);\n          } else if (\"object\" === a) for (var p in s) e.call(s, p) && s[p] && t.push(p);\n        }\n      }\n\n      return t.join(\" \");\n    }\n\n    r.exports ? (n.default = n, r.exports = n) : window.classNames = n;\n  }();\n});\n\nexport { r as c };","map":null,"metadata":{},"sourceType":"module"}