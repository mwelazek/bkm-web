{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Collapse = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collapse).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"content\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      global.clearTimeout(_this.timeout);\n\n      if (!_this.container || !_this.content) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          isOpened = _this$props.isOpened,\n          checkTimeout = _this$props.checkTimeout;\n      var containerHeight = _this.container.clientHeight;\n      var contentHeight = _this.content.clientHeight;\n      var isFullyOpened = isOpened && contentHeight === containerHeight;\n      var isFullyClosed = !isOpened && containerHeight === 0;\n\n      if (isFullyOpened || isFullyClosed) {\n        _this.onRest({\n          isFullyOpened: isFullyOpened,\n          isFullyClosed: isFullyClosed,\n          isOpened: isOpened,\n          containerHeight: containerHeight,\n          contentHeight: contentHeight\n        });\n      } else {\n        _this.onWork({\n          isFullyOpened: isFullyOpened,\n          isFullyClosed: isFullyClosed,\n          isOpened: isOpened,\n          containerHeight: containerHeight,\n          contentHeight: contentHeight\n        });\n\n        _this.timeout = setTimeout(function () {\n          return _this.onResize();\n        }, checkTimeout);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRest\", function (_ref) {\n      var isFullyOpened = _ref.isFullyOpened,\n          isFullyClosed = _ref.isFullyClosed,\n          isOpened = _ref.isOpened,\n          containerHeight = _ref.containerHeight,\n          contentHeight = _ref.contentHeight;\n\n      if (!_this.container || !_this.content) {\n        return;\n      }\n\n      var hasOpened = isOpened && _this.container.style.height === \"\".concat(contentHeight, \"px\");\n      var hasClosed = !isOpened && _this.container.style.height === '0px';\n\n      if (hasOpened || hasClosed) {\n        _this.container.style.overflow = isOpened ? 'initial' : 'hidden';\n        _this.container.style.height = isOpened ? 'auto' : '0px';\n        var onRest = _this.props.onRest;\n\n        if (onRest) {\n          onRest({\n            isFullyOpened: isFullyOpened,\n            isFullyClosed: isFullyClosed,\n            isOpened: isOpened,\n            containerHeight: containerHeight,\n            contentHeight: contentHeight\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onWork\", function (_ref2) {\n      var isFullyOpened = _ref2.isFullyOpened,\n          isFullyClosed = _ref2.isFullyClosed,\n          isOpened = _ref2.isOpened,\n          containerHeight = _ref2.containerHeight,\n          contentHeight = _ref2.contentHeight;\n\n      if (!_this.container || !_this.content) {\n        return;\n      }\n\n      var isOpenining = isOpened && _this.container.style.height === \"\".concat(contentHeight, \"px\");\n      var isClosing = !isOpened && _this.container.style.height === '0px';\n\n      if (isOpenining || isClosing) {\n        // No need to do any work\n        return;\n      }\n\n      _this.container.style.overflow = 'hidden';\n      _this.container.style.height = isOpened ? \"\".concat(contentHeight, \"px\") : '0px';\n      var onWork = _this.props.onWork;\n\n      if (onWork) {\n        onWork({\n          isFullyOpened: isFullyOpened,\n          isFullyClosed: isFullyClosed,\n          isOpened: isOpened,\n          containerHeight: containerHeight,\n          contentHeight: contentHeight\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefContainer\", function (container) {\n      _this.container = container;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefContent\", function (content) {\n      _this.content = content;\n    });\n\n    if (props.initialStyle) {\n      _this.initialStyle = props.initialStyle;\n    } else {\n      _this.initialStyle = props.isOpened ? {\n        height: 'auto',\n        overflow: 'initial'\n      } : {\n        height: '0px',\n        overflow: 'hidden'\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onResize();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props2 = this.props,\n          theme = _this$props2.theme,\n          isOpened = _this$props2.isOpened,\n          children = _this$props2.children;\n      return children !== nextProps.children || isOpened !== nextProps.isOpened || Object.keys(theme).some(function (c) {\n        return theme[c] !== nextProps.theme[c];\n      });\n    }\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate() {\n      if (!this.container || !this.content) {\n        return null;\n      }\n\n      if (this.container.style.height === 'auto') {\n        var contentHeight = this.content.clientHeight;\n        this.container.style.height = \"\".concat(contentHeight, \"px\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onResize();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      global.clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          theme = _this$props3.theme,\n          children = _this$props3.children;\n      return _react[\"default\"].createElement(\"div\", {\n        ref: this.onRefContainer,\n        className: theme.collapse,\n        style: this.initialStyle\n      }, _react[\"default\"].createElement(\"div\", {\n        ref: this.onRefContent,\n        className: theme.content\n      }, children));\n    }\n  }]);\n\n  return Collapse;\n}(_react[\"default\"].Component);\n\nexports.Collapse = Collapse;\n\n_defineProperty(Collapse, \"defaultProps\", {\n  theme: {\n    collapse: 'ReactCollapse--collapse',\n    content: 'ReactCollapse--content'\n  },\n  initialStyle: undefined,\n  onRest: undefined,\n  onWork: undefined,\n  checkTimeout: 50\n});","map":null,"metadata":{},"sourceType":"script"}