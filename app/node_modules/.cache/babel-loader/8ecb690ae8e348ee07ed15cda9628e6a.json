{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewDetailsWrapper = exports.ViewDetails = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _userManagement = require(\"@opensrp/user-management\");\n\nvar _antd = require(\"antd\");\n\nvar _icons = require(\"@ant-design/icons\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _reactQuery = require(\"react-query\");\n\nvar _keycloakService = require(\"@opensrp/keycloak-service\");\n\nvar _constants = require(\"../../../constants\");\n\nvar _CreateEditUser = require(\"../../CreateEditUser\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _i18n = require(\"@opensrp/i18n\");\n\nvar _lodash = require(\"lodash\");\n\nvar ViewDetails = function ViewDetails(props) {\n  var _keycloakUserValues, _practitionerKeyValue, _ref;\n\n  var resourceId = props.resourceId,\n      fhirBaseUrl = props.fhirBaseUrl,\n      keycloakBaseUrl = props.keycloakBaseUrl;\n\n  var _useTranslation = (0, _i18n.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useQuery = (0, _reactQuery.useQuery)([_userManagement.KEYCLOAK_URL_USERS, resourceId], function () {\n    return new _keycloakService.KeycloakService(\"\".concat(_userManagement.KEYCLOAK_URL_USERS), keycloakBaseUrl).read(resourceId);\n  }),\n      user = _useQuery.data,\n      userIsLoading = _useQuery.isLoading,\n      userError = _useQuery.error;\n\n  var _useQuery2 = (0, _reactQuery.useQuery)([_constants.practitionerResourceType, resourceId], function () {\n    return new _reactUtils.FHIRServiceClass(fhirBaseUrl, _constants.practitionerResourceType).list({\n      identifier: resourceId\n    }).then(function (res) {\n      return (0, _reactUtils.getResourcesFromBundle)(res)[0];\n    });\n  }),\n      practitioner = _useQuery2.data,\n      practitionerIsLoading = _useQuery2.isLoading;\n\n  var _useQuery3 = (0, _reactQuery.useQuery)([_constants.groupResourceType, resourceId], function () {\n    return new _keycloakService.KeycloakService(\"\".concat(_userManagement.KEYCLOAK_URL_USERS, \"/\").concat(resourceId).concat(_userManagement.KEYCLOAK_URL_USER_GROUPS), keycloakBaseUrl).list();\n  }),\n      userGroup = _useQuery3.data,\n      userGroupIsLoading = _useQuery3.isLoading;\n\n  var _useQuery4 = (0, _reactQuery.useQuery)([_constants.careTeamResourceType, resourceId], function () {\n    var filters = {\n      'participant:Practitioner': practitioner === null || practitioner === void 0 ? void 0 : practitioner.id\n    };\n    return (0, _reactUtils.loadAllResources)(fhirBaseUrl, _constants.careTeamResourceType, filters).then(function (res) {\n      return (0, _reactUtils.getResourcesFromBundle)(res);\n    });\n  }, {\n    enabled: !!practitioner\n  }),\n      careTeams = _useQuery4.data,\n      careTeamsIsLoading = _useQuery4.isLoading;\n\n  var _useQuery5 = (0, _reactQuery.useQuery)([_constants.practitionerRoleResourceType, resourceId], function () {\n    return (0, _CreateEditUser.getPractitionerRole)(fhirBaseUrl, resourceId);\n  }),\n      practitionerRole = _useQuery5.data,\n      practitionerRoleIsLoading = _useQuery5.isLoading;\n\n  if (userIsLoading) {\n    return _react[\"default\"].createElement(_antd.Spin, {\n      size: \"large\",\n      className: \"custom-spinner\",\n      \"data-testid\": \"custom-spinner\"\n    });\n  }\n\n  if (userError && !user) {\n    return _react[\"default\"].createElement(_antd.Alert, {\n      type: \"error\",\n      message: \"\".concat(userError)\n    });\n  }\n\n  var keycloakUserValues = (_keycloakUserValues = {}, (0, _defineProperty2[\"default\"])(_keycloakUserValues, t('Keycloak UUID'), user.id), (0, _defineProperty2[\"default\"])(_keycloakUserValues, \"Username\", user.username), _keycloakUserValues);\n  var practitionerIdentifierObj = (0, _reactUtils.getObjLike)(practitioner === null || practitioner === void 0 ? void 0 : practitioner.identifier, 'use', _reactUtils.IdentifierUseCodes.OFFICIAL);\n  var practitionerKeyValues = (_practitionerKeyValue = {}, (0, _defineProperty2[\"default\"])(_practitionerKeyValue, t('Practitioner ID'), practitioner === null || practitioner === void 0 ? void 0 : practitioner.id), (0, _defineProperty2[\"default\"])(_practitionerKeyValue, t('Practitioner UUID'), (0, _lodash.get)(practitionerIdentifierObj, '0.value')), (0, _defineProperty2[\"default\"])(_practitionerKeyValue, t('Practitioner status'), practitioner !== null && practitioner !== void 0 && practitioner.active ? t('active') : t('inactive')), _practitionerKeyValue);\n  var careTeamKeyValues = (0, _defineProperty2[\"default\"])({}, t('Linked care teams'), _react[\"default\"].createElement(\"ul\", {\n    id: \"practitioner-care-teams\"\n  }, (careTeams !== null && careTeams !== void 0 ? careTeams : []).map(function (careTeam) {\n    return _react[\"default\"].createElement(\"li\", {\n      key: careTeam.id\n    }, careTeam.name);\n  })));\n  var keycloakUserGroupskeyVaues = (0, _defineProperty2[\"default\"])({}, t('Keycloack User Groups'), _react[\"default\"].createElement(\"ul\", {\n    id: \"keycloak-user-groups\"\n  }, (userGroup !== null && userGroup !== void 0 ? userGroup : []).map(function (group) {\n    return _react[\"default\"].createElement(\"li\", {\n      key: group.id\n    }, group.name);\n  })));\n  var practitionerRoleKeyValues = (0, _defineProperty2[\"default\"])({}, t('User Type'), _react[\"default\"].createElement(\"ul\", {\n    id: \"user-type\"\n  }, ((_ref = practitionerRole ? [practitionerRole] : undefined) !== null && _ref !== void 0 ? _ref : []).map(function (role) {\n    var userType;\n    var userTypeCode = (0, _userManagement.getUserTypeCode)(role);\n\n    if (userTypeCode) {\n      userType = (0, _userManagement.getUserType)(userTypeCode);\n    }\n\n    return _react[\"default\"].createElement(\"li\", {\n      key: role.id,\n      \"data-testid\": \"user-type\"\n    }, userType);\n  })));\n  return _react[\"default\"].createElement(_antd.Space, {\n    direction: \"vertical\"\n  }, (0, _reactUtils.renderObjectAsKeyvalue)(keycloakUserValues), userGroupIsLoading ? _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Fetching User Groups'),\n    type: \"info\"\n  }) : userGroup !== null && userGroup !== void 0 && userGroup.length ? (0, _reactUtils.renderObjectAsKeyvalue)(keycloakUserGroupskeyVaues) : _react[\"default\"].createElement(_antd.Alert, {\n    description: t('User is not assigned to any user groups'),\n    type: \"warning\"\n  }), practitionerIsLoading ? _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Fetching linked practitioner'),\n    type: \"info\"\n  }) : practitioner ? (0, _reactUtils.renderObjectAsKeyvalue)(practitionerKeyValues) : _react[\"default\"].createElement(_antd.Alert, {\n    description: t('User does not have a linked practitioner'),\n    type: \"warning\"\n  }), practitionerRoleIsLoading ? _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Fetching linked practitionerRole'),\n    type: \"info\"\n  }) : practitionerRole ? (0, _reactUtils.renderObjectAsKeyvalue)(practitionerRoleKeyValues) : _react[\"default\"].createElement(_antd.Alert, {\n    description: t('User has not been assigned a user type'),\n    type: \"warning\"\n  }), careTeamsIsLoading ? _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Fetching linked care teams'),\n    type: \"info\"\n  }) : careTeams && careTeams.length > 0 ? (0, _reactUtils.renderObjectAsKeyvalue)(careTeamKeyValues) : _react[\"default\"].createElement(_antd.Alert, {\n    description: t('Practitioner is not assigned to a care team'),\n    type: \"warning\"\n  }));\n};\n\nexports.ViewDetails = ViewDetails;\n\nvar ViewDetailsWrapper = function ViewDetailsWrapper(props) {\n  var resourceId = props.resourceId,\n      fhirBaseUrl = props.fhirBaseUrl,\n      keycloakBaseUrl = props.keycloakBaseUrl;\n\n  var _useSearchParams = (0, _reactUtils.useSearchParams)(),\n      removeParam = _useSearchParams.removeParam;\n\n  if (!resourceId) {\n    return null;\n  }\n\n  return _react[\"default\"].createElement(_antd.Col, {\n    className: \"view-details-content\"\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"flex-right\"\n  }, _react[\"default\"].createElement(_antd.Button, {\n    \"data-testid\": \"close-button\",\n    icon: _react[\"default\"].createElement(_icons.CloseOutlined, null),\n    shape: \"circle\",\n    type: \"text\",\n    onClick: function onClick() {\n      return removeParam(_reactUtils.viewDetailsQuery);\n    }\n  })), _react[\"default\"].createElement(ViewDetails, {\n    resourceId: resourceId,\n    fhirBaseUrl: fhirBaseUrl,\n    keycloakBaseUrl: keycloakBaseUrl\n  }));\n};\n\nexports.ViewDetailsWrapper = ViewDetailsWrapper;","map":null,"metadata":{},"sourceType":"script"}