{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadKeycloakResources = exports.deleteUser = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _keycloakService = require(\"@opensrp/keycloak-service/\");\n\nvar _constants = require(\"../../../constants\");\n\nvar _notifications = require(\"@opensrp/notifications\");\n\nvar _userManagement = require(\"@opensrp/user-management\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar deleteUser = function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(keycloakBaseURL, baseUrl, userId, t) {\n    var deleteKeycloakUser, practitionerServe, practsForThisUser, updatedPracts, groupsServe, groupsForThisUser, updatedGroups, practitionerRoleServe, practitionerRolesForThisUser, updatedPractitionerRoles;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            deleteKeycloakUser = new _keycloakService.KeycloakService(\"\".concat(_userManagement.KEYCLOAK_URL_USERS, \"/\").concat(userId), keycloakBaseURL);\n            practitionerServe = new _reactUtils.FHIRServiceClass(baseUrl, _constants.practitionerResourceType);\n            _context.next = 4;\n            return practitionerServe.list({\n              identifier: userId\n            }).then(function (res) {\n              return (0, _reactUtils.getResourcesFromBundle)(res);\n            });\n\n          case 4:\n            practsForThisUser = _context.sent;\n            updatedPracts = practsForThisUser.map(function (obj) {\n              return _objectSpread(_objectSpread({}, obj), {}, {\n                active: false\n              });\n            });\n            groupsServe = new _reactUtils.FHIRServiceClass(baseUrl, 'Group');\n            _context.next = 9;\n            return groupsServe.list({\n              identifier: userId\n            }).then(function (res) {\n              return (0, _reactUtils.getResourcesFromBundle)(res);\n            });\n\n          case 9:\n            groupsForThisUser = _context.sent;\n            updatedGroups = groupsForThisUser.map(function (obj) {\n              return _objectSpread(_objectSpread({}, obj), {}, {\n                active: false\n              });\n            });\n            practitionerRoleServe = new _reactUtils.FHIRServiceClass(baseUrl, _constants.practitionerRoleResourceType);\n            _context.next = 14;\n            return practitionerRoleServe.list({\n              identifier: userId\n            }).then(function (res) {\n              return (0, _reactUtils.getResourcesFromBundle)(res);\n            });\n\n          case 14:\n            practitionerRolesForThisUser = _context.sent;\n            updatedPractitionerRoles = practitionerRolesForThisUser.map(function (obj) {\n              return _objectSpread(_objectSpread({}, obj), {}, {\n                active: false\n              });\n            });\n            return _context.abrupt(\"return\", Promise.allSettled([deleteKeycloakUser[\"delete\"]()].concat((0, _toConsumableArray2[\"default\"])(updatedPracts.map(function (obj) {\n              return practitionerServe.update(obj);\n            })), (0, _toConsumableArray2[\"default\"])(updatedGroups.map(function (group) {\n              return groupsServe.update(group);\n            })), (0, _toConsumableArray2[\"default\"])(updatedPractitionerRoles.map(function (obj) {\n              return practitionerRoleServe.update(obj);\n            })))).then(function () {\n              (0, _notifications.sendSuccessNotification)(t('User deleted successfully'));\n              (0, _notifications.sendSuccessNotification)(t('Practitioner deactivated'));\n              (0, _notifications.sendSuccessNotification)(t('Group deactivated'));\n              (0, _notifications.sendSuccessNotification)(t('Practitioner role deactivated'));\n            })[\"catch\"](function (error) {\n              return (0, _notifications.sendErrorNotification)(error.message);\n            }));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function deleteUser(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.deleteUser = deleteUser;\n\nvar loadKeycloakResources = function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2(baseUrl, endpoint) {\n    var params,\n        count,\n        search,\n        paginationFilters,\n        records,\n        _args2 = arguments;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            params = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n            _context2.next = 3;\n            return new _keycloakService.KeycloakService(\"\".concat(endpoint, \"/\").concat(_constants.keycloakCountEndpoint), baseUrl).list();\n\n          case 3:\n            count = _context2.sent;\n\n            if (count) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {\n              total: count,\n              records: []\n            });\n\n          case 6:\n            search = params.search;\n            paginationFilters = {\n              max: count\n            };\n\n            if (search) {\n              paginationFilters['search'] = search;\n            }\n\n            _context2.next = 11;\n            return new _keycloakService.KeycloakService(endpoint, baseUrl).list(paginationFilters);\n\n          case 11:\n            records = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              total: count,\n              records: records\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function loadKeycloakResources(_x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.loadKeycloakResources = loadKeycloakResources;","map":null,"metadata":{},"sourceType":"script"}