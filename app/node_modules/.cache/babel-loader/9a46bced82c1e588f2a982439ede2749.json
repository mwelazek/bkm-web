{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reformatOrganizationByLocation = exports.postPutAffiliations = exports.orgsFilterFunction = exports.keyAffiliationsByOrgLocIds = exports.getOrgSelectOptions = exports.getOrgOptionsFromAffiliations = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _fhirLocationManagement = require(\"@opensrp/fhir-location-management\");\n\nvar _lodash = require(\"lodash\");\n\nvar _constants = require(\"../../constants\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _uuid = require(\"uuid\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar reformatOrganizationByLocation = function reformatOrganizationByLocation(orgAffiliations) {\n  var orgsByLocations = {};\n  orgAffiliations.forEach(function (affiliation) {\n    var organization = affiliation.organization,\n        location = affiliation.location;\n    var orgReference = organization === null || organization === void 0 ? void 0 : organization.reference;\n\n    if (!orgReference) {\n      return;\n    }\n\n    location === null || location === void 0 ? void 0 : location.forEach(function (loc) {\n      var locRef = loc.reference;\n\n      if (!locRef) {\n        return;\n      }\n\n      if (!orgsByLocations[locRef]) {\n        orgsByLocations[locRef] = [];\n      }\n\n      orgsByLocations[locRef].push(affiliation);\n    });\n  });\n  return orgsByLocations;\n};\n\nexports.reformatOrganizationByLocation = reformatOrganizationByLocation;\n\nvar getOrgSelectOptions = function getOrgSelectOptions() {\n  var orgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return orgs.map(function (org) {\n    return {\n      value: \"\".concat(_constants.organizationResourceType, \"/\").concat(org.id),\n      label: org.name\n    };\n  });\n};\n\nexports.getOrgSelectOptions = getOrgSelectOptions;\n\nvar orgsFilterFunction = function orgsFilterFunction(inputValue, option) {\n  var _option$label;\n\n  return !!(option !== null && option !== void 0 && (_option$label = option.label) !== null && _option$label !== void 0 && _option$label.toLowerCase().includes(inputValue.toLowerCase()));\n};\n\nexports.orgsFilterFunction = orgsFilterFunction;\n\nvar getOrgOptionsFromAffiliations = function getOrgOptionsFromAffiliations() {\n  var affiliatedOrgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return affiliatedOrgs.map(function (obj) {\n    var _obj$organization, _obj$organization2;\n\n    return {\n      value: (_obj$organization = obj.organization) === null || _obj$organization === void 0 ? void 0 : _obj$organization.reference,\n      label: (_obj$organization2 = obj.organization) === null || _obj$organization2 === void 0 ? void 0 : _obj$organization2.display,\n      affiliation: obj\n    };\n  });\n};\n\nexports.getOrgOptionsFromAffiliations = getOrgOptionsFromAffiliations;\n\nvar keyAffiliationsByOrgLocIds = function keyAffiliationsByOrgLocIds(affiliations) {\n  var affiliationsByOrgLocIds = (0, _lodash.transform)(affiliations, function (acc, value) {\n    var _value$organization;\n\n    var orgReference = (_value$organization = value.organization) === null || _value$organization === void 0 ? void 0 : _value$organization.reference;\n\n    if (!acc[orgReference]) {\n      acc[orgReference] = {};\n    }\n\n    var location = value.location;\n    location === null || location === void 0 ? void 0 : location.forEach(function (location) {\n      var locReference = location.reference;\n      acc[orgReference][locReference] = value;\n    });\n  }, {});\n  return affiliationsByOrgLocIds;\n};\n\nexports.keyAffiliationsByOrgLocIds = keyAffiliationsByOrgLocIds;\n\nvar postPutAffiliations = function postPutAffiliations(baseUrl, currentOptions, initialOptions, location, allAffiliations) {\n  var toAdd = [];\n  var toRemove = [];\n  var currentOptionsById = (0, _lodash.keyBy)(currentOptions, 'value');\n  var initialOptionsById = (0, _lodash.keyBy)(initialOptions, 'value');\n  var affsByOrgLoc = keyAffiliationsByOrgLocIds(allAffiliations);\n  currentOptions.forEach(function (option) {\n    if (!initialOptionsById[option.value]) {\n      toAdd.push(option);\n    }\n  });\n  initialOptions.forEach(function (option) {\n    if (!currentOptionsById[option.value]) {\n      toRemove.push(option);\n    }\n  });\n  var serve = new _reactUtils.FHIRServiceClass(baseUrl, _constants.organizationAffiliationResourceType);\n  var promises = [];\n  toRemove.forEach(function (option) {\n    var existingAffiliation = affsByOrgLoc[option.value][\"\".concat(_fhirLocationManagement.locationResourceType, \"/\").concat(location.id)];\n\n    if (existingAffiliation) {\n      var _existingAffiliation$;\n\n      var locations = (_existingAffiliation$ = existingAffiliation.location) !== null && _existingAffiliation$ !== void 0 ? _existingAffiliation$ : [];\n      var remainingLocations = locations.filter(function (loc) {\n        return loc.reference !== \"\".concat(_fhirLocationManagement.locationResourceType, \"/\").concat(location.id);\n      });\n\n      if (remainingLocations.length === 0) {\n        promises.push(function () {\n          return serve[\"delete\"](existingAffiliation.id);\n        });\n      } else if (remainingLocations.length !== locations.length) {\n        existingAffiliation.location = remainingLocations;\n        promises.push(function () {\n          return serve.update(existingAffiliation);\n        });\n      }\n    } else {}\n  });\n  var pyaloadToAddMap = {};\n  toAdd.forEach(function (option) {\n    var affiliationPayload = getNewAffiliationPayload(option, affsByOrgLoc, location);\n    pyaloadToAddMap[affiliationPayload.id] = affiliationPayload;\n  });\n  Object.values(pyaloadToAddMap).forEach(function (affiliation) {\n    return promises.push(function () {\n      return serve.update(affiliation);\n    });\n  });\n  return Promise.all(promises.map(function (p) {\n    return p();\n  }));\n};\n\nexports.postPutAffiliations = postPutAffiliations;\n\nfunction getNewAffiliationPayload(option, affiliationsByOrgLocation, location) {\n  var _ref;\n\n  var orgReference = option.value;\n  var affiliationByLocation = (_ref = affiliationsByOrgLocation[orgReference]) !== null && _ref !== void 0 ? _ref : {};\n  var existingAffiliations = Object.values(affiliationByLocation);\n\n  if (existingAffiliations.length > 0) {\n    var _anyAffiliation$locat;\n\n    var anyAffiliation = existingAffiliations[0];\n\n    var updatedAffiliation = _objectSpread(_objectSpread({}, anyAffiliation), {}, {\n      location: [].concat((0, _toConsumableArray2[\"default\"])((_anyAffiliation$locat = anyAffiliation.location) !== null && _anyAffiliation$locat !== void 0 ? _anyAffiliation$locat : []), [{\n        reference: \"\".concat(_fhirLocationManagement.locationResourceType, \"/\").concat(location.id),\n        display: location.name\n      }])\n    });\n\n    return updatedAffiliation;\n  } else {\n    var affiliationPayload = {\n      resourceType: _constants.organizationAffiliationResourceType,\n      id: (0, _uuid.v4)(),\n      identifier: [{\n        use: _reactUtils.IdentifierUseCodes.OFFICIAL,\n        value: (0, _uuid.v4)()\n      }],\n      active: true,\n      organization: {\n        reference: option.value,\n        display: option.label\n      },\n      location: [{\n        reference: \"\".concat(_fhirLocationManagement.locationResourceType, \"/\").concat(location.id),\n        display: location.name\n      }]\n    };\n    return affiliationPayload;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}