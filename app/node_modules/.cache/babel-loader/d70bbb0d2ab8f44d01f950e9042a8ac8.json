{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar newValue_1 = require(\"../../../actions/newValue\");\n\nvar constants_1 = require(\"../../../constants\");\n\nvar itemcontrol_1 = __importDefault(require(\"../../../constants/itemcontrol\"));\n\nvar util_1 = require(\"../../../util\");\n\nvar choice_1 = require(\"../../../util/choice\");\n\nvar map_props_1 = require(\"../../../util/map-props\");\n\nvar with_common_functions_1 = __importDefault(require(\"../../with-common-functions\"));\n\nvar autosuggest_view_1 = __importDefault(require(\"../choice-common/autosuggest-view\"));\n\nvar textview_1 = __importDefault(require(\"../textview\"));\n\nvar checkbox_view_1 = __importDefault(require(\"./checkbox-view\"));\n\nvar dropdown_view_1 = __importDefault(require(\"./dropdown-view\"));\n\nvar radio_view_1 = __importDefault(require(\"./radio-view\"));\n\nvar text_field_1 = __importDefault(require(\"./text-field\"));\n\nvar OpenChoice = /*#__PURE__*/function (_React$Component) {\n  _inherits(OpenChoice, _React$Component);\n\n  var _super = _createSuper(OpenChoice);\n\n  function OpenChoice() {\n    var _this;\n\n    _classCallCheck(this, OpenChoice);\n\n    _this = _super.apply(this, arguments);\n\n    _this.getPDFValue = function (item, answer) {\n      var _this$props = _this.props,\n          resources = _this$props.resources,\n          containedResources = _this$props.containedResources;\n\n      var value = _this.getValue(item, answer);\n\n      if (!value) {\n        var text = '';\n\n        if (resources && resources.ikkeBesvart) {\n          text = resources.ikkeBesvart;\n        }\n\n        return text;\n      }\n\n      var displayValues = value.filter(function (el) {\n        return el !== constants_1.OPEN_CHOICE_ID;\n      }).map(function (el) {\n        return choice_1.getDisplay(choice_1.getOptions(item, containedResources), el);\n      });\n\n      var openValue = _this.getOpenValue(answer);\n\n      if (openValue) {\n        displayValues.push(openValue);\n      }\n\n      return displayValues.join(', ');\n    };\n\n    _this.getOpenValue = function (answer) {\n      if (Array.isArray(answer)) {\n        for (var i = 0; i < answer.length; i++) {\n          var el = answer[i];\n\n          if (el.valueString) {\n            return el.valueString;\n          }\n        }\n      }\n\n      return;\n    };\n\n    _this.getValue = function (item, answer) {\n      var _a, _b;\n\n      if (answer && Array.isArray(answer)) {\n        return answer.map(function (el) {\n          if (el) {\n            if (el.valueCoding && el.valueCoding.code) {\n              return el.valueCoding.code;\n            }\n          }\n        });\n      } else if (answer && !Array.isArray(answer) && answer.valueCoding && answer.valueCoding.code) {\n        return [answer.valueCoding.code];\n      }\n\n      var initialSelectedOption = (_a = item.answerOption) === null || _a === void 0 ? void 0 : _a.filter(function (x) {\n        return x.initialSelected;\n      });\n\n      if (initialSelectedOption && initialSelectedOption.length > 0) {\n        return [(_b = initialSelectedOption[0].valueCoding) === null || _b === void 0 ? void 0 : _b.code];\n      }\n\n      if (!item || !item.initial || item.initial.length === 0 || !item.initial[0].valueCoding || !item.initial[0].valueCoding.code) {\n        return undefined;\n      }\n\n      return [String(item.initial[0].valueCoding.code)];\n    };\n\n    _this.handleStringChangeEvent = function (event) {\n      var value = event.target.value;\n\n      _this.handleStringChange(value);\n    };\n\n    _this.handleStringChange = function (value) {\n      var _a, _b;\n\n      var _this$props2 = _this.props,\n          dispatch = _this$props2.dispatch,\n          promptLoginMessage = _this$props2.promptLoginMessage,\n          path = _this$props2.path,\n          item = _this$props2.item,\n          onAnswerChange = _this$props2.onAnswerChange;\n\n      if (dispatch) {\n        if (value.length > 0) {\n          (_a = dispatch(newValue_1.newCodingStringValueAsync(_this.props.path, value, _this.props.item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n            return onAnswerChange(newState, path, item, {\n              valueString: value\n            });\n          });\n        } else {\n          (_b = dispatch(newValue_1.removeCodingStringValueAsync(_this.props.path, _this.props.item))) === null || _b === void 0 ? void 0 : _b.then(function (newState) {\n            return onAnswerChange(newState, path, item, {\n              valueString: ''\n            });\n          });\n        }\n      }\n\n      if (promptLoginMessage) {\n        promptLoginMessage();\n      }\n    };\n\n    _this.handleCheckboxChange = function (code) {\n      var _a, _b;\n\n      var _this$props3 = _this.props,\n          dispatch = _this$props3.dispatch,\n          answer = _this$props3.answer,\n          promptLoginMessage = _this$props3.promptLoginMessage,\n          item = _this$props3.item,\n          onAnswerChange = _this$props3.onAnswerChange,\n          path = _this$props3.path;\n\n      if (dispatch && code) {\n        var display = choice_1.getDisplay(choice_1.getOptions(item, _this.props.containedResources), code);\n        var system = code === constants_1.OPEN_CHOICE_ID ? constants_1.OPEN_CHOICE_SYSTEM : choice_1.getSystem(item, code, _this.props.containedResources);\n        var coding = {\n          code: code,\n          display: display,\n          system: system\n        };\n        var responseAnswer = {\n          valueCoding: coding\n        };\n\n        if (choice_1.getIndexOfAnswer(code, answer) > -1) {\n          (_a = dispatch(newValue_1.removeCodingValueAsync(_this.props.path, coding, item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n            return onAnswerChange(newState, path, item, responseAnswer);\n          });\n\n          if (promptLoginMessage) {\n            promptLoginMessage();\n          }\n        } else {\n          (_b = dispatch(newValue_1.newCodingValueAsync(_this.props.path, coding, _this.props.item, true))) === null || _b === void 0 ? void 0 : _b.then(function (newState) {\n            return onAnswerChange(newState, path, item, responseAnswer);\n          });\n\n          if (promptLoginMessage) {\n            promptLoginMessage();\n          }\n        }\n\n        _this.interceptHandler(coding, choice_1.getItemControlValue(item));\n      }\n    };\n\n    _this.clearCodingAnswer = function (coding) {\n      var _a;\n\n      var _this$props4 = _this.props,\n          dispatch = _this$props4.dispatch,\n          promptLoginMessage = _this$props4.promptLoginMessage,\n          item = _this$props4.item,\n          onAnswerChange = _this$props4.onAnswerChange,\n          path = _this$props4.path;\n\n      if (dispatch) {\n        var responseAnswer = {\n          valueCoding: coding\n        };\n        (_a = dispatch(newValue_1.removeCodingValueAsync(path, coding, item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n          return onAnswerChange(newState, path, item, responseAnswer);\n        });\n\n        if (promptLoginMessage) {\n          promptLoginMessage();\n        }\n      }\n    };\n\n    _this.handleChange = function (code, systemArg, displayArg) {\n      var _a;\n\n      var _this$props5 = _this.props,\n          dispatch = _this$props5.dispatch,\n          promptLoginMessage = _this$props5.promptLoginMessage,\n          item = _this$props5.item,\n          onAnswerChange = _this$props5.onAnswerChange,\n          path = _this$props5.path;\n\n      if (dispatch && code) {\n        var valueSetSystem = code === constants_1.OPEN_CHOICE_ID ? constants_1.OPEN_CHOICE_SYSTEM : choice_1.getSystem(item, code, _this.props.containedResources);\n        var display = displayArg ? displayArg : choice_1.getDisplay(choice_1.getOptions(item, _this.props.containedResources), code);\n        var system = systemArg ? systemArg : valueSetSystem;\n        var coding = {\n          code: code,\n          display: display,\n          system: system\n        };\n        var responseAnswer = {\n          valueCoding: coding\n        };\n        (_a = dispatch(newValue_1.newCodingValueAsync(_this.props.path, coding, item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n          return onAnswerChange(newState, path, item, responseAnswer);\n        });\n\n        if (promptLoginMessage) {\n          promptLoginMessage();\n        }\n\n        _this.interceptHandler(coding, choice_1.getItemControlValue(item));\n      }\n    };\n\n    _this.interceptHandler = function (coding, type) {\n      switch (type) {\n        case itemcontrol_1.default.CHECKBOX:\n          return _this.multiValueHandler(coding);\n\n        default:\n          return _this.singleValueHandler(coding);\n      }\n    };\n\n    _this.singleValueHandler = function (coding) {\n      var _a;\n\n      var _this$props6 = _this.props,\n          dispatch = _this$props6.dispatch,\n          item = _this$props6.item,\n          path = _this$props6.path,\n          onAnswerChange = _this$props6.onAnswerChange;\n\n      if (dispatch) {\n        if (coding.code !== constants_1.OPEN_CHOICE_ID) {\n          (_a = dispatch(newValue_1.removeCodingStringValueAsync(path, item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n            return onAnswerChange(newState, path, item, {\n              valueString: ''\n            });\n          });\n        }\n      }\n    };\n\n    _this.multiValueHandler = function (coding) {\n      var _a;\n\n      var _this$props7 = _this.props,\n          dispatch = _this$props7.dispatch,\n          item = _this$props7.item,\n          path = _this$props7.path,\n          answer = _this$props7.answer,\n          onAnswerChange = _this$props7.onAnswerChange;\n\n      if (dispatch) {\n        var isShown = choice_1.shouldShowExtraChoice(answer);\n\n        if (isShown && coding.code === constants_1.OPEN_CHOICE_ID) {\n          (_a = dispatch(newValue_1.removeCodingStringValueAsync(path, item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n            return onAnswerChange(newState, path, item, {\n              valueString: ''\n            });\n          });\n        }\n      }\n    };\n\n    _this.renderCheckbox = function (options) {\n      return React.createElement(checkbox_view_1.default, Object.assign({\n        options: options,\n        id: _this.props.id,\n        handleChange: _this.handleCheckboxChange,\n        selected: _this.getValue(_this.props.item, _this.props.answer),\n        renderOpenField: function renderOpenField() {\n          return _this.renderTextField();\n        },\n        onRenderMarkdown: _this.props.onRenderMarkdown\n      }, _this.props), _this.props.children);\n    };\n\n    _this.renderDropdown = function (options) {\n      return React.createElement(dropdown_view_1.default, Object.assign({\n        options: options,\n        id: _this.props.id,\n        handleChange: _this.handleChange,\n        selected: _this.getValue(_this.props.item, _this.props.answer),\n        validateInput: function validateInput(value) {\n          return choice_1.validateInput(_this.props.item, value, _this.props.containedResources);\n        },\n        resources: _this.props.resources,\n        renderOpenField: function renderOpenField() {\n          return _this.renderTextField();\n        },\n        onRenderMarkdown: _this.props.onRenderMarkdown\n      }, _this.props), _this.props.children);\n    };\n\n    _this.renderRadio = function (options) {\n      var _a = _this.props,\n          item = _a.item,\n          resources = _a.resources,\n          containedResources = _a.containedResources,\n          children = _a.children,\n          id = _a.id,\n          answer = _a.answer,\n          repeatButton = _a.repeatButton,\n          rest = __rest(_a, [\"item\", \"resources\", \"containedResources\", \"children\", \"id\", \"answer\", \"repeatButton\"]);\n\n      return React.createElement(radio_view_1.default, Object.assign({\n        options: options,\n        item: item,\n        getErrorMessage: function getErrorMessage(value) {\n          return choice_1.getErrorMessage(item, value, resources, containedResources);\n        },\n        handleChange: _this.handleChange,\n        validateInput: function validateInput(value) {\n          return choice_1.validateInput(item, value, containedResources);\n        },\n        id: id,\n        selected: _this.getValue(item, answer),\n        repeatButton: repeatButton,\n        renderOpenField: function renderOpenField() {\n          return _this.renderTextField();\n        },\n        answer: answer,\n        onRenderMarkdown: _this.props.onRenderMarkdown\n      }, rest), children);\n    };\n\n    _this.renderAutosuggest = function () {\n      return React.createElement(autosuggest_view_1.default, Object.assign({\n        handleChange: _this.handleChange,\n        id: _this.props.id,\n        clearCodingAnswer: _this.clearCodingAnswer,\n        onRenderMarkdown: _this.props.onRenderMarkdown,\n        handleStringChange: _this.handleStringChange\n      }, _this.props), _this.props.children);\n    };\n\n    return _this;\n  }\n\n  _createClass(OpenChoice, [{\n    key: \"renderTextField\",\n    value: function renderTextField() {\n      var _a = this.props,\n          id = _a.id,\n          pdf = _a.pdf,\n          item = _a.item,\n          answer = _a.answer,\n          onRenderMarkdown = _a.onRenderMarkdown,\n          other = __rest(_a, [\"id\", \"pdf\", \"item\", \"answer\", \"onRenderMarkdown\"]);\n\n      var a = answer;\n\n      if (Array.isArray(answer)) {\n        for (var i = 0; i < answer.length; i++) {\n          var el = answer[i];\n\n          if (el.valueString) {\n            a = el;\n            break;\n          }\n        }\n      }\n\n      return React.createElement(text_field_1.default, Object.assign({\n        id: id,\n        pdf: pdf,\n        item: item,\n        answer: a,\n        handleStringChange: this.handleStringChangeEvent,\n        onRenderMarkdown: onRenderMarkdown\n      }, other));\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _a;\n\n      var responseItemHasChanged = this.props.responseItem !== nextProps.responseItem;\n      var helpItemHasChanged = this.props.isHelpOpen !== nextProps.isHelpOpen;\n      var resourcesHasChanged = JSON.stringify(this.props.resources) !== JSON.stringify(nextProps.resources);\n      var repeats = (_a = this.props.item.repeats) !== null && _a !== void 0 ? _a : false;\n      return responseItemHasChanged || helpItemHasChanged || resourcesHasChanged || repeats;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          id = _this$props8.id,\n          item = _this$props8.item,\n          pdf = _this$props8.pdf,\n          answer = _this$props8.answer,\n          containedResources = _this$props8.containedResources,\n          children = _this$props8.children,\n          onRenderMarkdown = _this$props8.onRenderMarkdown;\n\n      if (pdf || util_1.isReadOnly(item)) {\n        return React.createElement(textview_1.default, {\n          id: id,\n          item: item,\n          value: this.getPDFValue(item, answer),\n          onRenderMarkdown: onRenderMarkdown\n        }, children);\n      }\n\n      return React.createElement(React.Fragment, null, choice_1.renderOptions(item, containedResources, this.renderRadio, this.renderCheckbox, this.renderDropdown, this.renderAutosuggest));\n    }\n  }]);\n\n  return OpenChoice;\n}(React.Component);\n\nvar withCommonFunctionsComponent = with_common_functions_1.default(OpenChoice);\nvar connectedStringComponent = react_redux_1.connect(map_props_1.mapStateToProps, map_props_1.mapDispatchToProps, map_props_1.mergeProps)(withCommonFunctionsComponent);\nexports.default = connectedStringComponent;","map":null,"metadata":{},"sourceType":"script"}