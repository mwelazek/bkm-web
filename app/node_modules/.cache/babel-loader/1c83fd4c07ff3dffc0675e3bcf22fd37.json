{"ast":null,"code":"//Enum for Adobe Analytics\nexport var AnalyticsId;\n\n(function (AnalyticsId) {\n  AnalyticsId[\"Tab\"] = \"tab\";\n  AnalyticsId[\"ExpandableSection\"] = \"expandable-section\";\n  AnalyticsId[\"ExpandableBlock\"] = \"expandable-block\";\n  AnalyticsId[\"ExpandableTagSection\"] = \"expandable-tag-section\";\n  AnalyticsId[\"BlockButton\"] = \"block-button\";\n  AnalyticsId[\"DisplayButton\"] = \"display-button\";\n  AnalyticsId[\"FunctionButton\"] = \"function-button\";\n  AnalyticsId[\"NavigationButton\"] = \"navigation-button\";\n  AnalyticsId[\"ProcessStartButton\"] = \"process-start-button\";\n  AnalyticsId[\"SaveButton\"] = \"save-button\";\n})(AnalyticsId || (AnalyticsId = {}));\n/**\n * Brukes for å sjekke om window.digitalData er klar til bruk\n * @param x objektet som skal sjekkes, normalt window.digitalData\n */\n\n\nvar isDigitalData = function isDigitalData(x) {\n  return typeof x === 'object';\n};\n/**\n * Brukes for å sjekke om window._satellite er klar for tracking\n * @param x objektet som skal sjekkes, normalt window._satellite\n */\n\n\nvar isSatellite = function isSatellite(x) {\n  var satellite = x;\n  return (satellite === null || satellite === void 0 ? void 0 : satellite.track) !== undefined && typeof satellite.track === 'function';\n};\n/**\n * Sjekker om window._satellite er klar for tracking\n * Brukes når man bare trenger window._satellite, og ikke window.digitalData\n * @param x objektet som skal sjekkes, normalt window\n */\n\n\nvar isSatelliteReady = function isSatelliteReady(x) {\n  return isSatellite(x._satellite);\n};\n/**\n * Sjekker om både window.digitalData og window._satellite er klare for tracking,\n * inkludert om det er trygt å kalle window._satellite.track()\n * @param x objektet som skal sjekkes, normalt window\n */\n\n\nexport var isTrackingready = function isTrackingready(x) {\n  return isDigitalData(x.digitalData) && isSatellite(x._satellite);\n};\n/**\n * @param event hvor langt brukeren har kommet i selvbetjeningsløsningen (starter/fullfører/avbryter/lagrer)\n * @param name definerer navnet på selvbetjeningsløsningen.\n * @param type spesifiserer type hvis selvbetjeningsløsningen har flere varianter.\n * @param action spesifiserer hvilken handling man utfører ('søke', 'bytte', 'legge til', etc.).\n * @param labels spesifiserer tilleggsinformasjon man vil skille brukere på. (F.eks. foretrukket kontaktmåte).\n */\n\nexport var trackSelfService = function trackSelfService(event, name, type, action, labels) {\n  if (isTrackingready(window)) {\n    var selfService = {\n      selfServiceName: name\n    };\n    if (type) selfService.selfServiceType = type;\n    if (action) selfService.selfServiceAction = action;\n    if (labels) selfService.selfServiceLabels = labels;\n    window.digitalData.selfService = selfService;\n\n    window._satellite.track(\"self service \".concat(event));\n  }\n};\n/**\n * Spor bruk av samtykkeflyt\n * @param consentTrackType definerer consentStart, consentFunnel eller consentComplete videre\n * @param stepName definerer consentFunnelStep på ConsentSelfService\n * @param stepNumber definerer selfServiceFunnelStepNumber på ConsentSelfService\n * @param consentType definerer consentType på ConsentSelfService\n */\n\nexport var trackConsent = function trackConsent(consentTrackType, stepName, stepNumber, consentType) {\n  if (isTrackingready(window)) {\n    var selfService = {\n      consentFunnelName: 'Samtykkeflyt',\n      consentType: consentType,\n      consentFunnelStep: stepName,\n      consentFunnelStepNumber: stepNumber\n    };\n    var trackText = undefined;\n\n    if (consentTrackType === 'info') {\n      selfService.consentStart = 'true';\n      trackText = 'consent start';\n    }\n\n    if (consentTrackType === 'funnel') {\n      selfService.consentFunnel = 'true';\n      trackText = 'consent funnel';\n    }\n\n    if (consentTrackType === 'complete') {\n      selfService.consentComplete = 'true';\n      trackText = 'consent complete';\n    }\n\n    window.digitalData.selfService = selfService;\n\n    if (trackText) {\n      window._satellite.track(trackText);\n    }\n  }\n};\n/**\n * Spor bruk av filterkomponent\n * @param name definerer navnet fil Filter\n * @param trackType definerer type tracking: 'usage' | 'expand' | 'search' | 'groupExpand'\n */\n\nexport var trackFilters = function trackFilters(name, trackType) {\n  if (isTrackingready(window)) {\n    window.digitalData.filters = {\n      filterName: name\n    };\n\n    if (trackType === 'usage') {\n      window.digitalData.filters.filterUsage = 'true';\n\n      window._satellite.track('filter use');\n    }\n\n    if (trackType === 'expand') {\n      window.digitalData.filters.filterExpand = 'true';\n\n      window._satellite.track('filter expand');\n    }\n\n    if (trackType === 'groupExpand') {\n      window.digitalData.filters.filterGroupExpand = 'true';\n\n      window._satellite.track('filter group expand');\n    }\n\n    if (trackType === 'search') {\n      window.digitalData.filters.filterSearch = 'true';\n\n      window._satellite.track('filter search');\n    }\n  }\n};\n/**\n * Spor pageInfo partner - setter informasjon om tjenesteeier o.l. i window.digitalData\n * @param partner definerer partner som settes i pageInfo\n */\n\nexport var trackPagePartner = function trackPagePartner(partner) {\n  if (window.digitalData && window.digitalData.page && window.digitalData.page.pageInfo) {\n    window.digitalData.page.pageInfo.partner = partner;\n  }\n};\n/**\n * Setter informasjon om innlogget status i window.digitalData\n * @param isLoggedIn Om bruker er logget inn eller ikke\n */\n\nexport var trackLoginStatus = function trackLoginStatus(isLoggedIn) {\n  var _a, _b;\n\n  if ((_b = (_a = window.digitalData) === null || _a === void 0 ? void 0 : _a.page) === null || _b === void 0 ? void 0 : _b.pageInfo) {\n    window.digitalData.page.pageInfo.loggedIn = isLoggedIn ? 'innlogget' : 'ikke innlogget';\n  }\n};\n/**\n * Spor uleste varslinger\n * @param hasUnReadAlerts true/false\n */\n\nexport var trackUnreadAlert = function trackUnreadAlert(hasUnReadAlerts) {\n  if (isTrackingready(window)) {\n    window.digitalData.user = {\n      unReadAlerts: hasUnReadAlerts ? true : false\n    };\n\n    window._satellite.track('first logged in page');\n  }\n};\n/**\n * Spor uleste meldinger\n * @param hasUnReadMessages true/false\n */\n\nexport var trackUnreadMessage = function trackUnreadMessage(hasUnReadMessages) {\n  if (isTrackingready(window)) {\n    window.digitalData.user = {\n      unReadMessages: hasUnReadMessages ? true : false\n    };\n\n    window._satellite.track('first logged in page');\n  }\n};\n/**\n * Spor content-types på meldinger\n * @param contentType type som settes på page category\n */\n\nexport var trackReadMessageType = function trackReadMessageType(contentType) {\n  if (window.digitalData && window.digitalData.page && window.digitalData.page.category) {\n    window.digitalData.page.category.contentType = contentType;\n  }\n\n  if (isSatelliteReady(window)) {\n    window._satellite.track('message content type');\n  }\n};\n/**\n * Spor internsøk\n * @param term nøkkelord som settes på search searchTerm\n * @param name type som settes på search searchType\n * @param resultsCount antall søkeresultater som settes på search resultsCount\n */\n\nexport var trackSearch = function trackSearch(term, name, resultsCount) {\n  if (isTrackingready(window)) {\n    window.digitalData.search = {\n      searchTerm: term,\n      searchType: name,\n      resultsCount: resultsCount,\n      searchCount: 'true'\n    };\n\n    if (resultsCount === 0) {\n      window.digitalData.search.nullResult = 'true';\n\n      window._satellite.track('search null results');\n    } else {\n      window._satellite.track('internal search');\n    }\n  }\n};\n/**\n * Spor klikk på internsøkeresultater\n * @param searchposition position til søkeresultatet som lagres på search searchposition\n */\n\nexport var trackSearchThrough = function trackSearchThrough(searchposition) {\n  if (isTrackingready(window)) {\n    window.digitalData.search = {\n      clickThrough: 'true',\n      searchposition: searchposition\n    };\n\n    window._satellite.track('search click through');\n  }\n};\n/**\n * Spor endring av profilinnstillinger\n * @param name navn som lagres på user profileInteractionName\n */\n\nexport var trackProfileInteraction = function trackProfileInteraction(name) {\n  if (isTrackingready(window)) {\n    window.digitalData.user = {\n      profileInteraction: 'true',\n      profileInteractionName: name\n    };\n\n    window._satellite.track('profile interaction');\n  }\n};\n/**\n * Spor verdien for 'user' representasjon etter at den ble valgt i  personvelger\n */\n\nexport var setValueForSelectedUser = function setValueForSelectedUser() {\n  if (window.digitalData && window.digitalData.page) {\n    window.digitalData.page.user = {\n      onBehalfOf: 'Eget bruk',\n      role: 'Eget bruk'\n    };\n  }\n};\n/**\n * spor handlinger med kun ett steg, e.g.\n * trackTool('kontaktskjema', 'hjelp', 'bytte fastlege', 'send')\n * @param name navn som lagres på tool toolName\n * @param toolType type som lagres på tool toolType\n * @param label label som lagres på tool toolLabels\n * @param actionType action-type som lagres på toolAction og som definerer label (Close or Open)\n */\n\nexport var trackTool = function trackTool(toolName, toolType, toolLabels, toolAction, satelliteTrackContent) {\n  satelliteTrackContent = satelliteTrackContent || 'use tool';\n\n  if (isTrackingready(window)) {\n    window.digitalData.tool = {\n      toolName: toolName,\n      toolType: toolType,\n      toolLabels: toolLabels,\n      toolAction: toolAction\n    };\n\n    window._satellite.track(satelliteTrackContent);\n  }\n};\n/**\n * Spor åpning/lukking av hjelpeskuff\n * @param name navn som lagres på tool toolName\n * @param toolType type som lagres på tool toolType\n * @param label label som lagres på tool toolLabels\n * @param actionType action-type som lagres på toolAction og som definerer label (Close or Open)\n */\n\nexport var trackProsesshjelp = function trackProsesshjelp(name, toolType, label, actionType) {\n  var toolLabels = actionType === 'Close' && window.digitalData && window.digitalData.tool ? window.digitalData.tool.toolLabels : label;\n  var satelliteTrackContent = actionType + ' context help';\n  trackTool(name, toolType, toolLabels, actionType, satelliteTrackContent);\n};\n/**\n * Oppdater data om brukeren, f.eks.\n * updateUserAttributes({ userStatus: \"something\" })\n * @param userAttributes objekt med verdier som enten legges til eller oppdaterer eksisterende data om brukeren\n */\n\nexport var updateUserAttributes = function updateUserAttributes(userAttributes) {\n  if (window.digitalData) {\n    window.digitalData.user = Object.assign(Object.assign({}, window.digitalData.user), userAttributes);\n  }\n};\n/**\n * spor sidevisninger, e.g.\n * trackPageview()\n */\n\nexport var trackPageview = function trackPageview() {\n  if (isSatelliteReady(window)) {\n    window._satellite.track('track pageview');\n  }\n};\n/**\n * Spor om en tjeneste har innhold eller ikke, f.eks.\n * trackServiceAlert(true)\n * @param hasContent Boolean som sier om det er innhold i tjenesten eller ikke\n */\n\nexport var trackServiceAlert = function trackServiceAlert(hasContent) {\n  if (isTrackingready(window)) {\n    window.digitalData.user = {\n      serviceAlert: hasContent ? 'Har innhold' : 'Har ikke innhold'\n    };\n\n    window._satellite.track('service alert');\n  }\n};\n/**\n * Spor feil, f.eks.\n * trackError(\"level1\", \"Beskrivelse av feilen\")\n * @param level Alvorlighetsgrad (level1, level2, level3 eller level4)\n * @param details Tekst som beskriver feilen\n */\n\nexport var trackError = function trackError(level, details) {\n  if (isTrackingready(window)) {\n    var errorType;\n\n    if (level === 'level1') {\n      errorType = 'Nivå 1: Teknisk feil';\n    } else if (level === 'level2') {\n      errorType = 'Nivå 2: Driftsmelding';\n    } else if (level === 'level3') {\n      errorType = 'Nivå 3: JavaScript feil';\n    } else if (level === 'level4') {\n      errorType = 'Nivå 4: Interaksjonsfeil';\n    } else {\n      return;\n    }\n\n    window.digitalData.error = {\n      siteError: !details ? errorType : \"\".concat(errorType, \" \\u2013 \").concat(details)\n    };\n\n    window._satellite.track('site error');\n  }\n};","map":null,"metadata":{},"sourceType":"module"}