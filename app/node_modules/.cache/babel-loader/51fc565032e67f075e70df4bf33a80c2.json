{"ast":null,"code":"var _jsxFileName = \"/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/components/page/Header/index.tsx\",\n    _s = $RefreshSig$();\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as React from 'react';\nimport { withRouter, useHistory } from 'react-router';\nimport { Layout, Avatar, Button, Dropdown } from 'antd';\nimport './Header.css';\nimport { URL_LOGOUT, URL_USER_EDIT } from '../../../constants';\nimport { BellOutlined } from '@ant-design/icons';\nimport { LanguageSwitcher } from '@opensrp/react-utils';\nimport { ENABLE_LANGUAGE_SWITCHER, SUPPORTED_LANGUAGES } from '../../../configs/env';\nimport { useTranslation } from '../../../mls';\nimport { getConfig, setConfig } from '@opensrp/pkg-config';\nimport { APP_LOGIN_URL } from '../../../configs/dispatchConfig';\nimport { ButtonLink } from '@opensrp/react-utils';\n/** interface for HeaderProps */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** default props for Header */\nconst defaultHeaderProps = {\n  authenticated: false,\n  user: {\n    email: '',\n    name: '',\n    username: ''\n  },\n  extraData: {}\n};\nconst languageOptions = {\n  en: 'English',\n  fr: 'FranÃ§ais'\n};\n/** handler called when language is changed\n *\n * @param languageCode - contains the languageOption.key of the selected language option\n */\n\nconst languageChangeHandlerFactory = i18n => languageCode => {\n  const projectCode = getConfig('projectCode');\n\n  if (languageCode) {\n    const newLanguage = projectCode ? `${languageCode}-${projectCode}` : languageCode;\n    setConfig('languageCode', languageCode);\n    i18n.changeLanguage(newLanguage);\n  }\n};\n/** The Header component */\n\n\nexport const HeaderComponent = props => {\n  _s();\n\n  const {\n    authenticated,\n    user,\n    extraData\n  } = props;\n  const {\n    user_id\n  } = extraData;\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  /** default enum of all possible language options */\n\n  const languageChangeHandler = languageChangeHandlerFactory(i18n);\n  const languageSwitcherProps = {\n    value: i18n.language,\n    onLanguageChange: languageChangeHandler,\n    allLanguageOptions: languageOptions,\n    supportedLanguages: SUPPORTED_LANGUAGES\n  };\n  const items = [{\n    key: '1',\n    label: /*#__PURE__*/_jsxDEV(ButtonLink, {\n      name: t('Logout'),\n      route: URL_LOGOUT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 14\n    }, this)\n  }, {\n    key: '2',\n    label: /*#__PURE__*/_jsxDEV(ButtonLink, {\n      name: t('Manage account'),\n      route: `${URL_USER_EDIT}/${user_id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 14\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Layout.Header, {\n    className: \"app-header txt-white align-items-center justify-content-end px-1 layout-header\",\n    children: [authenticated ? /*#__PURE__*/_jsxDEV(Dropdown, {\n      menu: {\n        items\n      },\n      placement: \"bottomRight\",\n      trigger: ['click', 'hover'],\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        shape: \"circle\",\n        icon: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"mr-1 bg-white\",\n          src: user.gravatar,\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this),\n        className: \"h-auto d-flex align-items-center bg-transparent border-0 rounded-0\",\n        size: \"large\",\n        type: \"primary\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      \"data-index\": \"login-button\",\n      icon: /*#__PURE__*/_jsxDEV(BellOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this),\n      className: \"bg-transparent border-0\",\n      type: \"primary\",\n      onClick: () => history.push(APP_LOGIN_URL),\n      children: t('Login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), ENABLE_LANGUAGE_SWITCHER && /*#__PURE__*/_jsxDEV(LanguageSwitcher, { ...languageSwitcherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderComponent, \"d0AJTvPk0uL1qSLc6P5ZvZ8DodQ=\", false, function () {\n  return [useTranslation, useHistory];\n});\n\n_c = HeaderComponent;\nHeaderComponent.defaultProps = defaultHeaderProps;\nconst Header = withRouter(HeaderComponent);\n_c2 = Header;\nexport default Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HeaderComponent\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["/home/teboho/opensrp-fhir-web-source/fhir-web/app/src/components/page/Header/index.tsx"],"names":["React","withRouter","useHistory","Layout","Avatar","Button","Dropdown","URL_LOGOUT","URL_USER_EDIT","BellOutlined","LanguageSwitcher","ENABLE_LANGUAGE_SWITCHER","SUPPORTED_LANGUAGES","useTranslation","getConfig","setConfig","APP_LOGIN_URL","ButtonLink","defaultHeaderProps","authenticated","user","email","name","username","extraData","languageOptions","en","fr","languageChangeHandlerFactory","i18n","languageCode","projectCode","newLanguage","changeLanguage","HeaderComponent","props","user_id","t","history","languageChangeHandler","languageSwitcherProps","value","language","onLanguageChange","allLanguageOptions","supportedLanguages","items","key","label","gravatar","push","defaultProps","Header"],"mappings":"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","sourcesContent":["// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { User } from '@onaio/session-reducer';\nimport * as React from 'react';\nimport { RouteComponentProps, withRouter, useHistory } from 'react-router';\nimport { Layout, Avatar, Button, Dropdown } from 'antd';\nimport type { MenuProps } from 'antd';\nimport './Header.css';\nimport { URL_LOGOUT, URL_USER_EDIT } from '../../../constants';\nimport { Dictionary } from '@onaio/utils';\nimport { BellOutlined } from '@ant-design/icons';\nimport { LanguageOptions, LanguageSwitcher } from '@opensrp/react-utils';\nimport { ENABLE_LANGUAGE_SWITCHER, SUPPORTED_LANGUAGES } from '../../../configs/env';\nimport { useTranslation } from '../../../mls';\nimport { getConfig, LanguageCode, setConfig } from '@opensrp/pkg-config';\nimport { APP_LOGIN_URL } from '../../../configs/dispatchConfig';\nimport { ButtonLink } from '@opensrp/react-utils';\n\n/** interface for HeaderProps */\nexport interface HeaderProps extends RouteComponentProps {\n  authenticated: boolean;\n  user: User;\n  extraData: { [key: string]: Dictionary };\n}\n\n/** default props for Header */\nconst defaultHeaderProps: Partial<HeaderProps> = {\n  authenticated: false,\n  user: {\n    email: '',\n    name: '',\n    username: '',\n  },\n  extraData: {},\n};\n\nconst languageOptions: LanguageOptions = {\n  en: 'English',\n  fr: 'FranÃ§ais',\n};\n\n/** handler called when language is changed\n *\n * @param languageCode - contains the languageOption.key of the selected language option\n */\nconst languageChangeHandlerFactory = (i18n: any) => (languageCode: string | number) => {\n  const projectCode = getConfig('projectCode');\n  if (languageCode) {\n    const newLanguage = projectCode ? `${languageCode}-${projectCode}` : (languageCode as string);\n    setConfig('languageCode', languageCode as LanguageCode);\n    i18n.changeLanguage(newLanguage);\n  }\n};\n\n/** The Header component */\nexport const HeaderComponent: React.FC<HeaderProps> = (props: HeaderProps) => {\n  const { authenticated, user, extraData } = props;\n  const { user_id } = extraData;\n  const { t, i18n } = useTranslation();\n  const history = useHistory();\n\n  /** default enum of all possible language options */\n\n  const languageChangeHandler = languageChangeHandlerFactory(i18n);\n  const languageSwitcherProps = {\n    value: i18n.language,\n    onLanguageChange: languageChangeHandler,\n    allLanguageOptions: languageOptions,\n    supportedLanguages: SUPPORTED_LANGUAGES as LanguageCode[],\n  };\n\n  const items: MenuProps['items'] = [\n    {\n      key: '1',\n      label: <ButtonLink name={t('Logout')} route={URL_LOGOUT} />,\n    },\n    {\n      key: '2',\n      label: <ButtonLink name={t('Manage account')} route={`${URL_USER_EDIT}/${user_id}`} />,\n    },\n  ];\n\n  return (\n    <Layout.Header className=\"app-header txt-white align-items-center justify-content-end px-1 layout-header\">\n      {authenticated ? (\n        <Dropdown menu={{ items }} placement=\"bottomRight\" trigger={['click', 'hover']}>\n          <Button\n            shape=\"circle\"\n            icon={\n              <Avatar className=\"mr-1 bg-white\" src={user.gravatar}>\n                {user.username}\n              </Avatar>\n            }\n            className=\"h-auto d-flex align-items-center bg-transparent border-0 rounded-0\"\n            size=\"large\"\n            type=\"primary\"\n          >\n            {user.username}\n          </Button>\n        </Dropdown>\n      ) : (\n        <Button\n          data-index=\"login-button\"\n          icon={<BellOutlined />}\n          className=\"bg-transparent border-0\"\n          type=\"primary\"\n          onClick={() => history.push(APP_LOGIN_URL)}\n        >\n          {t('Login')}\n        </Button>\n      )}\n      {ENABLE_LANGUAGE_SWITCHER && <LanguageSwitcher {...languageSwitcherProps} />}\n    </Layout.Header>\n  );\n};\n\nHeaderComponent.defaultProps = defaultHeaderProps;\n\nconst Header = withRouter(HeaderComponent);\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}