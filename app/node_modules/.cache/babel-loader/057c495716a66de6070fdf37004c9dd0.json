{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGetLocationHierarchy = exports.useGetLocation = exports.serializeTree = exports.parseFHIRHierarchy = exports.generateFhirLocationTree = exports.convertApiResToTree = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lodash = require(\"lodash\");\n\nvar _cycle = _interopRequireDefault(require(\"cycle\"));\n\nvar _treeModel = _interopRequireDefault(require(\"tree-model\"));\n\nvar _reactQuery = require(\"react-query\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _constants = require(\"../constants\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar parseFhirChildren = function parseFhirChildren(rawNodeMap) {\n  return rawNodeMap.map(function (child) {\n    var _treeNode$children;\n\n    var treeNode = child.treeNode;\n\n    var parsedNode = _objectSpread(_objectSpread({}, treeNode), {}, {\n      children: parseFhirChildren((_treeNode$children = treeNode.children) !== null && _treeNode$children !== void 0 ? _treeNode$children : [])\n    });\n\n    return parsedNode;\n  });\n};\n\nvar parseFHIRHierarchy = function parseFHIRHierarchy(fhirTree) {\n  var _rawNode$children;\n\n  var rawClone = (0, _lodash.cloneDeep)(fhirTree);\n  var listOfNodes = rawClone.LocationHierarchyTree.locationsHierarchy.listOfNodes;\n  var rawNode = listOfNodes.treeNode[0];\n\n  var parsedNode = _objectSpread(_objectSpread({}, rawNode), {}, {\n    children: parseFhirChildren((_rawNode$children = rawNode.children) !== null && _rawNode$children !== void 0 ? _rawNode$children : [])\n  });\n\n  return parsedNode;\n};\n\nexports.parseFHIRHierarchy = parseFHIRHierarchy;\n\nvar generateFhirLocationTree = function generateFhirLocationTree(rootNode) {\n  var tree = new _treeModel[\"default\"]();\n  var hierarchy = parseFHIRHierarchy(rootNode);\n  var root = tree.parse(hierarchy);\n  return root;\n};\n\nexports.generateFhirLocationTree = generateFhirLocationTree;\n\nvar convertApiResToTree = function convertApiResToTree(apiRes) {\n  var _apiRes$entry;\n\n  var rootNode = (_apiRes$entry = apiRes.entry) === null || _apiRes$entry === void 0 ? void 0 : _apiRes$entry[0].resource;\n\n  if (!rootNode) {\n    return;\n  }\n\n  return generateFhirLocationTree(rootNode);\n};\n\nexports.convertApiResToTree = convertApiResToTree;\n\nvar serializeTree = function serializeTree(trees) {\n  if (!trees) {\n    return JSON.stringify(undefined);\n  }\n\n  var sanitizeTrees = Array.isArray(trees) ? trees : [trees];\n  return JSON.stringify(sanitizeTrees.map(function (tree) {\n    return JSON.stringify(_cycle[\"default\"].decycle(tree));\n  }));\n};\n\nexports.serializeTree = serializeTree;\n\nvar useGetLocationHierarchy = function useGetLocationHierarchy(baseUrl, rootId) {\n  var queryOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var hierarchyParams = {\n    _id: rootId\n  };\n  return (0, _reactQuery.useQuery)([_constants.locationHierarchyResourceType, hierarchyParams], (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee() {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new _reactUtils.FHIRServiceClass(baseUrl, _constants.locationHierarchyResourceType).list(hierarchyParams));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), _objectSpread({\n    select: function select(res) {\n      return convertApiResToTree(res);\n    },\n    refetchInterval: false,\n    staleTime: Infinity\n  }, queryOptions));\n};\n\nexports.useGetLocationHierarchy = useGetLocationHierarchy;\n\nvar useGetLocation = function useGetLocation(baseUrl, locId) {\n  var serve = new _reactUtils.FHIRServiceClass(baseUrl, _constants.locationResourceType);\n  return (0, _reactQuery.useQuery)([_constants.locationResourceType, locId], function () {\n    return serve.read(locId);\n  }, {\n    select: function select(res) {\n      return res;\n    },\n    enabled: !!locId\n  });\n};\n\nexports.useGetLocation = useGetLocation;","map":null,"metadata":{},"sourceType":"script"}