{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFileNameFromCDHHeader = exports.downloadFile = void 0;\nexports.getResourcesFromBundle = getResourcesFromBundle;\n\nfunction getResourcesFromBundle(bundle) {\n  var _bundle$entry, _temp$map;\n\n  var temp = (_bundle$entry = bundle.entry) === null || _bundle$entry === void 0 ? void 0 : _bundle$entry.filter(function (x) {\n    return x !== undefined;\n  });\n  var rtn = (_temp$map = temp === null || temp === void 0 ? void 0 : temp.map(function (e) {\n    return e.resource;\n  })) !== null && _temp$map !== void 0 ? _temp$map : [];\n  return rtn;\n}\n\nvar downloadFile = function downloadFile(blob, filename) {\n  var contentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'application/octet-stream';\n  var blobFile = typeof blob === 'string' ? new Blob([blob], {\n    type: contentType\n  }) : blob;\n\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveOrOpenBlob(blobFile, filename);\n  } else {\n    var url = window.URL.createObjectURL(blobFile);\n    var link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    setTimeout(function () {\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    }, 200);\n  }\n};\n\nexports.downloadFile = downloadFile;\n\nvar getFileNameFromCDHHeader = function getFileNameFromCDHHeader(CDHeader) {\n  var fileName = CDHeader.split('filename=')[1].split(';')[0];\n  return fileName;\n};\n\nexports.getFileNameFromCDHHeader = getFileNameFromCDHHeader;","map":null,"metadata":{},"sourceType":"script"}