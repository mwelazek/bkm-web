{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { theme } from '@helsenorge/designsystem-react';\nimport AlertSuccess from '../../icons/AlertSuccess';\nimport { ActionButton } from '../../atoms/buttons/action-button';\nimport { DisplayButton } from '../../atoms/buttons/display-button';\nimport { FunctionActionButton } from '../../atoms/buttons/function-action-button';\nimport { Lightbox } from '../../molecules/lightbox';\nimport toolkitstyles from './../lightbox/styles.module.scss';\nexport const ConfirmBox = _a => {\n  var {\n    onClose,\n    closeText,\n    onConfirm,\n    confirmText,\n    noCloseButton,\n    children,\n    onCancel,\n    useDisplayButton,\n    useFunctionActionButton,\n    confirmButtonTestId,\n    cancelButtonTestId\n  } = _a,\n      other = __rest(_a, [\"onClose\", \"closeText\", \"onConfirm\", \"confirmText\", \"noCloseButton\", \"children\", \"onCancel\", \"useDisplayButton\", \"useFunctionActionButton\", \"confirmButtonTestId\", \"cancelButtonTestId\"]);\n\n  let comfirmButton;\n\n  if (useFunctionActionButton) {\n    comfirmButton = React.createElement(FunctionActionButton, {\n      svgIcon: React.createElement(AlertSuccess, {\n        color: theme.palette.kiwi900,\n        variant: \"success\"\n      }),\n      onClick: onConfirm,\n      testId: confirmButtonTestId\n    }, confirmText);\n  } else if (useDisplayButton) {\n    comfirmButton = React.createElement(DisplayButton, {\n      onClick: onConfirm,\n      className: toolkitstyles.lightbox__buttonwrapper__displaybutton,\n      testId: confirmButtonTestId\n    }, confirmText);\n  } else {\n    comfirmButton = React.createElement(ActionButton, {\n      onClick: onConfirm,\n      className: toolkitstyles.lightbox__buttonwrapper__actionbutton,\n      testId: confirmButtonTestId\n    }, confirmText);\n  }\n\n  const cancelButton = !noCloseButton && onCancel && React.createElement(ActionButton, {\n    className: toolkitstyles.lightbox__buttonwrapper__actionbutton,\n    tertiary: true,\n    onClick: onCancel,\n    testId: cancelButtonTestId\n  }, closeText);\n  const buttonWrapperContent = React.createElement(React.Fragment, null, confirmText ? comfirmButton : undefined, cancelButton);\n  return React.createElement(Lightbox, Object.assign({\n    isVisible: true,\n    onClose: onClose,\n    noCloseButton: true,\n    buttonWrapperContent: buttonWrapperContent\n  }, other), children);\n};","map":null,"metadata":{},"sourceType":"module"}