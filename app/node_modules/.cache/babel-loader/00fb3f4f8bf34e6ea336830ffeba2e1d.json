{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteCareTeam = exports.CareTeamList = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactHelmet = require(\"react-helmet\");\n\nvar _antd = require(\"antd\");\n\nvar _reactUtils = require(\"@opensrp/react-utils\");\n\nvar _icons = require(\"@ant-design/icons\");\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _constants = require(\"../../constants\");\n\nvar _ViewDetails = require(\"../ViewDetails\");\n\nvar _notifications = require(\"@opensrp/notifications\");\n\nvar _mls = require(\"../../mls\");\n\nvar _rbac = require(\"@opensrp/rbac\");\n\nvar _excluded = [\"permissions\"];\n\nvar deleteCareTeam = function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(fhirBaseURL, id, t) {\n    var serve;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            serve = new _reactUtils.FHIRServiceClass(fhirBaseURL, _constants.FHIR_CARE_TEAM);\n            return _context.abrupt(\"return\", serve[\"delete\"](id).then(function () {\n              return (0, _notifications.sendSuccessNotification)(t('Successfully Deleted Care Team'));\n            })[\"catch\"](function () {\n              return (0, _notifications.sendErrorNotification)(t('There was a problem deleting the Care Team'));\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function deleteCareTeam(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.deleteCareTeam = deleteCareTeam;\n\nvar getSearchParams = function getSearchParams(search) {\n  if (search) {\n    return (0, _defineProperty2[\"default\"])({}, \"name:contains\", search);\n  }\n\n  return {};\n};\n\nvar CareTeamList = function CareTeamList(props) {\n  var _sParams$get, _data$records;\n\n  var fhirBaseURL = props.fhirBaseURL;\n\n  var _useTranslation = (0, _mls.useTranslation)(),\n      t = _useTranslation.t;\n\n  var history = (0, _reactRouterDom.useHistory)();\n\n  var _useSearchParams = (0, _reactUtils.useSearchParams)(),\n      addParam = _useSearchParams.addParam,\n      sParams = _useSearchParams.sParams;\n\n  var userRole = (0, _rbac.useUserRole)();\n  var resourceId = (_sParams$get = sParams.get(_reactUtils.viewDetailsQuery)) !== null && _sParams$get !== void 0 ? _sParams$get : undefined;\n\n  var _useSimpleTabularView = (0, _reactUtils.useSimpleTabularView)(fhirBaseURL, _constants.careTeamResourceType, getSearchParams),\n      _useSimpleTabularView2 = _useSimpleTabularView.queryValues,\n      data = _useSimpleTabularView2.data,\n      isFetching = _useSimpleTabularView2.isFetching,\n      isLoading = _useSimpleTabularView2.isLoading,\n      error = _useSimpleTabularView2.error,\n      refetch = _useSimpleTabularView2.refetch,\n      tablePaginationProps = _useSimpleTabularView.tablePaginationProps,\n      searchFormProps = _useSimpleTabularView.searchFormProps;\n\n  if (error && !data) {\n    return _react[\"default\"].createElement(_reactUtils.BrokenPage, {\n      errorMessage: error.message\n    });\n  }\n\n  var tableData = ((_data$records = data === null || data === void 0 ? void 0 : data.records) !== null && _data$records !== void 0 ? _data$records : []).map(function (datum) {\n    return {\n      key: datum.id,\n      id: datum.id,\n      name: datum.name\n    };\n  });\n\n  var getItems = function getItems(record) {\n    return [{\n      key: '1',\n      permissions: ['CareTeam.delete'],\n      label: _react[\"default\"].createElement(_antd.Popconfirm, {\n        title: t('Are you sure you want to delete this Care Team?'),\n        okText: t('Yes'),\n        className: \"delCareteam\",\n        cancelText: t('No'),\n        onConfirm: (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee2() {\n          return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return deleteCareTeam(fhirBaseURL, record.id, t);\n\n                case 2:\n                  _context2.next = 4;\n                  return refetch();\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }))\n      }, _react[\"default\"].createElement(_antd.Button, {\n        danger: true,\n        \"data-testid\": \"deleteBtn\",\n        type: \"link\",\n        style: {\n          color: '#'\n        }\n      }, t('Delete')))\n    }, {\n      key: '2',\n      permissions: [],\n      label: _react[\"default\"].createElement(_antd.Button, {\n        type: \"link\",\n        onClick: function onClick() {\n          return addParam(_reactUtils.viewDetailsQuery, record.id);\n        }\n      }, \"View Details\")\n    }].filter(function (item) {\n      return userRole.hasPermissions(item.permissions);\n    }).map(function (item) {\n      var permissions = item.permissions,\n          rest = (0, _objectWithoutProperties2[\"default\"])(item, _excluded);\n      return rest;\n    });\n  };\n\n  var columns = [{\n    title: t('Name'),\n    dataIndex: 'name',\n    editable: true\n  }, {\n    title: t('Actions'),\n    width: '10%',\n    render: function render(_, record) {\n      return _react[\"default\"].createElement(\"span\", {\n        className: \"d-flex align-items-center\"\n      }, _react[\"default\"].createElement(_rbac.RbacCheck, {\n        permissions: ['CareTeam.update']\n      }, _react[\"default\"].createElement(_react[\"default\"].Fragment, null, _react[\"default\"].createElement(_reactRouterDom.Link, {\n        to: \"\".concat(_constants.URL_EDIT_CARE_TEAM, \"/\").concat(record.id.toString()),\n        className: \"m-0 p-1\"\n      }, t('Edit')), _react[\"default\"].createElement(_antd.Divider, {\n        type: \"vertical\"\n      }))), _react[\"default\"].createElement(_antd.Dropdown, {\n        menu: {\n          items: getItems(record)\n        },\n        placement: \"bottomRight\",\n        arrow: true,\n        trigger: ['click']\n      }, _react[\"default\"].createElement(_icons.MoreOutlined, {\n        className: \"more-options\",\n        \"data-testid\": \"action-dropdown\"\n      })));\n    }\n  }];\n  var tableProps = {\n    datasource: tableData,\n    columns: columns,\n    loading: isFetching || isLoading,\n    pagination: tablePaginationProps\n  };\n  return _react[\"default\"].createElement(\"div\", {\n    className: \"content-section\"\n  }, _react[\"default\"].createElement(_reactHelmet.Helmet, null, _react[\"default\"].createElement(\"title\", null, t('FHIR Care Team'))), _react[\"default\"].createElement(_reactUtils.PageHeader, {\n    title: t('FHIR Care Team')\n  }), _react[\"default\"].createElement(_antd.Row, {\n    className: \"list-view\"\n  }, _react[\"default\"].createElement(_antd.Col, {\n    className: \"main-content\"\n  }, _react[\"default\"].createElement(\"div\", {\n    className: \"main-content__header\"\n  }, _react[\"default\"].createElement(_reactUtils.SearchForm, searchFormProps), _react[\"default\"].createElement(_rbac.RbacCheck, {\n    permissions: ['CareTeam.create']\n  }, _react[\"default\"].createElement(_reactRouterDom.Link, {\n    to: _constants.URL_CREATE_CARE_TEAM\n  }, _react[\"default\"].createElement(_antd.Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return history.push(_constants.URL_CREATE_CARE_TEAM);\n    }\n  }, _react[\"default\"].createElement(_icons.PlusOutlined, null), t('Create Care Team'))))), _react[\"default\"].createElement(_reactUtils.TableLayout, tableProps)), resourceId && _react[\"default\"].createElement(_ViewDetails.ViewDetails, {\n    careTeamId: resourceId,\n    fhirBaseURL: fhirBaseURL\n  })));\n};\n\nexports.CareTeamList = CareTeamList;","map":null,"metadata":{},"sourceType":"script"}