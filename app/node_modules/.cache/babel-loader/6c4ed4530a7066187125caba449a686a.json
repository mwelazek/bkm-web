{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/teboho/opensrp-fhir-web-source/fhir-web/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar moment_1 = __importDefault(require(\"moment\"));\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar date_time_picker_1 = __importDefault(require(\"@helsenorge/toolkit/components/molecules/date-time-picker\"));\n\nvar date_time_picker_utils_1 = require(\"@helsenorge/toolkit/components/molecules/date-time-picker/date-time-picker-utils\");\n\nvar validation_1 = __importDefault(require(\"@helsenorge/toolkit/components/molecules/form/validation\"));\n\nvar date_core_1 = require(\"@helsenorge/toolkit/components/molecules/time-input/date-core\");\n\nvar languages_1 = require(\"@helsenorge/core-utils/constants/languages\");\n\nvar layout_change_1 = __importDefault(require(\"@helsenorge/core-utils/hoc/layout-change\"));\n\nvar newValue_1 = require(\"../../../actions/newValue\");\n\nvar extensions_1 = __importDefault(require(\"../../../constants/extensions\"));\n\nvar index_1 = __importDefault(require(\"../../../constants/index\"));\n\nvar extension_1 = require(\"../../../util/extension\");\n\nvar fhirpathHelper_1 = require(\"../../../util/fhirpathHelper\");\n\nvar index_2 = require(\"../../../util/index\");\n\nvar map_props_1 = require(\"../../../util/map-props\");\n\nvar with_common_functions_1 = __importDefault(require(\"../../with-common-functions\"));\n\nvar label_1 = __importDefault(require(\"../label\"));\n\nvar sublabel_1 = __importDefault(require(\"../sublabel\"));\n\nvar textview_1 = __importDefault(require(\"../textview\"));\n\nvar DateTime = /*#__PURE__*/function (_React$Component) {\n  _inherits(DateTime, _React$Component);\n\n  var _super = _createSuper(DateTime);\n\n  function DateTime() {\n    var _this;\n\n    _classCallCheck(this, DateTime);\n\n    _this = _super.apply(this, arguments);\n\n    _this.dispatchNewDate = function (date, time) {\n      var _a;\n\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          promptLoginMessage = _this$props.promptLoginMessage,\n          onAnswerChange = _this$props.onAnswerChange,\n          answer = _this$props.answer,\n          path = _this$props.path,\n          item = _this$props.item;\n      var momentDate = date_time_picker_utils_1.getFullMomentDate(date, time);\n      var dateTimeString = momentDate ? momentDate.locale('nb').utc().format(index_1.default.DATE_TIME_FORMAT) : '';\n      var existingAnswer = (answer === null || answer === void 0 ? void 0 : answer.valueDateTime) || '';\n\n      if (dispatch && existingAnswer !== dateTimeString) {\n        (_a = dispatch(newValue_1.newDateTimeValueAsync(_this.props.path, dateTimeString, _this.props.item))) === null || _a === void 0 ? void 0 : _a.then(function (newState) {\n          return onAnswerChange(newState, path, item, {\n            valueDateTime: dateTimeString\n          });\n        });\n      }\n\n      if (promptLoginMessage) {\n        promptLoginMessage();\n      }\n    };\n\n    _this.promptLogin = function () {\n      if (_this.props.promptLoginMessage) {\n        _this.props.promptLoginMessage();\n      }\n    };\n\n    _this.onBlur = function () {\n      return true;\n    };\n\n    _this.getStringValue = function () {\n      var date = _this.getDefaultDate(_this.props);\n\n      var text = '';\n\n      if (_this.props.resources && _this.props.resources.ikkeBesvart) {\n        text = _this.props.resources.ikkeBesvart;\n      }\n\n      return date ? moment_1.default(date).locale('nb').format('LLL') : text;\n    };\n\n    _this.getLocaleFromLanguage = function () {\n      var _a;\n\n      if (((_a = _this.props.language) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'en-gb') {\n        return languages_1.LanguageLocales.ENGLISH;\n      }\n\n      return languages_1.LanguageLocales.NORWEGIAN;\n    };\n\n    return _this;\n  }\n\n  _createClass(DateTime, [{\n    key: \"getDefaultDate\",\n    value: function getDefaultDate(props) {\n      var item = props.item,\n          answer = props.answer;\n\n      if (answer && answer.valueDateTime) {\n        return date_core_1.parseDate(String(answer.valueDateTime));\n      }\n\n      if (answer && answer.valueDate) {\n        return date_core_1.parseDate(String(answer.valueDate));\n      }\n\n      if (!item || !item.initial || item.initial.length === 0) {\n        return undefined;\n      }\n\n      if (!item.initial[0].valueDate && !item.initial[0].valueDateTime) {\n        return undefined;\n      }\n\n      if (item.initial[0].valueDateTime) {\n        return date_core_1.parseDate(String(item.initial[0].valueDateTime));\n      }\n\n      return date_core_1.parseDate(String(item.initial[0].valueDate));\n    }\n  }, {\n    key: \"getMaxDate\",\n    value: function getMaxDate() {\n      var maxDate = extension_1.getExtension(extensions_1.default.DATE_MAX_VALUE_URL, this.props.item);\n      if (maxDate && maxDate.valueString) return fhirpathHelper_1.evaluateFhirpathExpressionToGetDate(this.props.item, maxDate.valueString);\n      return this.getMaxDateWithExtension();\n    }\n  }, {\n    key: \"getMaxDateWithExtension\",\n    value: function getMaxDateWithExtension() {\n      var maxDate = extension_1.getExtension(extensions_1.default.MAX_VALUE_URL, this.props.item);\n\n      if (!maxDate) {\n        return;\n      }\n\n      if (maxDate.valueDate) {\n        return date_core_1.parseDate(String(maxDate.valueDate));\n      } else if (maxDate.valueDateTime) {\n        return date_core_1.parseDate(String(maxDate.valueDateTime));\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getMinDate\",\n    value: function getMinDate() {\n      var minDate = extension_1.getExtension(extensions_1.default.DATE_MIN_VALUE_URL, this.props.item);\n      if (minDate && minDate.valueString) return fhirpathHelper_1.evaluateFhirpathExpressionToGetDate(this.props.item, minDate.valueString);\n      return this.getMinDateWithExtension();\n    }\n  }, {\n    key: \"getMinDateWithExtension\",\n    value: function getMinDateWithExtension() {\n      var minDate = extension_1.getExtension(extensions_1.default.MIN_VALUE_URL, this.props.item);\n\n      if (!minDate) {\n        return;\n      }\n\n      if (minDate.valueDate) {\n        return date_core_1.parseDate(String(minDate.valueDate));\n      } else if (minDate.valueDateTime) {\n        return date_core_1.parseDate(String(minDate.valueDateTime));\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _a;\n\n      var responseItemHasChanged = this.props.responseItem !== nextProps.responseItem;\n      var helpItemHasChanged = this.props.isHelpOpen !== nextProps.isHelpOpen;\n      var resourcesHasChanged = JSON.stringify(this.props.resources) !== JSON.stringify(nextProps.resources);\n      var repeats = (_a = this.props.item.repeats) !== null && _a !== void 0 ? _a : false;\n      return responseItemHasChanged || helpItemHasChanged || resourcesHasChanged || repeats;\n    }\n  }, {\n    key: \"toLocaleDate\",\n    value: function toLocaleDate(moment) {\n      return moment ? moment.locale(this.getLocaleFromLanguage()) : undefined;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          item = _a.item,\n          pdf = _a.pdf,\n          id = _a.id,\n          onRenderMarkdown = _a.onRenderMarkdown,\n          other = __rest(_a, [\"item\", \"pdf\", \"id\", \"onRenderMarkdown\"]);\n\n      if (pdf || index_2.isReadOnly(item)) {\n        return React.createElement(textview_1.default, {\n          id: id,\n          item: item,\n          value: this.getStringValue(),\n          onRenderMarkdown: onRenderMarkdown\n        }, this.props.children);\n      }\n\n      var valueDateTime = this.getDefaultDate(this.props);\n      var maxDateTime = this.getMaxDate();\n      var minDateTime = this.getMinDate();\n      var subLabelText = index_2.getSublabelText(this.props.item, this.props.onRenderMarkdown);\n      return React.createElement(\"div\", {\n        className: \"page_skjemautfyller__component page_skjemautfyller__component_datetime\"\n      }, React.createElement(validation_1.default, Object.assign({}, other), React.createElement(date_time_picker_1.default, {\n        id: index_2.getId(id),\n        resources: {\n          dateResources: this.props.resources\n        },\n        locale: this.getLocaleFromLanguage(),\n        dateValue: valueDateTime ? this.toLocaleDate(moment_1.default(valueDateTime)) : undefined,\n        timeValue: valueDateTime ? moment_1.default(valueDateTime).format('HH:mm') : undefined,\n        maximumDateTime: maxDateTime ? this.toLocaleDate(moment_1.default(maxDateTime)) : undefined,\n        minimumDateTime: minDateTime ? this.toLocaleDate(moment_1.default(minDateTime)) : undefined,\n        initialDate: this.toLocaleDate(moment_1.default(new Date())),\n        onChange: this.dispatchNewDate,\n        onBlur: this.onBlur,\n        legend: React.createElement(label_1.default, {\n          item: this.props.item,\n          onRenderMarkdown: this.props.onRenderMarkdown\n        }),\n        subLabel: subLabelText ? React.createElement(sublabel_1.default, {\n          subLabelText: subLabelText\n        }) : undefined,\n        isRequired: index_2.isRequired(item),\n        errorMessage: extension_1.getValidationTextExtension(item),\n        timeClassName: \"page_skjemautfyller__input\",\n        helpButton: this.props.renderHelpButton(),\n        helpElement: this.props.renderHelpElement()\n      })), this.props.renderDeleteButton('page_skjemautfyller__deletebutton--margin-top'), this.props.repeatButton, this.props.children ? React.createElement(\"div\", {\n        className: \"nested-fieldset nested-fieldset--full-height\"\n      }, this.props.children) : null);\n    }\n  }]);\n\n  return DateTime;\n}(React.Component);\n\nvar withCommonFunctionsComponent = with_common_functions_1.default(DateTime);\nvar connectedComponent = react_redux_1.connect(map_props_1.mapStateToProps, map_props_1.mapDispatchToProps, map_props_1.mergeProps)(layout_change_1.default(withCommonFunctionsComponent));\nexports.default = connectedComponent;","map":null,"metadata":{},"sourceType":"script"}