{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\n\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\n\nfunction getAlphaColor(frontColor, backgroundColor) {\n  const {\n    r: fR,\n    g: fG,\n    b: fB,\n    a: originAlpha\n  } = new TinyColor(frontColor).toRgb();\n\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n\n  const {\n    r: bR,\n    g: bG,\n    b: bB\n  } = new TinyColor(backgroundColor).toRgb();\n\n  for (let fA = 0.01; fA <= 1; fA += 0.01) {\n    const r = Math.round((fR - bR * (1 - fA)) / fA);\n    const g = Math.round((fG - bG * (1 - fA)) / fA);\n    const b = Math.round((fB - bB * (1 - fA)) / fA);\n\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) {\n      return new TinyColor({\n        r,\n        g,\n        b,\n        a: Math.round(fA * 100) / 100\n      }).toRgbString();\n    }\n  } // fallback\n\n  /* istanbul ignore next */\n\n\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\n\nexport default getAlphaColor;","map":null,"metadata":{},"sourceType":"module"}