{"ast":null,"code":"import * as React from 'react';\nimport classNames from 'classnames';\nimport { theme } from '@helsenorge/designsystem-react';\nimport { AnalyticsId } from '@helsenorge/core-utils/adobe-analytics';\nimport './styles.scss';\nexport const DisplayButton = React.forwardRef((_ref, ref) => {\n  let {\n    onClick,\n    children,\n    primary,\n    secondary,\n    tertiary,\n    fullWidth,\n    formNoValidate,\n    disabled,\n    className,\n    leftIcon,\n    rightIcon,\n    leftIconSVGPath,\n    rightIconSVGPath,\n    testId\n  } = _ref;\n\n  if (!primary && !secondary && !tertiary) {\n    primary = true;\n  }\n\n  const buttonRef = React.useRef(null);\n  const classes = classNames('atom_displaybutton', {\n    'atom_displaybutton--primary': primary\n  }, {\n    'atom_displaybutton--secondary': secondary\n  }, {\n    'atom_displaybutton--tertiary': tertiary\n  }, {\n    'atom_displaybutton--fullwidth': fullWidth\n  }, {\n    'atom_displaybutton--haslefticon': leftIconSVGPath || leftIcon\n  }, {\n    'atom_displaybutton--hasrighticon': rightIconSVGPath || rightIcon\n  }, className);\n  const iconColor = primary ? theme.palette.white : theme.palette.blueberry700;\n  let leftIconComponent;\n  let rightIconComponent;\n\n  if (leftIcon) {\n    leftIconComponent = React.cloneElement(leftIcon, {\n      color: iconColor,\n      className: 'atom_displaybutton--icon-left'\n    });\n  }\n\n  if (rightIcon) {\n    rightIconComponent = React.cloneElement(rightIcon, {\n      color: iconColor,\n      className: 'atom_displaybutton--icon-right'\n    });\n  }\n\n  return React.createElement(\"button\", {\n    ref: ref ? ref : buttonRef,\n    type: \"button\",\n    onClick: onClick,\n    className: classes,\n    formNoValidate: formNoValidate,\n    disabled: disabled,\n    \"data-testid\": testId,\n    \"data-analyticsid\": AnalyticsId.DisplayButton\n  }, leftIconComponent, leftIconSVGPath && React.createElement(\"span\", {\n    className: \"atom_displaybutton--icon-left\",\n    style: {\n      backgroundImage: `url(${leftIconSVGPath})`\n    }\n  }), React.createElement(\"span\", {\n    className: \"atom_displaybutton--text\"\n  }, children), rightIconComponent, rightIconSVGPath && React.createElement(\"span\", {\n    className: \"atom_displaybutton--icon-right\",\n    style: {\n      backgroundImage: `url(${rightIconSVGPath})`\n    }\n  }));\n});\nexport default DisplayButton;","map":null,"metadata":{},"sourceType":"module"}